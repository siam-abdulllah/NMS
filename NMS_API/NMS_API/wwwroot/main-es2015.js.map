{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/admin-dashboard/admin-dashboard.component.html","./src/app/annual-requirement/annual-requirement.component.html","./src/app/app.component.html","./src/app/currency-rate/create-or-edit-currency-modal.component.html","./src/app/currency-rate/currency-rate.component.html","./src/app/employee/create-employee/create-edit-employee-modal.component.html","./src/app/employee/create-employee/edit-employee-info/edit-employee-info.component.html","./src/app/employee/create-employee/employees.component.html","./src/app/employee/create-employee/view-employee-modal-component.component.html","./src/app/importer-dashboard/importer-dashboard.component.html","./src/app/importer/change-password/change-password.component.html","./src/app/importer/edit-importer-info/edit-importer-info.component.html","./src/app/importer/edit-info/edit-info.component.html","./src/app/importer/importer-management/importer-management.component.html","./src/app/importer/importer-management/view-importer-modal.component.html","./src/app/login/login.component.html","./src/app/lookUpTabelModals/annual-requirement-lookup-table-modal.component.html","./src/app/lookUpTabelModals/proforma-invoice-lookup-table-modal.component.html","./src/app/lookUpTabelModals/role-lookup-table-modal.component.html","./src/app/lookUpTabelModals/user-lookup-table-modal.component.html","./src/app/noc-report/noc-report.component.html","./src/app/page-not-found/page-not-found.component.html","./src/app/portal/portal.component.html","./src/app/proforma-approval-summary-report/proforma-approval-summary-report.component.html","./src/app/proforma-invoice-approval/proforma-invoice-approval.component.html","./src/app/proforma-invoice-report/proforma-invoice-report.component.html","./src/app/proforma-invoice/proforma-invoice.component.html","./src/app/register/register.component.html","./src/app/role-management/role-management.component.html","./src/app/role-management/role/create-edit-role-modal.component.html","./src/app/role-management/role/role.component.html","./src/app/role-management/user-role-assign/create-edit-user-role-assign-modal.component.html","./src/app/role-management/user-role-assign/user-role-assign.component.html","./node_modules/tslib/tslib.es6.js","./src/app/_guard/adminRole.guard.ts","./src/app/_guard/importerRole.guard.ts","./src/app/_guard/superAdminRole.guard.ts","./src/app/_services/admin-dashboard.service.ts","./src/app/_services/alertify.service.ts","./src/app/_services/annual-requirement.service.ts","./src/app/_services/currency.service.ts","./src/app/_services/employee.service.ts","./src/app/_services/importer-dashboard.service.ts","./src/app/_services/importer-info.service.ts","./src/app/_services/login.service.ts","./src/app/_services/proforma-invoice-approval.service.ts","./src/app/_services/proforma-invoice-report.service.ts","./src/app/_services/proforma-invoice.service.ts","./src/app/_services/register.service.ts","./src/app/_services/role.service.ts","./src/app/_services/shared-data.service.ts","./src/app/_services/user-role-assign.service.ts","./src/app/admin-dashboard/admin-dashboard.component.css","./src/app/admin-dashboard/admin-dashboard.component.ts","./src/app/annual-requirement/annual-requirement.component.css","./src/app/annual-requirement/annual-requirement.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/common/app-component-base.ts","./src/app/currency-rate/create-or-edit-currency-modal.component.css","./src/app/currency-rate/create-or-edit-currency-modal.component.ts","./src/app/currency-rate/currency-rate.component.css","./src/app/currency-rate/currency-rate.component.ts","./src/app/employee/create-employee/create-edit-employee-modal.component.css","./src/app/employee/create-employee/create-edit-employee-modal.component.ts","./src/app/employee/create-employee/edit-employee-info/edit-employee-info.component.css","./src/app/employee/create-employee/edit-employee-info/edit-employee-info.component.ts","./src/app/employee/create-employee/employees.component.css","./src/app/employee/create-employee/employees.component.ts","./src/app/employee/create-employee/view-employee-modal-component.component.css","./src/app/employee/create-employee/view-employee-modal-component.component.ts","./src/app/helpers/PrimengTableHelper.ts","./src/app/helpers/file-download.service.ts","./src/app/importer-dashboard/importer-dashboard.component.css","./src/app/importer-dashboard/importer-dashboard.component.ts","./src/app/importer/change-password/change-password.component.css","./src/app/importer/change-password/change-password.component.ts","./src/app/importer/edit-importer-info/edit-importer-info.component.css","./src/app/importer/edit-importer-info/edit-importer-info.component.ts","./src/app/importer/edit-info/edit-info.component.css","./src/app/importer/edit-info/edit-info.component.ts","./src/app/importer/importer-management/importer-management.component.css","./src/app/importer/importer-management/importer-management.component.ts","./src/app/importer/importer-management/view-importer-modal.component.css","./src/app/importer/importer-management/view-importer-modal.component.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/login/login.module.ts","./src/app/lookUpTabelModals/annual-requirement-lookup-table-modal.component.css","./src/app/lookUpTabelModals/annual-requirement-lookup-table-modal.component.ts","./src/app/lookUpTabelModals/proforma-invoice-lookup-table-modal.component.css","./src/app/lookUpTabelModals/proforma-invoice-lookup-table-modal.component.ts","./src/app/lookUpTabelModals/role-lookup-table-modal.component.less","./src/app/lookUpTabelModals/role-lookup-table-modal.component.ts","./src/app/lookUpTabelModals/user-lookup-table-modal.component.less","./src/app/lookUpTabelModals/user-lookup-table-modal.component.ts","./src/app/noc-report/noc-report.component.css","./src/app/noc-report/noc-report.component.ts","./src/app/page-not-found/page-not-found.component.css","./src/app/page-not-found/page-not-found.component.ts","./src/app/portal/portal-routing.module.ts","./src/app/portal/portal.component.css","./src/app/portal/portal.component.ts","./src/app/portal/portal.module.ts","./src/app/proforma-approval-summary-report/proforma-approval-summary-report.component.css","./src/app/proforma-approval-summary-report/proforma-approval-summary-report.component.ts","./src/app/proforma-invoice-approval/proforma-invoice-approval.component.css","./src/app/proforma-invoice-approval/proforma-invoice-approval.component.ts","./src/app/proforma-invoice-report/proforma-invoice-report.component.css","./src/app/proforma-invoice-report/proforma-invoice-report.component.ts","./src/app/proforma-invoice/proforma-invoice.component.css","./src/app/proforma-invoice/proforma-invoice.component.ts","./src/app/register/register.component.css","./src/app/register/register.component.ts","./src/app/role-management/role-management.component.css","./src/app/role-management/role-management.component.ts","./src/app/role-management/role/create-edit-role-modal.component.css","./src/app/role-management/role/create-edit-role-modal.component.ts","./src/app/role-management/role/role.component.css","./src/app/role-management/role/role.component.ts","./src/app/role-management/user-role-assign/create-edit-user-role-assign-modal.component.css","./src/app/role-management/user-role-assign/create-edit-user-role-assign-modal.component.ts","./src/app/role-management/user-role-assign/user-role-assign.component.css","./src/app/role-management/user-role-assign/user-role-assign.component.ts","./src/app/shared/service-proxies/service-proxy.module.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,we,+YAAgV,sfAAsf,uFAAuF,ynBAAynB,6FAA6F,krBAAkrB,2GAA2G,itBAAitB,6FAA6F,0sBAA0sB,6GAA6G,urBAAurB,uFAAuF,urBAAurB,uFAAuF,8Z;;;;;;;;;;;;ACAhiL;AAAe,8eAA+a,kBAAkB,mQAAmQ,kBAAkB,6PAA6P,oBAAoB,mLAAmL,6JAA6J,6SAA6S,0LAA0L,iBAAiB,sIAAsI,8FAA8F,ggEAAggE,oHAAoH,uyBAAuyB,qQAAqQ,aAAa,wPAAwP,m2BAAm2B,iCAAiC,snBAAsnB,gQAAgQ,oTAAoT,YAAY,6CAA6C,YAAY,6CAA6C,UAAU,6CAA6C,YAAY,qEAAqE,KAAK,kBAAkB,qEAAqE,KAAK,eAAe,gnBAAgnB,aAAa,mDAAmD,YAAY,iKAAiK,+GAA+G,qzBAAqzB,qLAAqL,8GAA8G,skCAAskC,2ZAA2Z,8GAA8G,4+BAA4+B,oLAAoL,0GAA0G,siCAAsiC,+KAA+K,8GAA8G,mqCAAmqC,+uBAA+uB,wzBAAwzB,gPAAgP,0SAA0S,aAAa,2fAA2f,aAAa,qOAAqO,+GAA+G,8eAA8e,aAAa,uPAAuP,wKAAwK,cAAc,gKAAgK,uKAAuK,iBAAiB,+EAA+E,iBAAiB,+EAA+E,sFAAsF,6LAA6L,gCAAgC,gYAAgY,KAAK,MAAM,uCAAuC,eAAe,gEAAgE,KAAK,cAAc,2CAA2C,cAAc,6IAA6I,oLAAoL,yBAAyB,4GAA4G,wBAAwB,2KAA2K,YAAY,2OAA2O,YAAY,mIAAmI,yIAAyI,eAAe,wIAAwI,qIAAqI,kBAAkB,ujBAAujB,mBAAmB,yPAAyP,aAAa,yQAAyQ,0+CAA0+C,aAAa,olBAAolB,8GAA8G,mPAAmP,8EAA8E,8EAA8E,iBAAiB,gGAAgG,eAAe,oFAAoF,eAAe,wNAAwN,cAAc,uGAAuG,uPAAuP,+LAA+L,KAAK,MAAM,2CAA2C,eAAe,oEAAoE,KAAK,cAAc,+CAA+C,cAAc,2CAA2C,wBAAwB,mLAAmL,YAAY,+PAA+P,YAAY,+IAA+I,6IAA6I,eAAe,kJAAkJ,6IAA6I,kBAAkB,qeAAqe,+CAA+C,6cAA6c,sCAAsC,0oBAA0oB,eAAe,kEAAkE,eAAe,4yBAA4yB,oDAAoD,kB;;;;;;;;;;;;ACA338B;AAAe,gG;;;;;;;;;;;;ACAf;AAAe,gPAAiL,mBAAmB,qrBAAqrB,yXAAyX,yRAAyR,6CAA6C,2qCAA2qC,sTAAsT,6CAA6C,m1BAAm1B,6CAA6C,sqC;;;;;;;;;;;;ACAr9H;AAAe,w5EAAy1E,+CAA+C,u2EAAu2E,2YAA2Y,qeAAqe,iBAAiB,2QAA2Q,mBAAmB,6QAA6Q,qBAAqB,+fAA+f,+CAA+C,keAAke,uCAAuC,ia;;;;;;;;;;;;ACAtvO;AAAe,8OAA+K,mBAAmB,4mBAA4mB,qaAAqa,qFAAqF,gGAAgG,4MAA4M,mDAAmD,4gBAA4gB,2PAA2P,2DAA2D,2kBAA2kB,gSAAgS,+CAA+C,qrBAAqrB,4oBAA4oB,mvBAAmvB,iPAAiP,qDAAqD,4hBAA4hB,0SAA0S,qDAAqD,kqBAAkqB,gRAAgR,mEAAmE,m5C;;;;;;;;;;;;ACA5jP;AAAe,ycAA0Y,kBAAkB,sPAAsP,mOAAmO,oBAAoB,ihBAAihB,4mBAA4mB,sBAAsB,qIAAqI,8mBAA8mB,uBAAuB,qIAAqI,snBAAsnB,0BAA0B,uIAAuI,+mBAA+mB,oBAAoB,qIAAqI,4nBAA4nB,wBAAwB,kkCAAkkC,iJAAiJ,gGAAgG,gYAAgY,mDAAmD,27BAA27B,6cAA6c,2DAA2D,0iCAA0iC,ydAAyd,+CAA+C,uqCAAuqC,ugCAAugC,6nCAA6nC,icAAic,qDAAqD,i8CAAi8C,oBAAoB,8rBAA8rB,kPAAkP,oHAAoH,ipBAAipB,yNAAyN,4GAA4G,w5CAAw5C,mOAAmO,oHAAoH,2mCAA2mC,wDAAwD,2IAA2I,cAAc,gBAAgB,kBAAkB,yWAAyW,sDAAsD,kB;;;;;;;;;;;;ACApipB;AAAe,22EAA4yE,+CAA+C,qmGAAqmG,4TAA4T,mYAAmY,yiBAAyiB,gBAAgB,qQAAqQ,gBAAgB,4QAA4Q,oBAAoB,sQAAsQ,cAAc,+QAA+Q,kBAAkB,yQAAyQ,iBAAiB,+fAA+f,+CAA+C,geAAge,uCAAuC,ie;;;;;;;;;;;;ACAhoS;AAAe,gPAAiL,mBAAmB,miBAAmiB,uWAAuW,2kBAA2kB,cAAc,8lBAA8lB,4hBAA4hB,eAAe,+NAA+N,gcAAgc,snBAAsnB,qDAAqD,qtBAAqtB,ocAAoc,qnBAAqnB,mEAAmE,w9BAAw9B,4kBAA4kB,kBAAkB,6KAA6K,qkBAAqkB,YAAY,ktBAAktB,gBAAgB,m5B;;;;;;;;;;;;ACAh/R;AAAe,kZAAmV,+lBAA+lB,6FAA6F,ynBAAynB,mGAAmG,wnBAAwnB,iGAAiG,woBAAwoB,mHAAmH,mU;;;;;;;;;;;;ACA9sG;AAAe,+XAAgU,oBAAoB,+rBAA+rB,kPAAkP,oHAAoH,ipBAAipB,yNAAyN,4GAA4G,w5CAAw5C,mOAAmO,oHAAoH,2mCAA2mC,wDAAwD,2IAA2I,cAAc,gBAAgB,kBAAkB,yWAAyW,sDAAsD,sB;;;;;;;;;;;;ACA10L;AAAe,wYAAyU,kBAAkB,iLAAiL,0WAA0W,mBAAmB,KAAK,sBAAsB,qSAAqS,omBAAomB,sBAAsB,iIAAiI,8lBAA8lB,0BAA0B,iIAAiI,smBAAsmB,wBAAwB,iIAAiI,6lBAA6lB,uBAAuB,iIAAiI,wlBAAwlB,iCAAiC,iIAAiI,ylBAAylB,oBAAoB,qIAAqI,8lBAA8lB,uBAAuB,iIAAiI,8lBAA8lB,uBAAuB,iIAAiI,6lBAA6lB,sBAAsB,iIAAiI,6lBAA6lB,sBAAsB,iIAAiI,gmBAAgmB,6BAA6B,iIAAiI,kmBAAkmB,2BAA2B,orBAAorB,oBAAoB,qL;;;;;;;;;;;;ACAnsV;AAAe,qYAAsU,oBAAoB,2sBAA2sB,mNAAmN,gGAAgG,ihCAAihC,2KAA2K,0FAA0F,y/BAAy/B,qNAAqN,4FAA4F,g/BAAg/B,+MAA+M,oFAAoF,ysCAAysC,oNAAoN,0FAA0F,ozCAAozC,8MAA8M,oFAAoF,0vCAA0vC,wFAAwF,o3BAAo3B,kDAAkD,+HAA+H,cAAc,gBAAgB,kBAAkB,kXAAkX,sDAAsD,sB;;;;;;;;;;;;ACAtlW;AAAe,gxFAAitF,+CAA+C,2lJAA2lJ,gUAAgU,wiBAAwiB,gBAAgB,6QAA6Q,oBAAoB,+QAA+Q,kBAAkB,yQAAyQ,iBAAiB,sQAAsQ,cAAc,yQAAyQ,iBAAiB,yQAAyQ,iBAAiB,yQAAyQ,iBAAiB,wQAAwQ,gBAAgB,wQAAwQ,gBAAgB,iRAAiR,uBAAuB,gRAAgR,qBAAqB,uQAAuQ,cAAc,imBAAimB,uBAAuB,8kBAA8kB,gBAAgB,+kBAA+kB,gBAAgB,mgBAAmgB,+CAA+C,geAAge,uCAAuC,wW;;;;;;;;;;;;ACAh6c;AAAe,gPAAiL,mBAAmB,oiBAAoiB,kUAAkU,mBAAmB,KAAK,cAAc,6rBAA6rB,gpBAAgpB,cAAc,yIAAyI,0oBAA0oB,kBAAkB,yIAAyI,kpBAAkpB,gBAAgB,yIAAyI,yoBAAyoB,eAAe,yIAAyI,ooBAAooB,eAAe,+NAA+N,gcAAgc,snBAAsnB,qDAAqD,qtBAAqtB,ocAAoc,qnBAAqnB,mEAAmE,w9BAAw9B,qoBAAqoB,YAAY,6IAA6I,0oBAA0oB,eAAe,yIAAyI,0oBAA0oB,eAAe,yIAAyI,yoBAAyoB,cAAc,yIAAyI,yoBAAyoB,cAAc,yIAAyI,4oBAA4oB,qBAAqB,yIAAyI,8oBAA8oB,mBAAmB,uuBAAuuB,YAAY,41B;;;;;;;;;;;;ACA1xf;AAAe,4GAA6C,+JAA+J,+TAA+T,mBAAmB,6DAA6D,iBAAiB,eAAe,mBAAmB,iIAAiI,iBAAiB,qBAAqB,6FAA6F,eAAe,mBAAmB,eAAe,8OAA8O,wRAAwR,oFAAoF,ueAAue,oFAAoF,g+BAAg+B,mBAAmB,8LAA8L,uCAAuC,mDAAmD,cAAc,gBAAgB,kBAAkB,+GAA+G,kBAAkB,6DAA6D,0iBAA0iB,oDAAoD,0B;;;;;;;;;;;;ACA9rI;AAAe,qQAAsM,mBAAmB,6OAA6O,aAAa,qPAAqP,03CAA03C,aAAa,4jBAA4jB,sGAAsG,mOAAmO,0EAA0E,0EAA0E,iBAAiB,4FAA4F,eAAe,gFAAgF,eAAe,4MAA4M,cAAc,mGAAmG,uOAAuO,uLAAuL,KAAK,MAAM,uCAAuC,eAAe,gEAAgE,KAAK,cAAc,2CAA2C,cAAc,uCAAuC,wBAAwB,uKAAuK,YAAY,2OAA2O,YAAY,mIAAmI,qIAAqI,eAAe,sIAAsI,qIAAqI,kBAAkB,6bAA6b,+CAA+C,qbAAqb,sCAAsC,wc;;;;;;;;;;;;ACA9tM;AAAe,gPAAiL,mBAAmB,2bAA2b,+4BAA+4B,uaAAua,aAAa,gMAAgM,YAAY,suCAAsuC,gCAAgC,8yBAA8yB,0BAA0B,gMAAgM,8BAA8B,gMAAgM,6BAA6B,kPAAkP,YAAY,w1B;;;;;;;;;;;;ACAp6J;AAAe,mRAAoN,mBAAmB,scAAsc,w+IAAw+I,oBAAoB,kQAAkQ,iBAAiB,2mBAA2mB,+CAA+C,goBAAgoB,sCAAsC,koB;;;;;;;;;;;;ACA3wN;AAAe,gPAAiL,mBAAmB,saAAsa,27HAA27H,oBAAoB,ukBAAukB,+CAA+C,qjBAAqjB,sCAAsC,4jB;;;;;;;;;;;;ACAzxL;AAAe,m0BAAowB,0PAA0P,mJAAmJ,oBAAoB,iRAAiR,iBAAiB,uPAAuP,uTAAuT,oBAAoB,8gBAA8gB,wBAAwB,mQAAmQ,2LAA2L,mcAAmc,qDAAqD,gfAAgf,uLAAuL,8cAA8c,iDAAiD,g/DAAg/D,63BAA63B,gCAAgC,4bAA4b,qDAAqD,ouDAAouD,qZAAqZ,uEAAuE,0hFAA0hF,grCAAgrC,aAAa,2uBAA2uB,mBAAmB,ypBAAypB,kBAAkB,6hBAA6hB,YAAY,OAAO,GAAG,YAAY,qRAAqR,mBAAmB,yEAAyE,cAAc,6IAA6I,mBAAmB,iEAAiE,iBAAiB,sPAAsP,qLAAqL,gBAAgB,8XAA8X,YAAY,iNAAiN,kBAAkB,0MAA0M,kBAAkB,2KAA2K,aAAa,qJAAqJ,aAAa,sTAAsT,kBAAkB,0KAA0K,aAAa,gUAAgU,kBAAkB,24CAA24C,u5BAAu5B,aAAa,swCAAswC,gCAAgC,moBAAmoB,0BAA0B,4JAA4J,8BAA8B,4JAA4J,6BAA6B,8MAA8M,YAAY,gNAAgN,oBAAoB,2eAA2e,mBAAmB,cAAc,cAAc,iCAAiC,2DAA2D,aAAa,4EAA4E,oBAAoB,kIAAkI,sBAAsB,4JAA4J,iBAAiB,oBAAoB,iDAAiD,qDAAqD,aAAa,sJAAsJ,eAAe,cAAc,gHAAgH,iDAAiD,YAAY,YAAY,oBAAoB,iHAAiH,aAAa,cAAc,oBAAoB,yRAAyR,iGAAiG,qDAAqD,YAAY,6KAA6K,iBAAiB,kLAAkL,0HAA0H,iBAAiB,oDAAoD,eAAe,GAAG,eAAe,mGAAmG,gDAAgD,cAAc,mLAAmL,eAAe,GAAG,eAAe,uDAAuD,cAAc,gJAAgJ,+UAA+U,gBAAgB,6BAA6B,SAAS,OAAO,WAAW,gQAAgQ,mBAAmB,SAAS,6QAA6Q,gBAAgB,iCAAiC,OAAO,OAAO,OAAO,OAAO,OAAO,yBAAyB,wBAAwB,8GAA8G,cAAc,qGAAqG,eAAe,yNAAyN,uJAAuJ,4KAA4K,iJAAiJ,cAAc,2BAA2B,iBAAiB,8DAA8D,cAAc,2BAA2B,0CAA0C,wDAAwD,2BAA2B,0CAA0C,oEAAoE,sEAAsE,4DAA4D,oBAAoB,sBAAsB,2BAA2B,4IAA4I,oBAAoB,sBAAsB,2BAA2B,6JAA6J,oBAAoB,qBAAqB,2BAA2B,kJAAkJ,mBAAmB,qBAAqB,2BAA2B,uJAAuJ,oBAAoB,qBAAqB,2BAA2B,gKAAgK,mBAAmB,qBAAqB,2BAA2B,8IAA8I,mBAAmB,qBAAqB,2BAA2B,qNAAqN,sEAAsE,2DAA2D,wBAAwB,oBAAoB,2BAA2B,mBAAmB,kFAAkF,YAAY,+NAA+N,wBAAwB,iBAAiB,2BAA2B,mBAAmB,oFAAoF,sBAAsB,YAAY,4GAA4G,KAAK,YAAY,OAAO,GAAG,YAAY,0IAA0I,wBAAwB,2BAA2B,mBAAmB,6CAA6C,mBAAmB,gDAAgD,cAAc,4FAA4F,mBAAmB,wBAAwB,2BAA2B,mBAAmB,0CAA0C,iBAAiB,6FAA6F,wBAAwB,2BAA2B,mBAAmB,oFAAoF,sBAAsB,YAAY,uIAAuI,gBAAgB,oLAAoL,gBAAgB,wBAAwB,2BAA2B,qFAAqF,uBAAuB,YAAY,0FAA0F,YAAY,0IAA0I,mBAAmB,wBAAwB,2BAA2B,mBAAmB,uGAAuG,2EAA2E,kBAAkB,wDAAwD,aAAa,2NAA2N,kBAAkB,yHAAyH,aAAa,4PAA4P,kBAAkB,4jBAA4jB,oJAAoJ,ojPAAojP,kBAAkB,oBAAoB,ukBAAukB,iEAAiE,usBAAusB,iEAAiE,osBAAosB,iEAAiE,omBAAomB,iEAAiE,ueAAue,iEAAiE,8cAA8c,iEAAiE,qaAAqa,iEAAiE,maAAma,iEAAiE,8bAA8b,iEAAiE,ocAAoc,iEAAiE,0hBAA0hB,iEAAiE,mcAAmc,iEAAiE,kcAAkc,iEAAiE,kdAAkd,iEAAiE,qcAAqc,iEAAiE,iU;;;;;;;;;;;;ACA16mD;AAAe,6N;;;;;;;;;;;;ACAf;AAAe,mcAAoY,wqCAAwqC,eAAe,+SAA+S,8BAA8B,eAAe,SAAS,eAAe,+CAA+C,iBAAiB,KAAK,uBAAuB,u2BAAu2B,0oJAA0oJ,iW;;;;;;;;;;;;ACA3gP;AAAe,2mCAA4iC,s0BAAs0B,2FAA2F,2LAA2L,ykBAAykB,uLAAuL,qlBAAqlB,wCAAwC,yKAAyK,gSAAgS,MAAM,MAAM,MAAM,kMAAkM,sCAAsC,uKAAuK,mSAAmS,MAAM,MAAM,MAAM,mMAAmM,wCAAwC,yKAAyK,mSAAmS,MAAM,MAAM,MAAM,mMAAmM,UAAU,mHAAmH,qTAAqT,MAAM,MAAM,MAAM,sNAAsN,6OAA6O,gQAAgQ,qPAAqP,k1BAAk1B,scAAsc,gvBAAgvB,aAAa,wLAAwL,YAAY,iIAAiI,2FAA2F,4MAA4M,4MAA4M,0LAA0L,gGAAgG,4GAA4G,mHAAmH,oGAAoG,wGAAwG,iMAAiM,yLAAyL,4FAA4F,kWAAkW,gCAAgC,umBAAumB,6TAA6T,wBAAwB,qHAAqH,wBAAwB,gWAAgW,YAAY,uOAAuO,qBAAqB,2DAA2D,yBAAyB,oYAAoY,aAAa,gLAAgL,eAAe,q4CAAq4C,kBAAkB,uJAAuJ,kBAAkB,+6BAA+6B,sYAAsY,+wBAA+wB,mBAAmB,wSAAwS,YAAY,odAAod,YAAY,+PAA+P,iBAAiB,qYAAqY,uBAAuB,6RAA6R,uBAAuB,2RAA2R,uBAAuB,kUAAkU,iPAAiP,4BAA4B,yPAAyP,4gCAA4gC,0EAA0E,yGAAyG,4EAA4E,+xBAA+xB,sDAAsD,kB;;;;;;;;;;;;ACA/tsB;AAAe,yqBAA0mB,mJAAmJ,8dAA8d,+IAA+I,8eAA8e,+MAA+M,iuBAAiuB,oVAAoV,wlBAAwlB,aAAa,sJAAsJ,YAAY,kFAAkF,iEAAiE,6IAA6I,yIAAyI,uHAAuH,0EAA0E,sFAAsF,6FAA6F,0EAA0E,gFAAgF,oGAAoG,qHAAqH,mBAAmB,6HAA6H,mBAAmB,sJAAsJ,mRAAmR,gCAAgC,8iBAA8iB,0KAA0K,oPAAoP,wBAAwB,yCAAyC,wBAAwB,sOAAsO,YAAY,yIAAyI,qBAAqB,qCAAqC,yBAAyB,yMAAyM,wBAAwB,0JAA0J,sBAAsB,oHAAoH,wBAAwB,u8BAAu8B,kBAAkB,uHAAuH,kBAAkB,2oBAA2oB,0SAA0S,2hBAA2hB,mBAAmB,oMAAoM,YAAY,wSAAwS,YAAY,iKAAiK,iBAAiB,yRAAyR,uBAAuB,uMAAuM,uBAAuB,qMAAqM,uBAAuB,wMAAwM,mKAAmK,4BAA4B,2JAA2J,ovBAAovB,0EAA0E,kHAAkH,4EAA4E,syBAAsyB,yGAAyG,qCAAqC,2VAA2V,4BAA4B,kGAAkG,gCAAgC,qGAAqG,mCAAmC,oCAAoC,mCAAmC,oHAAoH,oCAAoC,gLAAgL,8BAA8B,qGAAqG,uBAAuB,4GAA4G,4BAA4B,0GAA0G,0BAA0B,6kCAA6kC,yIAAyI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,q8BAAq8B,aAAa,0IAA0I,YAAY,20BAA20B,YAAY,+BAA+B,YAAY,+BAA+B,UAAU,+BAA+B,gBAAgB,+BAA+B,YAAY,uDAAuD,KAAK,sBAAsB,uDAAuD,KAAK,aAAa,uDAAuD,KAAK,wBAAwB,0DAA0D,KAAK,yBAAyB,uDAAuD,KAAK,uBAAuB,uDAAuD,KAAK,4BAA4B,0DAA0D,+KAA+K,kQAAkQ,8BAA8B,yFAAyF,4BAA4B,ifAAif,yGAAyG,qCAAqC,2VAA2V,4BAA4B,kGAAkG,gCAAgC,qGAAqG,mCAAmC,oCAAoC,mCAAmC,oHAAoH,oCAAoC,gLAAgL,8BAA8B,qGAAqG,uBAAuB,4GAA4G,4BAA4B,0GAA0G,0BAA0B,glCAAglC,yIAAyI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,q8BAAq8B,aAAa,0IAA0I,YAAY,wlDAAwlD,MAAM,YAAY,MAAM,wOAAwO,4DAA4D,YAAY,+BAA+B,gBAAgB,+BAA+B,YAAY,uDAAuD,KAAK,aAAa,uDAAuD,KAAK,aAAa,uDAAuD,KAAK,eAAe,0DAA0D,2pCAA2pC,aAAa,kEAAkE,eAAe,iQAAiQ,KAAK,4BAA4B,uDAAuD,gFAAgF,0EAA0E,sFAAsF,4EAA4E,+GAA+G,4EAA4E,gOAAgO,sDAAsD,kB;;;;;;;;;;;;ACAx95B;AAAe,iaAAkW,kaAAka,yEAAyE,mJAAmJ,8dAA8d,+IAA+I,0eAA0e,sCAAsC,mJAAmJ,+QAA+Q,MAAM,MAAM,MAAM,0IAA0I,oCAAoC,iJAAiJ,kRAAkR,MAAM,MAAM,MAAM,2IAA2I,sCAAsC,mJAAmJ,kRAAkR,MAAM,MAAM,MAAM,qJAAqJ,uOAAuO,0PAA0P,+OAA+O,owBAAowB,oVAAoV,4lBAA4lB,aAAa,+PAA+P,uFAAuF,qEAAqE,+IAA+I,+IAA+I,uHAAuH,8EAA8E,sFAAsF,4FAA4F,8EAA8E,kFAAkF,8HAA8H,sHAAsH,gGAAgG,yRAAyR,gCAAgC,mjBAAmjB,uNAAuN,wBAAwB,qEAAqE,wBAAwB,sOAAsO,YAAY,yIAAyI,qBAAqB,qCAAqC,yBAAyB,oQAAoQ,eAAe,iHAAiH,aAAa,08BAA08B,kBAAkB,uHAAuH,kBAAkB,2oBAA2oB,0SAA0S,2hBAA2hB,mBAAmB,oMAAoM,YAAY,wSAAwS,YAAY,iKAAiK,iBAAiB,yRAAyR,uBAAuB,uMAAuM,uBAAuB,qMAAqM,uBAAuB,wMAAwM,mKAAmK,4BAA4B,2JAA2J,ovBAAovB,0EAA0E,kHAAkH,4EAA4E,iiBAAiiB,sDAAsD,kB;;;;;;;;;;;;ACAz6f;AAAe,oeAAqa,+FAA+F,yJAAyJ,oBAAoB,+JAA+J,4JAA4J,4SAA4S,yLAAyL,iBAAiB,2IAA2I,2EAA2E,w0BAAw0B,wvBAAwvB,yMAAyM,0HAA0H,kmBAAkmB,iBAAiB,mfAAmf,iBAAiB,kfAAkf,iBAAiB,gtCAAgtC,kLAAkL,gHAAgH,u6CAAu6C,+IAA+I,sHAAsH,iuBAAiuB,4LAA4L,wGAAwG,0KAA0K,YAAY,svBAAsvB,+IAA+I,kHAAkH,6vBAA6vB,2LAA2L,8GAA8G,qhBAAqhB,8GAA8G,i2BAAi2B,qJAAqJ,oGAAoG,s4BAAs4B,6IAA6I,sGAAsG,44BAA44B,yJAAyJ,4GAA4G,s7BAAs7B,wGAAwG,o9BAAo9B,gGAAgG,2nBAA2nB,62CAA62C,kCAAkC,gnBAAgnB,qOAAqO,qSAAqS,YAAY,mDAAmD,YAAY,mDAAmD,UAAU,mDAAmD,gBAAgB,mDAAmD,YAAY,2EAA2E,KAAK,sBAAsB,2EAA2E,KAAK,eAAe,uHAAuH,KAAK,aAAa,2EAA2E,KAAK,gBAAgB,2EAA2E,KAAK,uBAAuB,2EAA2E,KAAK,4BAA4B,2jBAA2jB,aAAa,qDAAqD,0BAA0B,mLAAmL,6GAA6G,+4BAA+4B,8GAA8G,4MAA4M,YAAY,+QAA+Q,qLAAqL,8GAA8G,0TAA0T,utBAAutB,qZAAqZ,wIAAwI,8GAA8G,2gCAA2gC,wIAAwI,0GAA0G,mmCAAmmC,wIAAwI,sHAAsH,olCAAolC,wIAAwI,8GAA8G,umCAAumC,0FAA0F,2KAA2K,gHAAgH,goCAAgoC,uCAAuC,scAAsc,0FAA0F,oNAAoN,oHAAoH,+7CAA+7C,sCAAsC,ijBAAijB,0FAA0F,2MAA2M,gHAAgH,0tCAA0tC,MAAM,gIAAgI,4sBAA4sB,ynBAAynB,qsBAAqsB,0OAA0O,4QAA4Q,aAAa,sfAAsf,aAAa,mQAAmQ,6GAA6G,6DAA6D,8cAA8c,qNAAqN,aAAa,mQAAmQ,mMAAmM,aAAa,4PAA4P,miBAAmiB,kCAAkC,oTAAoT,KAAK,aAAa,+CAA+C,YAAY,+CAA+C,YAAY,uEAAuE,KAAK,2BAA2B,4EAA4E,KAAK,eAAe,0EAA0E,KAAK,sCAAsC,ifAAif,aAAa,8PAA8P,6GAA6G,iKAAiK,aAAa,mQAAmQ,mMAAmM,aAAa,quBAAquB,eAAe,wFAAwF,0FAA0F,0FAA0F,2FAA2F,uNAAuN,gCAAgC,ugBAAugB,KAAK,MAAM,+CAA+C,iBAAiB,+CAA+C,qBAAqB,+CAA+C,uBAAuB,+JAA+J,gOAAgO,yBAAyB,iIAAiI,iBAAiB,+CAA+C,eAAe,6JAA6J,cAAc,aAAa,oBAAoB,uNAAuN,cAAc,oBAAoB,iNAAiN,KAAK,YAAY,2yCAA2yC,eAAe,kEAAkE,eAAe,43BAA43B,oDAAoD,kB;;;;;;;;;;;;ACAr1kD;AAAe,0HAA2D,WAAW,gBAAgB,mBAAmB,kFAAkF,cAAc,+SAA+S,gBAAgB,iBAAiB,gBAAgB,uUAAuU,8sBAA8sB,sOAAsO,gGAAgG,84BAA84B,uOAAuO,wGAAwG,6xBAA6xB,8NAA8N,kGAAkG,0zBAA0zB,2OAA2O,oGAAoG,6vBAA6vB,gOAAgO,4FAA4F,ghCAAghC,kPAAkP,kGAAkG,+OAA+O,YAAY,2fAA2f,qNAAqN,kGAAkG,uQAAuQ,YAAY,0fAA0f,6OAA6O,gGAAgG,mKAAmK,WAAW,iiBAAiiB,qPAAqP,gGAAgG,iwBAAiwB,uOAAuO,8GAA8G,o8BAAo8B,mPAAmP,0GAA0G,qzBAAqzB,oXAAoX,8GAA8G,4IAA4I,gBAAgB,okBAAokB,oOAAoO,4FAA4F,uuBAAuuB,gVAAgV,gGAAgG,uIAAuI,gBAAgB,+gBAA+gB,wVAAwV,gGAAgG,uIAAuI,gBAAgB,6mBAA6mB,oOAAoO,kGAAkG,mgBAAmgB,iBAAiB,2VAA2V,iBAAiB,0VAA0V,iBAAiB,wyCAAwyC,0OAA0O,kGAAkG,+jCAA+jC,0RAA0R,oQAAoQ,0xBAA0xB,sDAAsD,kIAAkI,cAAc,gBAAgB,kBAAkB,sTAAsT,sDAAsD,sB;;;;;;;;;;;;ACArrxB;AAAe,4+C;;;;;;;;;;;;ACAf;AAAe,gPAAiL,mBAAmB,2oBAA2oB,iXAAiX,0QAA0Q,6CAA6C,odAAod,+CAA+C,wnBAAwnB,0QAA0Q,6CAA6C,geAAge,+CAA+C,2oC;;;;;;;;;;;;ACAv8G;AAAe,y1EAA0xE,+CAA+C,6hEAA6hE,uYAAuY,6dAA6d,aAAa,0QAA0Q,iBAAiB,+fAA+f,+CAA+C,4dAA4d,uCAAuC,+Y;;;;;;;;;;;;ACAljN;AAAe,gPAAiL,mBAAmB,isBAAisB,wkI;;;;;;;;;;;;ACAp5B;AAAe,y3EAA0zE,+CAA+C,oiEAAoiE,+YAA+Y,miBAAmiB,iBAAiB,oQAAoQ,iBAAiB,+fAA+f,+CAA+C,geAAge,uCAAuC,+a;;;;;;;;;;;;ACAzqN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACzN2C;AACW;AACI;AACM;AAKhE,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YACU,YAA0B,EAC1B,MAAc,EACd,OAAwB;QAFxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAiB;IAAG,CAAC;IACtC,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YAC3F,iDAAiD;YAC/C,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;CACF;;YAjByB,oEAAY;YAClB,sDAAM;YACL,0EAAe;;AAJvB,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAmB1B;AAnB0B;;;;;;;;;;;;;;;;;;;;;ACRgB;AACW;AACI;AACM;AAKhE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YACU,YAA0B,EAC1B,MAAc,EACd,OAAwB;QAFxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAiB;IAAG,CAAC;IACtC,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YAC9F,iDAAiD;YAC/C,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACvC,OAAO,KAAK,CAAC;IACf,CAAC;CACF;;YAjByB,oEAAY;YAClB,sDAAM;YACL,0EAAe;;AAJvB,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAmB7B;AAnB6B;;;;;;;;;;;;;;;;;;;;;ACRa;AACW;AACI;AACM;AAKhE,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAC9B,YACU,YAA0B,EAC1B,MAAc,EACd,OAAwB;QAFxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAiB;IAAG,CAAC;IACtC,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YAC1C,gDAAgD;YAChD,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;CACF;;YAjByB,oEAAY;YAClB,sDAAM;YACL,0EAAe;;AAJvB,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAmB/B;AAnB+B;;;;;;;;;;;;;;;;;;;;ACRW;AACoB;AACJ;AAE3D,mEAAmE;AAKnE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAGhC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,YAAY,CAAC;IACJ,CAAC;IACzC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,CAAC;IAC/D,CAAC;CACF;;YAJ2B,+DAAU;;AAHzB,qBAAqB;IAHjC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,qBAAqB,CAOjC;AAPiC;;;;;;;;;;;;;;;;;;ACTS;AAM3C,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,gBAAgB,CAAC;IACjB,OAAO,CAAC,OAAe,EAAE,UAAqB;QAC5C,QAAQ,CAAC,OAAO,CAAE,OAAO,EAAE,UAAS,CAAC;YACnC,IAAI,CAAC,EAAE;gBACL,UAAU,EAAE,CAAC;aACd;iBAAM,GAAE;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO,CAAC,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IACD,KAAK,CAAC,OAAe;QACnB,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IACD,OAAO,CAAC,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO,CAAC,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;CACF;AAtBY,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAsB3B;AAtB2B;;;;;;;;;;;;;;;;;;;;;ACNe;AACO;AACI;AAEtD,mEAAmE;AACR;AAK3D,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAInC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,oBAAoB,CAAC;QACpD,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAEK,CAAC;IACzC,wBAAwB,CAAC,KAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;IACD,0BAA0B,CAAC,KAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,4BAA4B,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IACD,uBAAuB,CAAC,KAAU;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,yBAAyB,EAAE,KAAK,CAAC,CAAC;IACzE,CAAC;IACD,wBAAwB,CAAC,KAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IACD,wBAAwB,CAAC,KAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,iCAAiC,EAAE,KAAK,CAAC,CAAC;IACjF,CAAC;IACD,2BAA2B,CAAC,IAAS;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IACD,wBAAwB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,CAAC,CAAC;IAClE,CAAC;IACD,iCAAiC,CAAC,GAAQ;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,mCAAmC,EAAE,GAAG,CAAC,CAAC;IACjF,CAAC;IACD,0BAA0B,CAAC,GAAQ;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,4BAA4B,EAAE,GAAG,CAAC,CAAC;IAC1E,CAAC;IACD,2CAA2C,CAAC,KAAU;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,6CAA6C,EAAE,KAAK,CAAC,CAAC;IAC7F,CAAC;IACD,wBAAwB,CAAC,KAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;CACF;;YAlC2B,+DAAU;;AAJzB,wBAAwB;IAHpC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,wBAAwB,CAsCpC;AAtCoC;;;;;;;;;;;;;;;;;;;;;ACVM;AACO;AACI;AAEtD,mEAAmE;AACR;AAK3D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAM1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,aAAQ,GAAG,wEAAW,CAAC,MAAM,GAAG,WAAW,CAAC;QAC5C,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,eAAe,CAAC;QAE/C,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAEK,CAAC;IACzC,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC;IACtD,CAAC;IAED,kBAAkB,CAAC,KAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,mBAAmB,CAAC,IAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,EAAE,CAAC,CAAC;IAC/D,CAAC;IACD,gBAAgB,CAAC,KAAU,EAAE,EAAU;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IACD,kBAAkB,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE,CAAC,CAAC;IACrE,CAAC;CACF;;YAtB2B,+DAAU;;AANzB,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA4B3B;AA5B2B;;;;;;;;;;;;;;;;;;;;;ACVe;AACoB;AACJ;AACL;AACtD,mEAAmE;AAKnE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAK1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,iBAAiB,CAAC;QACjD,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAEK,CAAC;IAEzC,kBAAkB,CAAC,KAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,iBAAiB,CAAC,IAAS;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAGD,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,oBAAoB,CAAC,KAAU,EAAE,EAAU;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IACD,oBAAoB,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IAC7C,CAAC;CAEF;;YArB2B,+DAAU;;AALzB,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA0B3B;AA1B2B;;;;;;;;;;;;;;;;;;;;ACTe;AACoB;AACJ;AAE3D,mEAAmE;AAKnE,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAGnC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,YAAY,CAAC;IACJ,CAAC;IACzC,gBAAgB,CAAC,KAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;CACF;;YAJ2B,+DAAU;;AAHzB,wBAAwB;IAHpC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;;;;;;;;;ACTM;AACoB;AAC/D,mEAAmE;AACR;AAK3D,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAI9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,eAAe,CAAC;IAEP,CAAC;IAEzC,mBAAmB,CAAC,IAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IACD,sBAAsB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,CAAC,CAAC;IAChE,CAAC;IACD,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,CAAC;IAC7D,CAAC;IACD,mBAAmB,CAAC,KAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IACD,iBAAiB,CAAC,UAAe;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAE,UAAU,CAAC,CAAC;IACxE,CAAC;CACF;;YAjB2B,+DAAU;;AAJzB,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAqB/B;AArB+B;;;;;;;;;;;;;;;;;;;;;;ACRW;AACO;AACI;AACnB;AACnC,mEAAmE;AACR;AAK3D,IAAa,YAAY,GAAzB,MAAa,YAAY;IAIvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,OAAO,CAAC;QACvC,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAEK,CAAC;IACvC,KAAK,CAAC,KAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,KAAK,CAAC;aACnD,IAAI,CACH,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAClB,MAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IACD,SAAS;QACP,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,MAAM,CAAC;IAClB,CAAC;IACD,WAAW;QACT,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,WAAW;QACT,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,WAAW,CAAC;IACvB,CAAC;IACD,mBAAmB;QACjB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,WAAW,CAAC;IACvB,CAAC;IACD,WAAW;QACT,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,KAAK,CAAC;IACjB,CAAC;IACD,eAAe;QACb,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,gBAAgB,CAAC;IAC5B,CAAC;CACF;;YA/CyB,+DAAU;;AAJzB,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAmDtB;AAnDsB;;;;;;;;;;;;;;;;;;;;;ACVkB;AACO;AACS;AACZ;AAC/C,mEAAmE;AAKnE,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAGzC,YACY,IAAgB,EAChB,YAA0B;QAD1B,SAAI,GAAJ,IAAI,CAAY;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAJtC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,0BAA0B,CAAC;QAC1D,aAAQ,GAAG,wEAAW,CAAC,MAAM,GAAG,wBAAwB,CAAC;IAInD,CAAC;IACL,mCAAmC,CAAC,SAAc;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qCAAqC,EAAE,SAAS,CAAC,CAAC;IAC3F,CAAC;IACD,6BAA6B;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,+BAA+B,CAAC,CAAC;IACvE,CAAC;IACD,sBAAsB,CAAC,IAAS;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IACD,qBAAqB,CAAC,IAAS;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IACD,aAAa;IACb,kCAAkC,CAAC,SAAc;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,oCAAoC,EAAE,SAAS,CAAC,CAAC;IACxF,CAAC;IACD,6BAA6B,CAAC,KAAU;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,+BAA+B,EAAE,KAAK,CAAC,CAAC;IAClF,CAAC;CACF;;YAtBmB,+DAAU;YACF,2DAAY;;AAL3B,8BAA8B;IAH1C,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,8BAA8B,CA0B1C;AA1B0C;;;;;;;;;;;;;;;;;;;;ACTA;AACO;AACS;AAE3D,mEAAmE;AAKnE,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAEvC,YACY,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,iBAAiB,CAAC;IAG3C,CAAC;IAEL,6BAA6B,CAAC,KAAU;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,+BAA+B,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IACD,kCAAkC,CAAC,KAAU;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,oCAAoC,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IACD,0BAA0B,CAAC,KAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,4BAA4B,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IACD,wBAAwB,CAAC,KAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;CAEJ;;YAhBmB,+DAAU;;AAHjB,4BAA4B;IAHxC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,4BAA4B,CAmBxC;AAnBwC;;;;;;;;;;;;;;;;;;;;;ACTE;AACO;AACS;AACZ;AAC/C,mEAAmE;AAKnE,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAGjC,YACY,IAAgB,EAChB,YAA0B;QAD1B,SAAI,GAAJ,IAAI,CAAY;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAJtC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,oBAAoB,CAAC;QACpD,aAAQ,GAAG,wEAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC;IAGT,CAAC;IAC3C,2BAA2B,CAAC,WAAgB;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,wBAAwB,EAAE,WAAW,CAAC,CAAC;IAC/E,CAAC;IACD,8BAA8B,CAAC,8BAAmC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;IAC1G,CAAC;IACD,mCAAmC,CAAC,0BAA+B;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,qCAAqC,EAAE,0BAA0B,CAAC,CAAC;IAC3G,CAAC;IACD,sBAAsB,CAAC,MAAW;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,wBAAwB,EAAE,MAAM,CAAC,CAAC;IAC1E,CAAC;IACD,sBAAsB,CAAC,KAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,wBAAwB,EAAE,KAAK,CAAC,CAAC;IACzE,CAAC;IACD,mBAAmB,CAAC,QAAkB,EAAE,EAAU;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC/E,CAAC;IACD,8BAA8B,CAAC,QAAa;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,gCAAgC,EAAE,QAAQ,CAAC,CAAC;IACpF,CAAC;IACD,4BAA4B,CAAC,gBAAqB;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,8BAA8B,EAAE,gBAAgB,CAAC,CAAC;IAC1F,CAAC;IACD,YAAY,CAAC,QAAkB,EAAE,OAAe;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,eAAe,GAAG,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7E,CAAC;IACD,aAAa,CAAC,QAAkB,EAAE,OAAe;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,GAAG,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC9E,CAAC;IACD,cAAc,CAAC,QAAkB,EAAE,OAAe;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,GAAG,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC/E,CAAC;IACD,eAAe,CAAC,QAAkB,EAAE,OAAe;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,GAAG,OAAO,EAAE,QAAQ,CAAC,CAAC;IAChF,CAAC;IACD,wBAAwB,CAAC,aAAkB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,0BAA0B,EAAE,aAAa,CAAC,CAAC;IACnF,CAAC;IACD,wBAAwB,CAAC,kBAAuB,EAAE,KAAa;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,2BAA2B,GAAG,KAAK,EAAE,kBAAkB,CAAC,CAAC;IACjG,CAAC;IACD,qBAAqB,CAAC,QAAa;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,uBAAuB,EAAE,QAAQ,CAAC,CAAC;IAC3E,CAAC;IACD,mBAAmB,CAAC,MAAW;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,EAAE,MAAM,CAAC,CAAC;IACvE,CAAC;IACD,wBAAwB,CAAC,KAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IACD,0BAA0B,CAAC,KAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;CACF;;YAxDmB,+DAAU;YACF,2DAAY;;AAL3B,sBAAsB;IAHlC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,sBAAsB,CA4DlC;AA5DkC;;;;;;;;;;;;;;;;;;;;ACTM;AACsB;AAC/D,mEAAmE;AACR;AAK3D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAExB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADrC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,OAAO,CAAC;IACC,CAAC;IACzC,QAAQ,CAAC,KAAK;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,KAAK,EAAE;YAC5D,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,MAAM,EAAG,KAAK;aACf,CAAC;SACP,CAAC,CAAC;IACP,CAAC;IACD,kBAAkB,CAAC,QAAkB,EAAE,EAAU;QAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC/E,CAAC;IACD,mBAAmB,CAAC,KAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IACD,UAAU,CAAC,KAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IACD,aAAa,CAAC,QAAkB,EAAE,EAAU;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IACD,qBAAqB,CAAC,KAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,EAAE,KAAK,CAAC,CAAC;IACzE,CAAC;IACD,6BAA6B,CAAC,KAAU;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,+BAA+B,EAAE,KAAK,CAAC,CAAC;IACjF,CAAC;IACD,cAAc,CAAC,KAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IACD,sBAAsB,CAAC,KAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;IACD,uBAAuB,CAAC,KAAU;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,yBAAyB,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IACD,+BAA+B,CAAC,KAAU;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,iCAAiC,EAAE,KAAK,CAAC,CAAC;IACnF,CAAC;CACJ;;YAzC8B,+DAAU;;AAF5B,eAAe;IAH3B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,eAAe,CA2C3B;AA3C2B;;;;;;;;;;;;;;;;;;;;ACRe;AACoB;AACJ;AAK3D,IAAa,WAAW,GAAxB,MAAa,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,WAAW,CAAC;IAI3C,CAAC;IACD,cAAc,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAChE,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAI,cAAc,GAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IACD,YAAY,CAAC,KAAU,EAAE,EAAU;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IACD,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;IACjE,CAAC;CACF;;YApB2B,+DAAU;;AAJzB,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAwBvB;AAxBuB;;;;;;;;;;;;;;;;;;ACPmB;AAK3C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;CAElB;AAJY,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAI7B;AAJ6B;;;;;;;;;;;;;;;;;;;;ACLa;AACoB;AACJ;AAK3D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAIhC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,eAAe,CAAC;IAI/C,CAAC;IACD,kBAAkB,CAAC,KAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,mBAAmB,CAAC,IAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAI,kBAAkB,GAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;IACD,gBAAgB,CAAC,KAAU,EAAE,EAAU;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IACD,kBAAkB,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE,CAAC,CAAC;IACrE,CAAC;IACD,wBAAwB,CAAC,IAAQ;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IACD,wBAAwB,CAAC,IAAQ;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;CACF;;YA1B2B,+DAAU;;AAJzB,qBAAqB;IAHjC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,qBAAqB,CA8BjC;AA9BiC;;;;;;;;;;;;;ACPlC;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;ACAX;AAC2B;AAO7E,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAElC,YACU,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAClD,CAAC;IAEL,QAAQ;QACN,IAAI,CAAE,gBAAgB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG;YACxB,uBAAuB,EAAE,CAAC;YAC1B,gBAAgB,EAAE,CAAC;YACnB,gBAAgB,EAAE,CAAC;YACnB,aAAa,EAAE,CAAC;YAChB,uBAAuB,EAAE,CAAC;YAC1B,aAAa,EAAE,CAAC;YAChB,aAAa,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAI,CAAC,kBAAkB,GAAG,IAA2B,CAAC;QACxD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAtBkC,uFAAqB;;AAH3C,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,iPAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAyBnC;AAzBmC;;;;;;;;;;;;;ACRpC;AAAe,iFAAkB,uCAAuC,KAAK,SAAS,oBAAoB,6BAA6B,KAAK,+BAA+B,6CAA6C,0CAA0C,qCAAqC,0CAA0C,KAAK,6BAA6B,wCAAwC,yCAAyC,wCAAwC,uBAAuB,2BAA2B,+BAA+B,6BAA6B,SAAS,kBAAkB,mCAAmC,+CAA+C,gCAAgC,SAAS,iBAAiB,6CAA6C,SAAS,sBAAsB,6BAA6B,SAAS,uBAAuB,2CAA2C,SAAS,QAAQ,yCAAyC,0CAA0C,0DAA0D,SAAS,yBAAyB,8BAA8B,EAAE,QAAQ,qBAAqB,oCAAoC,MAAM,uBAAuB,uCAAuC,kCAAkC,KAAK,uBAAuB,0CAA0C,kCAAkC,KAAK,oBAAoB,yCAAyC,KAAK,2DAA2D,gCAAgC,KAAK,+CAA+C,+rG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhjD;AACO;AACb;AACJ;AACA;AACN;AACyB;AAIhB;AAC1C;AACM;AACY;AAO3C,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IA4HrC,YACU,YAA4B,EAC5B,eAAgC,EAChC,QAAyB,EACzB,YAA0B,EAC1B,wBAAkD,EAClD,QAAkB;QALlB,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAU;QAxH5B,eAAU,GAAG,EAAE,CAAC;QAEhB,WAAM,GAAG,KAAK,CAAC;QASf,uBAAkB,GAA4B,EAAE,CAAC;QACjD,eAAU,GAAG,EAAE,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;QAEjB,YAAO,GAA6B,EAAE,CAAC;QACvC,mBAAc,GAAG,EAAE,CAAC;QACb,YAAO,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,EAAE,CAAC;QAChB,MAAC,GAAQ,CAAC,CAAC;QACX,sBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,qBAAgB,GAAG,KAAK,CAAC;QAIzB,wBAAmB,GAAG,IAAI,CAAC;QAC3B,kBAAa,GAAG,EAAE,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,qBAAgB,GAAG,KAAK,CAAC;QACzB,oBAAe,GAAG,MAAM,CAAC;QAEzB,YAAO,GAAC,EAAE,CAAC;QACX,cAAc;QACd,iBAAY,GAAG;YACb,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,gCAAgC,EAAE;YACjD,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE;YAChC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE;YACtC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACnC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE;YAC/B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;YAC5B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE;YAC1B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,uCAAuC,EAAE;YACxD,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACnC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;YAChC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACnC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACpC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,yBAAyB,EAAE;YAC3C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,uBAAuB,EAAE;YACzC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE;YACrC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACxB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACpC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,4BAA4B,EAAE;YAC9C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;YACjC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE;YACrC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC3B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACpC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;YAC7B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,uBAAuB,EAAE;YACzC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE;YAC5C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,6BAA6B,EAAE;YAC/C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE;YACrC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACnC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,4CAA4C,EAAE;YAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACpC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;YAC/B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;YAChC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;YAC5B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,sCAAsC,EAAE;YACxD,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACnC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;YAC7B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACnC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC1B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,2BAA2B,EAAE;YAC7C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,6BAA6B,EAAE;YAC/C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,+CAA+C,EAAE;YACjE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;YACjC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC1B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE;YACpC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;YACjC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,2BAA2B,EAAE;YAC7C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;YAC7B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,6BAA6B,EAAE;YAC/C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;YAChC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,sCAAsC,EAAE;YACxD,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;YACjC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mCAAmC,EAAE;YACrD,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,qBAAqB,EAAE;YACvC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE;YAC1C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE;YACrC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE;YAC5C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,yBAAyB,EAAE;YAC3C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,sBAAsB,EAAE;YACxC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,4BAA4B,EAAE;YAC9C,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAClC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mCAAmC,EAAE;YACrD,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,gCAAgC,EAAE;YAClD,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,sCAAsC,EAAE;YACxD,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,mEAAmE,EAAE;YACrF,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,0CAA0C,EAAE;YAC5D,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,+BAA+B,EAAE;SAClD,CAAC;QAIF,EAAE;QAGF,cAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QASxI,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAkB,EAAE,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,uBAAuB;QACvB,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,EAAE;IACF,MAAM,CAAC,KAAqB;QAC1B,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,MAAM,IAAI,GAA0B;YAClC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;YACtE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,wBAAwB,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACjF,MAAM,CAAC,GAAG,MAAyB,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;gBACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC1C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;gBAC/C,wBAAwB;YAC1B,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,wBAAwB;gBACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,yBAAyB,CAAC,KAAqB;QAC7C,0DAA0D;QAC1D,kCAAkC;QAClC,YAAY;QACZ,IAAI;QAEJ,kDAAkD;QAElD,wCAAwC;QACxC,6BAA6B;QAC7B,iEAAiE;QACjE,4EAA4E;QAC5E,qFAAqF;QACrF,IAAI;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxE,IAAI,CAAC,OAAO,GAAG,IAAgC,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IACD,EAAE;IACF,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;IACH,CAAC;IACD,8BAA8B;QAC5B,IAAI,CAAC,wBAAwB,GAAG,IAAI,wDAAS,CAAC;YAC5C,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IACD,2BAA2B;QACzB,IAAI,CAAC,sBAAsB,GAAG,IAAI,wDAAS,CAAC;YAC1C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,kCAAkC;YAClC,yBAAyB;YACzB,8BAA8B;YAC9B,MAAM;YACN,QAAQ,EAAE,IAAI,0DAAW,CAAC,gCAAgC,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClF,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,sCAAsC;YACtC,yBAAyB;YACzB,8BAA8B;YAC9B,MAAM;YACN,yCAAyC;YACzC,yBAAyB;YACzB,6BAA6B;YAC7B,MAAM;YACN,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,wCAAwC;YACxC,yBAAyB;YACzB,6BAA6B;YAC7B,iDAAiD;YACjD,MAAM;YACN,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAClC,wBAAwB;gBACxB,6BAA6B;gBAC7B,yDAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC;aAC7C,CAAC;YAEF,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC/B,yBAAyB;gBACzB,6BAA6B;gBAC7B,yDAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC;aAC7C,CAAC;SAUH,CAAC,CAAC;IACL,CAAC;IACD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/C,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,QAA0B;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/C,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,IAAY;QAC3B,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;YACpC,2DAA2D;SAC5D;QACD,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;SACpC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACxC,CAAC;IACD,oBAAoB;IACpB,kDAAkD;IAClD,gBAAgB;IAChB,+CAA+C;IAC/C,SAAS;IACT,iBAAiB;IACjB,4BAA4B;IAC5B,QAAQ;IACR,OAAO;IACP,IAAI;IACJ,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IACD,uBAAuB;IACvB,+DAA+D;IAC/D,sBAAsB;IACtB,sDAAsD;IACtD,qDAAqD;IACrD,sCAAsC;IACtC,sCAAsC;IACtC,QAAQ;IACR,QAAQ;IACR,mEAAmE;IACnE,wEAAwE;IACxE,uEAAuE;IACvE,yBAAyB;IACzB,iEAAiE;IACjE,oEAAoE;IACpE,0EAA0E;IAC1E,2FAA2F;IAC3F,kFAAkF;IAClF,MAAM;IACN,WAAW;IACX,mEAAmE;IACnE,oEAAoE;IACpE,0EAA0E;IAC1E,2FAA2F;IAC3F,kFAAkF;IAClF,MAAM;IAEN,IAAI;IACJ,oBAAoB;IACpB,8DAA8D;IAC9D,IAAI;IACJ,eAAe;IACf,YAAY;QACV,IAAI,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,cAAc,CAAC;QACpE,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;SAC/D;aACI;YACH,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;SAC9D;IACH,CAAC;IACD,aAAa;QACX,IAAI,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW,CAAC;QAClE,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE,CAAC;SAClE;aACI;YACH,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;SACjE;IACH,CAAC;IACD,EAAE;IACF,gBAAgB;QAEd,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,GAA0B;gBAC/B,EAAE,EAAE,CAAC;gBACL,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM;gBAChD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,+DAA+D;gBAC/D,sEAAsE;gBACtE,cAAc,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,cAAc;gBAChE,0DAA0D;gBAC1D,4DAA4D;gBAC5D,sEAAsE;gBACtE,uDAAuD;gBACvD,+DAA+D;gBAC/D,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW;aAC3D,CAAC;YACF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBACvC,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACzD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;oBAC3C,OAAO,KAAK,CAAC;iBACd;aACF;YACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1B,MAAM,CAAC,GAA0B;gBAC/B,EAAE,EAAE,CAAC;gBACL,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM;gBAChD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,gEAAgE;gBAChE,sEAAsE;gBACtE,cAAc,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,cAAc;gBAChE,0DAA0D;gBAC1D,4DAA4D;gBAC5D,sEAAsE;gBACtE,wDAAwD;gBACxD,gEAAgE;gBAChE,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW;aAC3D,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACxB,gCAAgC;YAChC,uDAAuD;YACvD,mCAAmC;YACnC,gCAAgC;YAChC,uDAAuD;YACvD,yCAAyC;YACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;YACpC,gCAAgC;YAChC,uDAAuD;YACvD,6BAA6B;YAC7B,gCAAgC;YAChC,uDAAuD;YACvD,+BAA+B;YAC/B,gCAAgC;YAChC,uDAAuD;YACvD,yCAAyC;YACzC,gCAAgC;YAChC,uDAAuD;YACvD,2BAA2B;YAC3B,gCAAgC;YAChC,uDAAuD;YACvD,mCAAmC;YACnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;YAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;SACrC;IACH,CAAC;IACD,aAAa,CAAC,CAAwB;QACpC,QAAQ,CAAC;QACT,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAC;YAC5E,OAAO,KAAK,CAAC;SACd;QACD,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvD,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE;oBACtD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACtC;aACF;SACF;aAAM;YACL,OAAO;SACR;IACH,CAAC;IACD,WAAW,CAAC,CAAwB;QAElC,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kDAAkD,CAAC,CAAC;YAC1E,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,MAAM,EAAE,CAAC,CAAC,MAAM;YAChB,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,gCAAgC;YAChC,sCAAsC;YACtC,cAAc,EAAE,CAAC,CAAC,cAAc,IAAI,SAAS,IAAI,IAAI;YACrD,0BAA0B;YAC1B,4BAA4B;YAC5B,sCAAsC;YACtC,wBAAwB;YACxB,gCAAgC;YAChC,WAAW,EAAE,CAAC,CAAC,WAAW,IAAI,SAAS,IAAI,IAAI;SAChD,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;aACI;YACH,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,uBAAuB,EAAE;aAC/B;iBACI;gBACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;SACF;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,0BAA0B;QAExB,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC5C,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;SAC9B;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;YAAA,CAAC;SAC7D;QAED,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACpD,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACzD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAEjC,MAAM,WAAW,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/C,MAAM,SAAS,GAA0B;YACvC,EAAE,EAAE,CAAC;YACL,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,IAAI,CAAC,eAAe;YAChC,cAAc,EAAE,IAAI,IAAI,EAAE;YAC1B,YAAY,EAAE,KAAK;SACpB,CAAC;QACF,MAAM,QAAQ,GAA0B;YACtC,UAAU,EAAE,IAAI,CAAC,eAAe;SACjC,CAAC;QACF,IAAI,GAAQ,CAAC;QACb,IAAI,KAAU,CAAC;QACf,IAAI,CAAC,wBAAwB,CAAC,2CAA2C,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvG,GAAG,GAAG,QAAQ,CAAC;YAEf,IAAI,CAAC,GAAG,EAAE;gBACR,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACpF,KAAK,GAAG,QAAQ,CAAC;oBACjB,IAAI,CAAC,KAAK,EAAE;wBACV,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,SAAS,CACzE,IAAI,CAAC,EAAE;4BACL,MAAM,YAAY,GAAG,IAA6B,CAAC;4BACnD,IAAI,UAAU,GAA4B,EAAE,CAAC;4BAC7C,0CAA0C;4BAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACvD,MAAM,GAAG,GAA0B;oCACjC,EAAE,EAAE,CAAC;oCACL,WAAW,EAAE,YAAY,CAAC,EAAE;oCAC5B,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ;oCAC7C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ;oCAC7C,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM;oCACzC,yDAAyD;oCACzD,gEAAgE;oCAChE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ;oCAC7C,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,cAAc;oCACzD,mDAAmD;oCACnD,qDAAqD;oCACrD,+DAA+D;oCAC/D,iDAAiD;oCACjD,yDAAyD;oCACzD,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW;iCACpD,CAAC;gCACF,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;6BACtB;4BACD,IAAI,CAAC,wBAAwB;iCAC1B,wBAAwB,CAAC,UAAU,CAAC;iCACpC,SAAS,CACR,MAAM,CAAC,EAAE;gCACP,MAAM,YAAY,GAAG,MAAiC,CAAC;gCACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gCACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;gCAC5D,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;gCAC7B,UAAU,GAAG,EAAE,CAAC;gCAChB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;4BACnC,CAAC,EACD,GAAG,CAAC,EAAE;gCACJ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;gCACtD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACnB,CAAC,CACF,CAAC;wBACN,CAAC,EACD,KAAK,CAAC,EAAE;4BACN,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;4BACtD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC;qBACN;yBACI;wBACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;wBAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC;wBAC7E,IAAI,CAAC,SAAS,EAAE,CAAC;qBAClB;gBACH,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;oBAC5D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;aAEJ;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAuD,CAAC,CAAC;aAChF;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uBAAuB;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;YAAA,CAAC;SAC7D;QAED,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACpD,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACzD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAEjC,MAAM,WAAW,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/C,MAAM,SAAS,GAA0B;YACvC,EAAE,EAAE,IAAI,CAAC,KAAK;YACd,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,eAAe;YAChC,cAAc,EAAE,IAAI,IAAI,EAAE;YAC1B,YAAY,EAAE,KAAK;SACpB,CAAC;QACF,MAAM,QAAQ,GAA0B;YACtC,UAAU,EAAE,IAAI,CAAC,eAAe;SACjC,CAAC;QACF,IAAI,CAAC,wBAAwB,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,SAAS,CAC3E,IAAI,CAAC,EAAE;YACL,MAAM,YAAY,GAAG,IAA6B,CAAC;YACnD,IAAI,UAAU,GAA4B,EAAE,CAAC;YAC7C,0CAA0C;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvD,MAAM,GAAG,GAA0B;oBACjC,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,WAAW,EAAE,YAAY,CAAC,EAAE;oBAC5B,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ;oBAC7C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ;oBAC7C,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM;oBACzC,wDAAwD;oBACxD,+DAA+D;oBAC/D,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ;oBAC7C,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,cAAc;oBACzD,mDAAmD;oBACnD,qDAAqD;oBACrD,+DAA+D;oBAC/D,iDAAiD;oBACjD,yDAAyD;oBACzD,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW;iBACpD,CAAC;gBACF,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;YACD,IAAI,CAAC,wBAAwB;iBAC1B,wBAAwB,CAAC,UAAU,CAAC;iBACpC,SAAS,CACR,MAAM,CAAC,EAAE;gBACP,MAAM,YAAY,GAAG,MAAiC,CAAC;gBACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;gBAC9D,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;gBAC7B,UAAU,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACnC,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACxD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACF,CAAC;QACN,CAAC,CACF,CAAC;IAEJ,CAAC;IACD,8CAA8C;IAC9C,kCAAkC;QAChC,IAAI,CAAC,2CAA2C,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;IACzF,CAAC;IACD,2CAA2C,CAAC,QAA0B;QACpE,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpE,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,aAAa;QACX,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IACD,aAAa;QACX,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;IACD,uBAAuB;QACrB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;SAC5D;QACD,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACpD,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACzD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAEjC,MAAM,WAAW,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/C,MAAM,SAAS,GAA0B;YACvC,EAAE,EAAE,IAAI,CAAC,KAAK;YACd,UAAU,EAAE,IAAI,CAAC,eAAe;YAChC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,cAAc,EAAE,IAAI,IAAI,EAAE;YAC1B,YAAY,EAAE,IAAI;SACnB,CAAC;QACF,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,SAAS,CACxE,IAAI,CAAC,EAAE;YACL,MAAM,YAAY,GAAG,IAA6B,CAAC;YACnD,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC;QACrE,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IACD,EAAE;IACF,wBAAwB;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAChD,MAAM,QAAQ,GAA0B;YACtC,UAAU,EAAE,GAAG;SAChB,CAAC;QAEF,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChF,IAAI,CAAC,OAAO,GAAG,IAAgC,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IACD,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,kCAAkC;IACpC,CAAC;IACD,wBAAwB;QACtB,cAAc;QACd,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,uCAAuC;QACvC,uBAAuB;QACvB,+EAA+E;QAC/E,qDAAqD;QACrD,0CAA0C;QAC1C,0BAA0B;QAC1B,cAAc;QACd,0BAA0B;QAC1B,4CAA4C;QAC5C,sBAAsB;QACtB,MAAM;IACR,CAAC;IAED,eAAe,CAAC,CAAyB;QACvC,kBAAkB;QAClB,MAAM,MAAM,GAA6B;YACvC,KAAK,EAAE,CAAC,CAAC,EAAE;YACX,qBAAqB;YACrB,UAAU,EAAE,CAAC,CAAC,UAAU;YACxB,WAAW,EAAE,CAAC,CAAC,WAAW;SAC3B,CAAC;QACF,IAAI,CAAC,wBAAwB,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChF,IAAI,CAAC,YAAY,GAAG,IAA8B,CAAC;YACnD,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,uBAA4B,CAAC;QACjC,IAAI,CAAC,CAAC,cAAc,KAAK,SAAS,IAAI,CAAC,CAAC,cAAc,KAAK,IAAI,EAAE;YAC/D,uBAAuB,GAAG,CAAC,CAAC,cAAc,CAAC;SAC5C;aAAM;YACL,uBAAuB,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;SACtG;QACD,IAAI,CAAC,CAAC,YAAY,KAAK,KAAK,EAAE;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;aAAM,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;QACD,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QACzE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,GAAG,uBAAuB,CAAC;QACpD,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QACtF,0DAA0D;QAC1D,uEAAuE;QAEvE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;SAC5D;QACD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;QACjC,MAAM,GAAG,GAA6B;YACpC,KAAK,EAAE,CAAC,CAAC,EAAE;YACX,qBAAqB;YACrB,UAAU,EAAE,CAAC,CAAC,UAAU;YACxB,WAAW,EAAE,CAAC,CAAC,WAAW;SAC3B,CAAC;QACF,IAAI,CAAC,iCAAiC,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,EAAE;YACpD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;aACI;YACH,gCAAgC;YAChC,KAAK;YACL,iCAAiC;YACjC,oCAAoC;YACpC,EAAE;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtB;IAEH,CAAC;IAGD,iCAAiC,CAAC,GAA6B;QAC7D,IAAI,CAAC,wBAAwB,CAAC,iCAAiC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpF,IAAI,CAAC,kBAAkB,GAAG,IAA+B,CAAC;QAC5D,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,2CAA2C;QACzC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;SAC5D;QACD,MAAM,QAAQ,GAA0B;YACtC,UAAU,EAAE,IAAI,CAAC,eAAe;SACjC,CAAC;QACF,IAAI,GAAQ,CAAC;QACb,IAAI,CAAC,wBAAwB,CAAC,2CAA2C,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnG,GAAG,GAAG,IAAI,CAAC;QACb,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,GAAG,EAAE;gBACP,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,MAAM,GAAG,GAA6B;YACpC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,eAAe;SACjC,CAAC;QAEF,IAAI,GAAG,GAAU,EAAE,CAAC;QACpB,MAAM,IAAI,GAAU,EAAE,CAAC;QACvB,MAAM,GAAG,GAAG,CAAC,UAAU,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW;YAC/E,sBAAsB,EAAE,6BAA6B,CAAC,CAAC;QACzD,MAAM,KAAK,GAAG,mCAAmC,CAAC;QAClD,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,wBAAwB,CAAC,iCAAiC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpF,IAAI,CAAC,kBAAkB,GAAG,IAA+B,CAAC;YAE1D,8BAA8B;YAC9B,2DAA2D;YAC3D,+CAA+C;YAC/C,IAAI;YAEJ,uCAAuC;YACvC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBACvC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrB,IAAI,CAAC,CAAC,WAAW,KAAK,IAAI,IAAI,SAAS,IAAI,EAAE,IAAI,CAAC,EAAE;oBAClD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;iBACrB;qBACI;oBACH,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;iBACjC;gBACD,IAAI,CAAC,CAAC,cAAc,KAAK,IAAI,IAAI,SAAS,IAAI,EAAE,IAAI,CAAC,EAAE;oBACrD,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;iBACvB;qBACI;oBACH,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC;iBACtC;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,GAAG,GAAG,EAAE,CAAC;aACV;YACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAE7E,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC7F,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,CAAM;QACrB,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,eAAe,CAAC,EAAE;YAChE,OAAO,eAAe,CAAC;SACxB;aACI;YACH,OAAO,CAAC,CAAC;YACV,qCAAqC;YACrC,6GAA6G;SAC7G;IACH,CAAC;IACD,SAAS,CAAC,GAAU,EAAE,IAAW,EAAE,KAAU,EAAE,WAAgB,EAAC,OAAW,EAAE,oBAAyB;QACpG,MAAM,aAAa,GAAG,4BAA4B,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,mCAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEpB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACjC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAEzB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAE3B,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAC9C,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAEhC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACvC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,oBAAoB,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC;YACnD,eAAe,CAAC,CAAC,CAAC,oBAAoB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpD,0CAA0C;QAE1C,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC;QAC9D,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,UAAU,IAAI;YAC9B,SAAS;YAET,SAAS;YACT,IAAI,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,yDAAyD;YACzD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC3C,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,aAAa,CAAC;aACpC;YACD,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACnF,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,8BAA8B;QAC3F,CAAC,CAAC;QACF,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EACrB;YACE,KAAK,EAAE,MAAM;YACb,gFAAgF;YAChF,oFAAoF;YACpF,YAAY;YACZ,wFAAwF;YACxF,oBAAoB;YACpB,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAG1C,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;YACpB,UAAU,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAE5D,MAAM,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;SAEhF,CAAC,CAAC;QAEL,gDAAgD;QAChD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;YAC3C,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAClC;QAED,4BAA4B;QAC5B,GAAG,CAAC,aAAa,CAAC;YAChB,KAAK,EAAE,KAAK,GAAG,MAAM;SACtB,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAGD,SAAS;QACP,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;CACF;;YAh5ByB,kEAAc;YACX,0EAAe;YACtB,0EAAe;YACX,oEAAY;YACA,6FAAwB;YACxC,yDAAQ;;AAjIqB;IAAhD,+DAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;mEAAmC;AACxC;IAA1C,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;oEAAoC;AAChC;IAA7C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;gEAAgC;AACZ;IAAhE,+DAAS,CAAC,iCAAiC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;mFAAmD;AAEhE;IAAlD,+DAAS,CAAC,oBAAoB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;sEAAoC;AAC5C;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;6DAAkB;AACjB;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;6DAAsB;AARpD,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,0PAAkD;;KAEnD,CAAC;GACW,0BAA0B,CA6gCtC;AA7gCsC;;;;;;;;;;;;;;;;;;;;;ACpBA;AACc;AACI;AACyB;AAElF,MAAM,SAAS,GAAW;IACtB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACrC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,8FAAqB,EAAC;CAE3D,CAAC;AAKF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC1C,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACf7B;AAAe,6GAA8C,+H;;;;;;;;;;;;;;;;;ACAnB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACqB;AACtC;AACM;AACI;AACJ;AACS;AACT;AACS;AACO;AAChB;AACO;AACU;AACN;AACU;AACC;AACZ;AACS;AAChB;AACF;AACM;AACI;AACb;AACK;AACN;AACmB;AACmB;AACxB;AACyB;AACH;AACE;AACZ;AACM;AACe;AACvC;AAC7C,SAAS,WAAW;IACxB,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAoDD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAnDrB,8DAAQ,CAAC;QACP,YAAY,EAAE;YACX,2DAAY;SACd;QACD,OAAO,EAAE;YACN,uEAAa;YACb,4FAAuB;YACvB,4DAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5B,4DAAY;YACZ,qEAAgB;YAChB,oEAAgB;YAChB,cAAc;YACd,2DAAW;YACX,oEAAc;YACd,gEAAW,CAAC,OAAO,EAAE;YACrB,8DAAU,CAAC,OAAO,EAAE;YACpB,oEAAa;YACb,wEAAgB,CAAC,OAAO,EAAE;YAC1B,0DAAW;YACX,gEAAe;YACf,wEAAkB;YAClB,gGAAkB;YAClB,EAAE;YACF,8FAA8B;YAC9B,oFAA2B,CAAC,OAAO,EAAE;YACrC,kFAAmB;YACnB,+DAAW;YACX,mEAAY;YACZ,+EAAkB;YAClB,kFAAmB;YACnB,gEAAW,CAAC,OAAO,EAAE;YACrB,6DAAS,CAAC,OAAO,CAAC;gBACd,MAAM,EAAE;oBACL,WAAW;oBACX,kBAAkB,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB;wBAC1E,iBAAiB,EAAE,gBAAgB,EAAE,cAAc,EAAE,gBAAgB;wBACrE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,CAAC;oBACrD,iBAAiB,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,EAAE,yBAAyB;wBACpG,yBAAyB,EAAE,0BAA0B,EAAE,0BAA0B;wBACjF,uBAAuB,EAAE,uBAAuB,EAAE,0BAA0B,EAAE,0BAA0B,CAAC;iBAC5G;aACH,CAAC;SACJ;QACD,SAAS,EAAE,CAAC,2EAAe,EAAE,4EAAiB,EAAE,sEAAc,EAAE,gFAAmB,EAAE,qEAAY,EAAE,2EAAe;YAC/G,8FAAwB,EAAE,8FAAwB,EAAE,wFAAqB,EAAE,uGAA4B,CAAC;QAC3G,SAAS,EAAE;YACR,2DAAY;SACd;QACD,OAAO,EAAE,EACP;KACJ,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;ACzF6C;AAE5D,MAAe,gBAAgB;IAGlC;QACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAkB,EAAE,CAAC;IACvD,CAAC;CACJ;;;;;;;;;;;;;ACRD;AAAe,iFAAkB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,+CAA+C,mgB;;;;;;;;;;;;;;;;;;;;;;ACA/F;AAEnB;AACA;AACJ;AAQ5D,IAAa,kCAAkC,GAA/C,MAAa,kCAAkC;IAS7C,YACU,gBAAiC,EACjC,gBAAiC;QADjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QARjC,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QACf,iBAAY,GAAoB,IAAI,eAAe,EAAE,CAAC;IAMtD,CAAC;IAED,QAAQ;IACR,CAAC;IACD,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC;aACxD,IAAI,CAAC,iFAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IACD,MAAM,CAAC,YAA6B;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE,CAAC;aAClE,IAAI,CAAC,iFAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,cAAuB;QAC1B,IAAI,CAAC,cAAc,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,IAAI,eAAe,EAAE,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,cAAc,CAAC;YAEtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACH,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC3E,MAAM,CAAC,GAAG,MAA0B;gBACpC,CAAC,CAAC,EAAE,GAAG,cAAc,CAAC;gBACtB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;IACH,CAAC;IACD,KAAK;QAEH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;CAEF;;YA5D6B,0EAAe;YACf,0EAAe;;AATO;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;iEAAuB;AAC9D;IAAT,4DAAM,EAAE;qEAAwD;AAHtD,kCAAkC;IAL9C,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,2QAA6D;;KAE9D,CAAC;GACW,kCAAkC,CAsE9C;AAtE8C;AAiFxC,MAAM,eAAe;IAgB1B,YAAY,IAAuB;QACjC,IAAI,IAAI,EAAE;YACR,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACzB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACzB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACjD;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;ACrHD;AAAe,6GAA8C,+J;;;;;;;;;;;;;;;;;;;;;ACAA;AAIM;AACH;AACA;AAShE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAShC,YACU,gBAAiC,EACjC,gBAAiC;QADjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAN3C,eAAU,GAAG,EAAE,CAAC;QAQd,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAkB,EAAE,CAAC;IACrD,CAAC;IAGD,cAAc,CAAC,KAAqB;QAClC,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,MAAM,IAAI,GAA0B;YAClC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;YACtE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QACD,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjE,MAAM,CAAC,GAAG,MAAyB,CAAC;YAEpC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC;IACxC,CAAC;IAED,cAAc,CAAC,QAA0B;QACvC,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC;iBAClD,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;SACN;IACH,CAAC;CACF;;YAhD6B,0EAAe;YACf,0EAAe;;AATe;IAAzD,+DAAS,CAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAA+D;AAC9E;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wDAAkB;AACjB;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wDAAsB;AAJpD,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,2OAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA0DjC;AA1DiC;AAqE3B,MAAM,eAAe;IAgB1B,YAAY,IAAuB;QACjC,IAAI,IAAI,EAAE;YACR,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACzB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACzB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACjD;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;AC5GD;AAAe,iFAAkB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,+CAA+C,uhB;;;;;;;;;;;;;;;;;;;;;ACA/F;AAGd;AAC3B;AAC2B;AAOrE,IAAa,gCAAgC,GAA7C,MAAa,gCAAgC;IAU3C,YACU,gBAAiC,EACjC,gBAAiC;QADjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAVjC,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QAEf,aAAQ,GAA0B,IAAI,uBAAuB,EAAE,CAAC;QAChE,kBAAa,GAAS,KAAK,CAAC;IAM3B,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC;aACpD,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,MAAM,CAAC,QAAgC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,QAAQ,EAAC,QAAQ,CAAC,EAAE,CAAC;aAC7D,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,UAAmB;QACtB,IAAI,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,uBAAuB,EAAE,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,UAAU,CAAC;YAE5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACH,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,GAAE;gBACtE,MAAM,CAAC,GAAG,MAAkC;gBAC5C,CAAC,CAAC,EAAE,GAAC,UAAU,CAAC;gBAChB,IAAI,CAAC,QAAQ,GAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;IACL,CAAC;IACD,sBAAsB,CAAC,QAAY,EAAE,eAAmB;QACtD,IAAG,QAAQ,KAAK,eAAe,EAAC;YAC/B,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;SACxB;aACG;YAAC,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;SAAC;IACjC,CAAC;IAGD,KAAK;QAEH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;CACF;;YA9D6B,iFAAe;YACf,iFAAe;;AAXO;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;+DAAuB;AAC9D;IAAT,4DAAM,EAAE;mEAAwD;AAFtD,gCAAgC;IAL5C,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,gRAA0D;;KAE3D,CAAC;GACW,gCAAgC,CAyE5C;AAzE4C;AAwFtC,MAAM,uBAAuB;IAYlC,YAAY,IAA+B;QACvC,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;CACF;;;;;;;;;;;;;ACxHD;AAAe,4EAAa,4BAA4B,2BAA2B,wBAAwB,0BAA0B,KAAK,sBAAsB,+BAA+B,mCAAmC,QAAQ,4BAA4B,6CAA6C,KAAK,qBAAqB,yCAAyC,KAAK,mCAAmC,wBAAwB,+BAA+B,0BAA0B,KAAK,+CAA+C,+sC;;;;;;;;;;;;;;;;;;;;;;;;;ACAjf;AACa;AACtB;AAC4B;AACuC;AAClE;AAC2B;AACD;AACC;AAMrE,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAUpC,EAAE;IACF,YACU,gBAAiC,EACjC,YAA0B,EAC1B,MAAc,EACd,gBAAiC,EACjC,eAAgC;QAJhC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,oBAAe,GAAf,eAAe,CAAiB;QAf1C,WAAM,GAAG,KAAK,CAAC;QAEf,iBAAY,GAA0B,IAAI,6FAAuB,EAAE,CAAC;QACpE,iBAAY,GAAC,CAAC,CAAC;QAEf,qBAAqB;QACrB,YAAO,GAAG,KAAK,CAAC;QAEhB,mBAAc,GAAG,KAAK,CAAC;IAQnB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;IAC3D,CAAC;IACD,mBAAmB;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,GAAE;YACjE,MAAM,CAAC,GAAG,MAAkC;YAC5C,CAAC,CAAC,EAAE,GAAC,KAAK,CAAC;YACX,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;IACtB,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;QACtB,8CAA8C;IAC9C,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;IACtB,CAAC;IACD,MAAM,CAAE,YAAoC;QAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,YAAY,EAAC,YAAY,CAAC,EAAE,CAAC;aACrE,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IACH,wBAAwB;IACxB,wBAAwB;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3G,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC7D,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAClC,CAAC;IACD,sBAAsB,CAAC,CAAY;QACjC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;IAClG,CAAC;IAED,qBAAqB;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAuB;YACnC,UAAU,EAAE,KAAK;YACjB,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;SACtE,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,6BAA6B,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;gBACpD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;gBACxD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;gBACrD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;gBACzD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAmB;YAC/B,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;SAC9D,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;aAC9D;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;CAEA;;YA5F6B,iFAAe;YACnB,2EAAY;YAClB,sDAAM;YACI,iFAAe;YAChB,iFAAe;;AAhB/B,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,mRAAkD;;KAEnD,CAAC;GACW,yBAAyB,CAwGrC;AAxGqC;;;;;;;;;;;;;ACdtC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;ACAA;AAKQ;AACA;AAEA;AAQrE,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,kFAAgB;IAOtD,YACU,gBAAiC,EACjC,gBAAiC;QAE1C,KAAK,EAAE,CAAC;QAHC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAH3C,eAAU,GAAG,EAAE,CAAC;IAMhB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,KAAqB;QAChC,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC9C,MAAM,IAAI,GAA0B;YACnC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAC,KAAK,CAAC;YACrE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QACA,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChE,iDAAiD;YACjD,sCAAsC;YACtC,gDAAgD;YAChD,MAAM,CAAC,GAAG,MAAyB,CAAC;YACnC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC;IACxC,CAAC;IAED,cAAc,CAAC,YAAsC;QACnD,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC;iBACxD,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;SACN;IACH,CAAC;CAEF;;YAnD6B,iFAAe;YACf,iFAAe;;AAPe;IAAzD,+DAAS,CAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;qEAA6D;AAC3D;IAA1D,+DAAS,CAAC,4BAA4B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;6DAA+C;AAC/D;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;qDAAkB;AACnB;IAAvC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAC,IAAI,EAAC,CAAC;qDAAsB;AALlD,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,8OAAyC;;KAE1C,CAAC;GACW,kBAAkB,CA2D9B;AA3D8B;;;;;;;;;;;;;AChB/B;AAAe,iFAAkB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,+CAA+C,+hB;;;;;;;;;;;;;;;;;;;;;ACAvG;AACM;AAEZ;AACA;AAOrE,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAWnC,YACU,eAAgC,EAChC,QAAyB;QADzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QAV3B,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAM,GAAG,KAAK,CAAC;QACb,WAAM,GAAG,KAAK,CAAC;QACf,qBAAgB,GAAC,CAAC,CAAC;QAEnB,aAAQ,GAA8B,IAAI,2BAA2B,EAAE,CAAC;QAMpE,IAAI,CAAC,IAAI,GAAG,IAAI,6FAAuB,EAAE,CAAC;IAC9C,CAAC;IAED,IAAI,CAAC,IAA6B;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,gBAAgB,GAAC,CAAC,CAAC;IAC1B,CAAC;IACA,aAAa,CAAC,KAAS;QAEtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,MAAM,YAAY,GAAmB;YACnC,UAAU,EAAE,KAAK;YACjB,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;SACnC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,+BAA+B,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClF,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;gBACrD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAAA,CAAC;IAEN,CAAC;IACD,KAAK;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;CACJ;;YArC8B,iFAAe;YACtB,iFAAe;;AAXa;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;yDAAuB;AAC9D;IAAT,4DAAM,EAAE;6DAAwD;AAHtD,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,sRAA6D;;KAE9D,CAAC;GACW,0BAA0B,CAiDtC;AAjDsC;AAkDhC,MAAM,2BAA2B;CAIvC;;;;;;;;;;;;;;;;;AC7DM,MAAM,kBAAkB;IAA/B;QACI,kCAA6B,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/D,oEAAoE;QACnE,2DAA2D;QAG3D,+BAA0B,GAAG,CAAC,CAAC;QAChC,2CAA2C;QAC3C,gDAAgD;QAG/C,iBAAY,GAAG,IAAI,CAAC;QAIpB,sBAAiB,GAAG,CAAC,CAAC;QAItB,cAAS,GAAG,KAAK,CAAC;IA2DtB,CAAC;IAzDG,oBAAoB;QAChB,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED,oBAAoB;QAChB,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED,UAAU,CAAC,KAAY;QACnB,IAAI,OAAO,CAAC;QACZ,IAAI,KAAK,CAAC,SAAS,EAAE;YACjB,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC;YAC1B,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,MAAM,CAAC;aACrB;iBAAM,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,CAAC,EAAE;gBAC/B,OAAO,IAAI,OAAO,CAAC;aACtB;SACJ;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,iBAAiB,CAAC,SAAoB,EAAE,KAAoB;QACxD,IAAI,SAAS,CAAC,IAAI,EAAE;YAChB,OAAO,SAAS,CAAC,IAAI,CAAC;SACzB;QAED,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,CAAC,CAAC;SACZ;QAED,OAAO,KAAK,CAAC,IAAI,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,SAAoB,EAAE,KAAoB;QACnD,IAAI,SAAS,CAAC,KAAK,EAAE;YACjB,OAAO,SAAS,CAAC,KAAK,CAAC;SAC1B;QAED,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,CAAC,CAAC;SACZ;QAED,OAAO,KAAK,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,iBAAiB,CAAC,KAAoB;QAClC,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,EAAE,4DAA4D;YAC7F,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AClF0C;AAGoB;AACC;AAKhE,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAE9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,6EAAW,CAAC,MAAM,GAAG,OAAO,CAAC;IACC,CAAC;IAEzC,gBAAgB,CAAC,IAAS;QACxB,2IAA2I;QAC3I,6EAA6E;QAC7E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAC,IAAI,CAAC,CAAC;IAChE,CAAC;CACF;;YAP2B,+DAAU;;AAFzB,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAS/B;AAT+B;;;;;;;;;;;;;ACThC;AAAe,6GAA8C,2K;;;;;;;;;;;;;;;;;;;;;ACAX;AACQ;AACM;AACvB;AAE0C;AAOnF,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAErC,YACU,QAAyB,EACzB,MAAc,EACd,uBAAiD,EACjD,YAA0B;QAH1B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,4BAAuB,GAAvB,uBAAuB,CAA0B;QACjD,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,qBAAqB,GAAG;YAC3B,uBAAuB,EAAE,CAAC;YAC1B,gBAAgB,EAAE,CAAC;YACnB,eAAe,EAAE,CAAC;YAClB,aAAa,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;IACD,gBAAgB;QACd,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,GAAG,GAAmB;YAC1B,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClE,IAAI,CAAC,qBAAqB,GAAG,IAA8B,CAAC;QAC9D,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAzBqB,0EAAe;YACjB,sDAAM;YACW,6FAAwB;YACnC,oEAAY;;AANzB,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,0PAAkD;;KAEnD,CAAC;GACW,0BAA0B,CA4BtC;AA5BsC;;;;;;;;;;;;;ACZvC;AAAe,8EAAe,+BAA+B,mCAAmC,QAAQ,wBAAwB,6CAA6C,KAAK,iBAAiB,yCAAyC,KAAK,+BAA+B,wBAAwB,+BAA+B,0BAA0B,KAAK,+CAA+C,m5B;;;;;;;;;;;;;;;;;;;;;;;ACAnW;AACkB;AACU;AACf;AACM;AACA;AAC5B;AAOzC,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAIlC,YACU,eAAoC,EACpC,YAA0B,EAC1B,QAAyB,EACzB,eAAgC,EAChC,MAAc;QAJd,oBAAe,GAAf,eAAe,CAAqB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QARxB,YAAO,GAAG,KAAK,CAAC;QAEhB,mBAAc,GAAG,KAAK,CAAC;IAOnB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;QACrD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;IAC3D,CAAC;IACD,wBAAwB;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3G,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC7D,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAClC,CAAC;IACD,sBAAsB,CAAC,CAAY;QACjC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;IAClG,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACpD,CAAC;IACD,qBAAqB;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAuB;YACnC,UAAU,EAAE,KAAK;YACjB,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;SACtE,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpE,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;gBACpD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;gBACxD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;gBACrD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;gBACzD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAmB;YAC/B,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;SAC9D,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;aACtD;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAhE4B,0FAAmB;YACtB,2EAAY;YAChB,iFAAe;YACR,iFAAe;YACxB,sDAAM;;AATb,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,0PAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAqEnC;AArEmC;;;;;;;;;;;;;ACbpC;AAAe,6GAA8C,uL;;;;;;;;;;;;;;;;;;;;ACAX;AAC4B;AACf;AACtB;AAOzC,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAEpC,YACU,eAAoC,EACpC,YAA0B,EAC1B,MAAc;QAFd,oBAAe,GAAf,eAAe,CAAqB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG;YAClB,OAAO,EAAG,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,cAAc,EAAE,EAAE;YAClB,cAAc,EAAE,EAAE;YAClB,KAAK,EAAE,EAAE;YACT,EAAE,EAAE,CAAC;YACL,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,SAAS,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,WAAW,EAAE,IAAI;gBACjB,eAAe,EAAE,EAAE;gBACnB,EAAE,EAAE,CAAC;gBACL,YAAY,EAAE,EAAE;gBAChB,YAAY,EAAE,EAAE;gBAChB,SAAS,EAAE,EAAE;gBACb,WAAW,EAAE,IAAI;gBACjB,eAAe,EAAE,EAAE;gBACnB,QAAQ,EAAE,EAAE;aACb;SACF,CAAC;IACJ,CAAC;IACD,mBAAmB;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,GAAG,GAAmB;YAC1B,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAI,CAAC,YAAY,GAAG,IAAqB,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;CACF;;YAtD4B,0FAAmB;YACtB,2EAAY;YAClB,sDAAM;;AALb,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,mQAAkD;;KAEnD,CAAC;GACW,yBAAyB,CAyDrC;AAzDqC;;;;;;;;;;;;;ACVtC;AAAe,8EAAe,+BAA+B,mCAAmC,QAAQ,wBAAwB,6CAA6C,KAAK,iBAAiB,yCAAyC,KAAK,+BAA+B,wBAAwB,+BAA+B,0BAA0B,KAAK,+CAA+C,m3B;;;;;;;;;;;;;;;;;;;;;;;ACAnW;AACkB;AACU;AACf;AACM;AACA;AAC5B;AAOzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAM5B,YACU,eAAoC,EACpC,YAA0B,EAC1B,QAAyB,EACzB,eAAgC,EAChC,MAAc;QAJd,oBAAe,GAAf,eAAe,CAAqB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAPjB,YAAO,GAAG,KAAK,CAAC;IAQnB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG;YAClB,OAAO,EAAG,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,cAAc,EAAE,EAAE;YAClB,cAAc,EAAE,EAAE;YAClB,KAAK,EAAE,EAAE;YACT,EAAE,EAAE,CAAC;YACL,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,SAAS,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,WAAW,EAAE,IAAI;gBACjB,eAAe,EAAE,EAAE;gBACnB,EAAE,EAAE,CAAC;gBACL,YAAY,EAAE,EAAE;gBAChB,YAAY,EAAE,EAAE;gBAChB,SAAS,EAAE,EAAE;gBACb,WAAW,EAAE,IAAI;gBACjB,eAAe,EAAE,EAAE;gBACnB,QAAQ,EAAE,EAAE;aACb;SACF,CAAC;IACJ,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACjF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9E,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAChF,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9F,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;SACpH,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,GAAG,GAAmB;YAC1B,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAI,CAAC,YAAY,GAAG,IAAqB,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC7E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACzE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qBAAqB,CAAC,IAAU;QAC9B,IAAI,IAAI,EAAE;YACR,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,WAAW,GAAG,MAAM,CAAC;YAC3B,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EACtD,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC,WAAW,EAAE,EAAE;gBACjE,OAAO,mBAAmB,CAAC;aAC5B;YACD,IAAI,QAAQ,GAAG,OAAO,EAAE;gBACtB,OAAO,iBAAiB,CAAC;aAC1B;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,iBAAiB,CAAC,KAAK;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAChD,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,MAAM,WAAW,GAAG,IAAI,QAAQ,EAAE,CAAC;QACnC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACnD,MAAM,OAAO,GAAG,IAAqB,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC/E,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClE,IAAI,CAAC,YAAY,GAAG,IAAqB,CAAC;YAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAC3D,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACR,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACpD,CAAC;CACF;;YAlI4B,0FAAmB;YACtB,2EAAY;YAChB,iFAAe;YACR,iFAAe;YACxB,sDAAM;;AAXb,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,wOAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAyI7B;AAzI6B;;;;;;;;;;;;;ACb9B;AAAe,2EAAY,2BAA2B,qBAAqB,KAAK,+CAA+C,2b;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxD;AAGC;AAEH;AAES;AAEF;AAEnD;AACM;AAC4B;AACT;AAOlD,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IAYtC,YACU,oBAAyC,EACzC,gBAAiC,EACjC,oBAAyC,EACzC,IAAgB;QAHhB,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,SAAI,GAAJ,IAAI,CAAY;QAX1B,eAAU,GAAG,EAAE,CAAC;QAKhB,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,eAAe,CAAC;QAQ7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,qFAAkB,EAAE,CAAC;IACrD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,KAAqB;QAChC,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,MAAM,IAAI,GAA0B;YAClC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;YACtE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF,CAAC;QACF,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrE,MAAM,CAAC,GAAG,MAAyB,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IACD,cAAc;QACZ,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,QAAgC;QAC7C,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC;iBACvD,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,kBAAkB,CAAC,OAAO;QACxB,2BAA2B;QAC3B,mCAAmC;QACnC,yBAAyB;QAEzB,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACpE,MAAM,CAAC,GAAG,MAAyB,CAAC;YACpC,IAAI,GAAG,GAAU,EAAE;YACnB,IAAI,IAAI,GAAU,EAAE;YACpB,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC,CAAC,6BAA6B;YAC9L,IAAI,KAAK,GAAG,iBAAiB,EAAC,kBAAkB;YAChD,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;gBACrC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACjC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC9B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC7B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAClC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,GAAG,GAAG,EAAE,CAAC;aACV;YACD,oBAAoB;YACpB,qBAAqB;YACrB,sBAAsB;YACtB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,GAAU,EAAE,IAAW,EAAE,KAAU,EAAE,OAAO;QACpD,MAAM,aAAa,GAAG,4BAA4B,CAAC;QACnD,IAAI,GAAG,GAAG,IAAI,kCAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACxE,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACtD,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC/D,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACpC,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,MAAM,CAAC,GAAG,GAAG,wCAAwC,CAAC;QACtD,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,MAAM,CAAC,GAAG,GAAG,mCAAmC,CAAC;QACjD,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,UAAU,IAAI;YAC9B,SAAS;YACT,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACxB,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;YACnC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1B,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACpC,MAAM,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,MAAM,KAAK,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;YAEhF,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC9C,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YAC3B,SAAS;YACT,IAAI,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,yDAAyD;YACzD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC3C,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,aAAa,CAAC;aACpC;YACD,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACpB,IAAI,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACnF,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,8BAA8B;QAC3F,CAAC,CAAC;QACF,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EACrB;YACE,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAC1C,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI;YAGpD,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;YACpB,UAAU,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAE5D,MAAM,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;SAC7D,CAAC,CAAC;QAEL,gDAAgD;QAChD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;YAC3C,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAClC;QAED,4BAA4B;QAC5B,GAAG,CAAC,aAAa,CAAC;YAChB,KAAK,EAAE,KAAK,GAAG,MAAM;SACxB,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;QACpC,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;SACR;QAED,MAAM,cAAc,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC;QAEnE,IAAI,cAAc,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;YAC1D,OAAM;SACP;QAED,IAAI,IAAI,CAAC;QAET,IAAI,IAAI,CAAC,GAAG,YAAY,IAAI,EAAE;YAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;SAC3B;aAAM;YACL,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,QAAQ,EAAE;gBAC/B,sBAAsB;gBACtB,6CAA6C;gBAC7C,OAAO;aACR;iBAAM;gBACL,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;aACtB;SACF;QAED,oCAAoC;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAEvC,+BAA+B;QAC/B,MAAM,gBAAgB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/H,MAAM,YAAY,GAAG,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;QAEzF,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC;QAE3D,oCAAoC;QAEpC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE;YACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE;YACnC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACjC;QAED,IAAI,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,YAAY,EAAE;YACzC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC;SACvC;IACH,CAAC;IAED,aAAa;QACX,MAAM,OAAO,GAAa;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;SAE1B,CAAC;QACF,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,EAC5C;aACE,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,MAAM,CAAC,GAAG,MAAkB,CAAC;YAC7B,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IACD,sBAAsB,CAAC,KAAa;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACnF,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChC,MAAM,MAAM,GAAG,mBAAO,CAAC,mEAAY,CAAC,CAAC;gBACrC,MAAM,IAAI,GAAG,cAAc,GAAG,KAAK,CAAC;gBACpC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACnB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IACD,eAAe,CAAC,KAAa;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACnF,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;gBAC7D,wCAAwC;gBACxC,+BAA+B;gBAC/B,sBAAsB;gBACtB,OAAO,IAAI,CAAC;gBACZ,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IACD,eAAe,CAAC,KAAa;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACnF,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChC,MAAM,MAAM,GAAG,mBAAO,CAAC,mEAAY,CAAC,CAAC;gBACrC,MAAM,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC;gBAC5B,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACnB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAlRiC,0FAAmB;YACvB,iFAAe;YACX,yFAAmB;YACnC,+DAAU;;AAdkC;IAA3D,+DAAS,CAAC,4BAA4B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sEAA+C;AAChE;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;8DAAkB;AACjB;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;8DAAsB;AAJpD,2BAA2B;IALvC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,sQAAmD;;KAEpD,CAAC;GACW,2BAA2B,CA+RvC;AA/RuC;AAkSjC,MAAM,qBAAqB;IAqBhC,YAAY,IAA6B;QACvC,IAAI,IAAI,EAAE;YACR,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACzB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACzB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACjD;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;ACpVD;AAAe,iFAAkB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,+CAA+C,+gB;;;;;;;;;;;;;;;;;;;;;ACA/F;AAEX;AACH;AACA;AAOrE,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAWnC,YACU,eAAgC,EAChC,QAAyB;QADzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QAV3B,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAM,GAAG,KAAK,CAAC;QACb,WAAM,GAAG,KAAK,CAAC;QACf,qBAAgB,GAAC,CAAC,CAAC;QAEnB,aAAQ,GAA0B,IAAI,uBAAuB,EAAE,CAAC;QAO5D,IAAI,CAAC,IAAI,GAAG,IAAI,oFAAqB,EAAE,CAAC;IAC5C,CAAC;IAED,IAAI,CAAC,IAA2B;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,gBAAgB,GAAC,CAAC,CAAC;IAC1B,CAAC;IACD,aAAa,CAAC,UAAc;QAE1B,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAC,UAAU,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,MAAM,QAAQ,GAAmB;YAC/B,UAAU,EAAE,UAAU;YACtB,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;SACnC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtE,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;gBACrD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAAA,CAAC;IAEN,CAAC;IAED,KAAK;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;CACJ;;YAzC8B,iFAAe;YACtB,iFAAe;;AAXc;IAAlD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;yDAAuB;AAC/D;IAAT,4DAAM,EAAE;6DAAwD;AAHtD,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,sQAAmD;;KAEpD,CAAC;GACW,0BAA0B,CAqDtC;AArDsC;AAuDhC,MAAM,uBAAuB;CAInC;;;;;;;;;;;;;;;;;;;;;ACtEsC;AACc;AACF;AACgB;AAEnE,MAAM,WAAW,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;IACnD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+DAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;CACrD,CAAC;AAKF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAJ9B,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7C,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACd/B;AAAe,uEAAQ,wBAAwB,mBAAmB,KAAK,kBAAkB,sBAAsB,+BAA+B,2CAA2C,KAAK,iBAAiB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,wBAAwB,wBAAwB,gCAAgC,KAAK,wBAAwB,+CAA+C,KAAK,qBAAqB,6BAA6B,KAAK,UAAU,0BAA0B,mBAAmB,qBAAqB,cAAc,4CAA4C,kBAAkB,yBAAyB,oBAAoB,4BAA4B,6BAA6B,6BAA6B,KAAK,YAAY,gCAAgC,mBAAmB,yBAAyB,oBAAoB,mBAAmB,sBAAsB,kBAAkB,KAAK,kBAAkB,mBAAmB,KAAK,gBAAgB,kBAAkB,yBAAyB,gCAAgC,KAAK,mBAAmB,yBAAyB,4BAA4B,KAAK,gBAAgB,iBAAiB,yBAAyB,KAAK,cAAc,mBAAmB,wBAAwB,KAAK,mHAAmH,gBAAgB,wBAAwB,qBAAqB,OAAO,kBAAkB,qBAAqB,OAAO,KAAK,kBAAkB,8BAA8B,8BAA8B,kCAAkC,KAAK,kBAAkB,qCAAqC,MAAM,+CAA+C,29G;;;;;;;;;;;;;;;;;;;;;ACAvrD;AACK;AAEzB;AACuB;AACN;AAO1D,IAAa,cAAc,GAA3B,MAAa,cAAc;IAMzB,YAAoB,MAAc,EACd,QAAyB,EACzB,YAA0B;QAF1B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAc;QAP9C,gBAAW,GAAG,wBAAwB,CAAC;QACvC,SAAI,GAAoB,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1D,YAAO,GAAG,KAAK,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;IAG0B,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC1C,CAAC;IACD,WAAW;QACT,8BAA8B;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5C,8CAA8C;IAC/C,CAAC;IACD,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACtB,mDAAmD;QACpD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,sDAAsD;QACxD,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,KAAK,IAAI,EAAE;gBACnG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;aACzC;YACD,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,KAAK,UAAU,EAAE;gBACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAC1C;QACH,CAAC,CACA,CAAC;IACJ,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;CAEF;;YAvC6B,sDAAM;YACJ,0EAAe;YACX,oEAAY;;AARnC,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,mNAAqC;;KAEtC,CAAC;GACW,cAAc,CA6C1B;AA7C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZc;AACM;AACA;AACmB;AACc;AACtB;AACP;AACS;AACO;AACX;AAkBxD,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAI;AAAf,WAAW;IAhBvB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,4DAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5B,0DAAW;YACX,kEAAmB;YACnB,6FAA8B;YAC9B,sEAAgB;YAChB,wEAAkB;YAClB,uEAAgB,CAAC,OAAO,EAAE;SAC3B;QACD,YAAY,EAAE;YACZ,+DAAc;YACd,8EAAiB;SAClB;KACF,CAAC;GACW,WAAW,CAAI;AAAJ;;;;;;;;;;;;;AC3BxB;AAAe,kFAAmB,+BAA+B,2CAA2C,4BAA4B,KAAK,2BAA2B,uCAAuC,KAAK,YAAY,qCAAqC,sCAAsC,sDAAsD,KAAK,2BAA2B,uCAAuC,kCAAkC,KAAK,2BAA2B,0CAA0C,kCAAkC,KAAK,wBAAwB,yCAAyC,KAAK,mDAAmD,27C;;;;;;;;;;;;;;;;;;;;;ACAhoB;AAKe;AACgB;AACnB;AACgC;AAShG,IAAa,0CAA0C,GAAvD,MAAa,0CAA0C;IAWrD,YACU,QAAyB,EACzB,wBAAkD,EAClD,UAAsC;QAFtC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,eAAU,GAAV,UAAU,CAA4B;QARhD,eAAU,GAAG,EAAE,CAAC;QAGhB,WAAM,GAAG,KAAK,CAAC;QAOb,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAkB,EAAE,CAAC;IACrD,CAAC;IAED,IAAI,CAAC,YAAuB;QAC1B,IAAI,CAAC,iBAAiB,GAAC,YAAY,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;QACzB,iBAAiB;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,MAAM,CAAC,KAAqB;QAC1B,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,MAAM,IAAI,GAA0B;YAClC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;YACtE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QACD,IAAI,CAAC,wBAAwB,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjF,MAAM,CAAC,GAAG,MAAyB,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;YAChD,wBAAwB;QACzB,CAAC,EAAE,GAAG,CAAC,EAAE;YACR,wBAAwB;YACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,eAAe,CAAC,CAAyB;QACvC,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,kCAAkC;IACpC,CAAC;CAEF;;YA3DqB,0EAAe;YACC,6FAAwB;YACtC,2GAA0B;;AAbA;IAA/C,+DAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;mFAAiC;AACtC;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;6EAAkB;AACjB;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;6EAAsB;AAHpD,0CAA0C;IANtD,+DAAS,CAAC;QACT,SAAS,EAAC,CAAC,2GAA0B,CAAE;QACvC,QAAQ,EAAE,wBAAwB;QAClC,+RAAqE;;KAEtE,CAAC;GACW,0CAA0C,CAuEtD;AAvEsD;;;;;;;;;;;;;ACjBvD;AAAe,uFAAwB,uCAAuC,kCAAkC,KAAK,uBAAuB,0CAA0C,kCAAkC,KAAK,oBAAoB,yCAAyC,KAAK,+CAA+C,+yB;;;;;;;;;;;;;;;;;;;ACA3P;AAGa;AAE3B;AAOrE,IAAa,wCAAwC,GAArD,MAAa,wCAAwC;IAenD,YACU,wBAAwD,EACxD,kBAAqC;QADrC,6BAAwB,GAAxB,wBAAwB,CAAgC;QACxD,uBAAkB,GAAlB,kBAAkB,CAAmB;QAbrC,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,eAAU,GAAG,EAAE,CAAC;QAKhB,MAAC,GAAQ,CAAC,CAAC;QACX,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QACf,YAAO,GAAuB,EAAE,CAAC;IAKjC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,KAAqB;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QAED,MAAM,yBAAyB,GAAwC;YACrE,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;QAEF,IAAI,CAAC,wBAAwB,CAAC,kCAAkC,CAAC,yBAAyB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7G,IAAI,CAAC,OAAO,GAAG,MAA4B,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,CAAmB;QAE5B,qBAAqB;QACrB,uCAAuC;QACxC,6CAA6C;QAC7C,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAE,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;CACF;;YA9CqC,0GAA8B;YACpC,+EAAiB;;AAfG;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;uEAAuB;AAC9B;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;2EAA+B;AAC9D;IAAT,4DAAM,EAAE;2EAAwD;AAJtD,wCAAwC;IALpD,+DAAS,CAAC;QACT,QAAQ,EAAE,iCAAiC;QAC3C,2RAAmE;;KAEpE,CAAC;GACW,wCAAwC,CA8DpD;AA9DoD;;;;;;;;;;;;;ACZrD;AAAe,wHAAyD,kBAAkB,GAAG,+CAA+C,2uB;;;;;;;;;;;;;;;;;;;ACAlE;AAKI;AAEX;AAOnE,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAgBxC,YACU,sBAA6C;QAA7C,2BAAsB,GAAtB,sBAAsB,CAAuB;QAZ7C,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,eAAU,GAAG,EAAE,CAAC;QAKhB,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QAMb,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAkB,EAAE,CAAC;IACrD,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,KAAqB;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC/C,MAAM,IAAI,GAA0B;YAClC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;YACtE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QAED,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5E,MAAM,CAAC,GAAG,MAAyB,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,UAAU,CAAC,IAAkC;QAC3C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;CAEF;;YA1DmC,wFAAqB;;AAfL;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;4DAAuB;AAC9B;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gEAAkB;AACjB;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gEAAsB;AACrD;IAAT,4DAAM,EAAE;gEAAwD;AALtD,6BAA6B;IALzC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,mQAAuD;;KAExD,CAAC;GACW,6BAA6B,CA2EzC;AA3EyC;;;;;;;;;;;;;ACd1C;AAAe,wHAAyD,kBAAkB,GAAG,+CAA+C,+uB;;;;;;;;;;;;;;;;;;;ACAjE;AAKG;AAEX;AAOnE,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAexC,YACU,sBAA6C;QAA7C,2BAAsB,GAAtB,sBAAsB,CAAuB;QAX7C,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,eAAU,GAAG,EAAE,CAAC;QAIhB,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QAMb,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAkB,EAAE,CAAC;IACrD,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,KAAqB;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC/C,MAAM,IAAI,GAA0B;YAClC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;YACtE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QAED,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5E,MAAM,CAAC,GAAG,MAAyB,CAAC;YACpC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,UAAU,CAAC,IAAqB;QAC9B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAEpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;CAEF;;YAzDmC,wFAAqB;;AAdL;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;4DAAuB;AAC9B;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gEAAkB;AACjB;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gEAAsB;AACrD;IAAT,4DAAM,EAAE;gEAAwD;AALtD,6BAA6B;IALzC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,mQAAuD;;KAExD,CAAC;GACW,6BAA6B,CAyEzC;AAzEyC;;;;;;;;;;;;;ACd1C;AAAe,gFAAiB,yCAAyC,KAAK,iBAAiB,0CAA0C,KAAK,sBAAsB,0BAA0B,KAAK,UAAU,yCAAyC,KAAK,sBAAsB,uCAAuC,2BAA2B,KAAK,sBAAsB,0CAA0C,oCAAoC,2BAA2B,qCAAqC,QAAQ,WAAW,yCAAyC,KAAK,uBAAuB,uCAAuC,kCAAkC,KAAK,uBAAuB,2CAA2C,sCAAsC,qCAAqC,KAAK,QAAQ,sCAAsC,KAAK,0DAA0D,8BAA8B,4EAA4E,KAAK,2DAA2D,+iE;;;;;;;;;;;;;;;;;;;;;;;;ACAr/B;AAEU;AAC/B;AACtB;AACL;AACP;AAS/B,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAwD7B,YACU,wBAAwD,EACxD,YAA4B,EAC5B,QAAkB;QAFlB,6BAAwB,GAAxB,wBAAwB,CAAgC;QACxD,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QAzD7B,gEAAgE;QAE/D,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QACf,oBAAe,GAAG,KAAK,CAAC;QACxB,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAI3B,eAAU,GAAG,EAAE,CAAC;QAGhB,MAAC,GAAQ,CAAC,CAAC;QACX,YAAO,GAAuB,EAAE,CAAC;QAEjC,iBAAY,GAAG,EAAE,CAAC;QAClB,kBAAa,GAAG,EAAE,CAAC;QAWnB,6FAA6F;QAC7F,kBAAa,GAAC,mBAAmB,CAAC;QAClC,gBAAW,GAAG,IAAI,IAAI,CAAC;QACvB,iBAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC;QAC/D,EAAE;QACF,MAAC,GAAC,IAAI,CAAC,YAAY,CAAC;QACpB,8BAAyB,GAAC,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,CAAC;QACpH,WAAM,GAAC,EAAE,CAAC;QACV,EAAE;QACF,aAAQ,GAAG,oBAAoB,CAAC;QAChC,kBAAa,GAAG,EAAE,CAAC;QAOnB,aAAQ,GAAG;YACT,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,8BAA8B,EAAE;YAC9C,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,wCAAwC,EAAC;YACvD,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAC;YAC7B,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAC;SAE1B,CAAC;QAEF,oBAAe,GAAC,CAAC,CAAC;IAKgB,CAAC;IAC/B,aAAa,CAAC,KAAW;QACvB,QAAQ,CAAC;QACT,IAAG,KAAK,IAAE,IAAI,EACd;YACE,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;IACjG,CAAC;IACH,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,YAAY,EAAC,EAAE,EAAE,eAAe,EAAE,YAAY,EAAC,CAAC,CAAC;QACrG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpE,wBAAwB;QACxB,+EAA+E;QAC/E,uGAAuG;QACvG,wIAAwI;QACxI,yEAAyE;QACzE,KAAK;QACL,yBAAyB;QACzB,+EAA+E;QAC/E,uGAAuG;QACvG,wIAAwI;QACxI,yEAAyE;QACzE,KAAK;QACL,4BAA4B;QAC5B,4BAA4B;QAC5B,wBAAwB;QACxB,4BAA4B;QAC5B,iCAAiC;QACjC,qCAAqC;QACrC,uBAAuB;QACvB,4BAA4B;QAC5B,KAAK;IACP,CAAC;IACD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/C,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,YAAY,CAAC,IAAS;IACtB,CAAC;IACD,WAAW,CAAC,KAAU;IACtB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,yBAAyB,CAAC,aAAa;QACrC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAC5C,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9F;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IACD,EAAE;IACF,MAAM;QACJ,MAAM,yBAAyB,GAAwC;YACrE,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;QAEF,IAAI,CAAC,wBAAwB,CAAC,kCAAkC,CAAC,yBAAyB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7G,IAAI,CAAC,OAAO,GAAG,MAA4B,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,KAAK;IACL,2CAA2C;IAC3C,+BAA+B;IAC/B,6BAA6B;IAC7B,2BAA2B;IAC3B,yBAAyB;IACzB,6BAA6B;IAC7B,mDAAmD;IACnD,KAAK;IAEL,UAAU,CAAC,CAAmB;QAC5B,QAAQ,CAAC;QACT,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QACxE,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAC7E,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;QACjG,IAAI,CAAC,sBAAsB,GAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACxF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpE,6EAA6E;QAC7E,IAAI,CAAC,aAAa,GAAC,oBAAoB,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;QACrC,IAAI,CAAC,eAAe,GAAC,CAAC,CAAC,eAAe,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC7G,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,mBAAmB,CAAC;QACjD,IAAG,CAAC,CAAC,WAAW,IAAE,uBAAuB,EAAC;YACxC,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,YAAY,EAAC;YAClC,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,UAAU,EAAC;YAChC,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,QAAQ,EAAC;YAC9B,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAG,MAAM,EAAC;YAC7B,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,UAAU,EAAC;YAChC,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,iCAAiC,EAAC;YACvD,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,cAAc,EAAC;YACpC,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,OAAO,EAAC;YAC7B,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAClB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,UAAU,EAAC;YAChC,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;SACnB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,OAAO,EAAC;YAC7B,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;SACnB;aACI,IAAG,CAAC,CAAC,WAAW,IAAE,UAAU,EAAC;YAChC,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;SACnB;aACG;YACF,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;SAElB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IACD,8BAA8B,CAAC,oBAAyB;QACtD,IAAI,CAAC,aAAa,GAAC,oBAAoB,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzC,CAAC;IAEM,aAAa;QACnB,yBAAyB;QAC1B,yDAAyD;QACzD,4BAA4B;QAC5B,OAAO;QACP,QAAQ,CAAC;QACT,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC9C,kDAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC9B,gCAAgC;YAChC,IAAI,QAAQ,GAAG,GAAG,CAAC;YACnB,IAAI,UAAU,GAAG,GAAG,CAAC;YACrB,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;YACxD,IAAI,UAAU,GAAG,SAAS,CAAC;YAE3B,MAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;YACpD,IAAI,GAAG,GAAG,IAAI,kCAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,wBAAwB;YAC9D,IAAI,QAAQ,GAAG,EAAE,CAAC;YACnB,yEAAyE;YACxE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;YACvE,uCAAuC;YACtC,+BAA+B;YAC/B,GAAG,CAAC,aAAa,CAAC;gBACjB,KAAK,EAAE,SAAS;aACnB,CAAC,CAAC;YACA,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,+BAA+B;QACpC,CAAC,CAAC,CAAC;IACH,CAAC;IACD,SAAS;QACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtE,QAAQ,CAAC;QACT,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC9B,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SAC3B;QACC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;QACjE,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,4CAA4C;QAC5C,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,mFAAmF,CAAC,CAAC;QACtG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,wFAAwF,CAAC,CAAC;QAC3G,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,YAAY,CAAC;QAChC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC9B,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAC1B;QACD,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;CAEF;;YA/MqC,0GAA8B;YAC1C,kEAAc;YAClB,wDAAQ;;AA1DuB;IAAlD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;6DAAqC;AAD5E,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kOAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAwQ9B;AAxQ8B;;;;;;;;;;;;;ACf/B;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;ACAD;AAO5D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,8OAA8C;;KAE/C,CAAC;GACW,qBAAqB,CAOjC;AAPiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPK;AACc;AACA;AAC2C;AAC/B;AACsB;AACJ;AACa;AACN;AACL;AAC+B;AACR;AACrB;AAC5B;AACyD;AAC5C;AACsC;AAC0B;AAChC;AACvB;AACZ;AACS;AACkB;AACwB;AAGxH,MAAM,WAAW,GAAW;IACxB;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,iEAAe;QAC1B,QAAQ,EAAE;YACN,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAC;YACrD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2GAA0B,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAC;YAC3F,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kGAAuB,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YAClF,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,8FAAqB,EAAE;YACzD,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,2GAA0B,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAE;YACrG,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,qGAAwB,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAC;YAChG,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,gIAAgC,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YACpG,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,iGAAkB,EAAE,WAAW,EAAE,CAAC,gFAAmB,CAAC,EAAC;YACrF,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,wHAA2B,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YACnG,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,mGAAuB,EAAE,WAAW,EAAE,CAAC,gFAAmB,CAAC,EAAC;YAChG,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6FAAqB,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YACvF,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,gIAAgC,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YACtG,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAkB,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YACjF,EAAC,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,0HAA8B,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAC;YAC5G,EAAC,IAAI,EAAE,+BAA+B,EAAE,SAAS,EAAE,oJAAsC,EAAE,WAAW,EAAE,CAAC,sEAAc,CAAC,EAAC;YACzH,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,oHAAyB,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAC;YAClG,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,oIAAyB,EAAE;YACjE,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0FAAiB,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAC;YAClF,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4GAAuB,EAAE,WAAW,EAAE,CAAC,2EAAiB,CAAC,EAAC;SAC3F;KACJ;CACJ,CAAC;AAKF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;AAAtB,mBAAmB;IAJ/B,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7C,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;ACzDhC;AAAe,yFAA0B,oBAAoB,wBAAwB,yBAAyB,0BAA0B,qBAAqB,yBAAyB,yCAAyC,KAAK,+CAA+C,+mB;;;;;;;;;;;;;;;;;;;;ACAtN;AAEG;AACvB;AACiB;AAO1D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC5B,2CAA2C;IACzC,oEAAoE;IACpE,YAAoB,QAAyB,EAAU,MAAc,EAAU,YAA0B;QAArF,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAc;IACzG,CAAC;IAED,QAAQ;QACN,2BAA2B;QAC5B,wCAAwC;QACzC,2CAA2C;IAC3C,CAAC;IACD,WAAW;QACT,8BAA8B;QAC/B,2CAA2C;QAC3C,8CAA8C;IAC/C,CAAC;IACD,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;IACrD,CAAC;IACD,eAAe;QACb,IAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,IAAE,UAAU,EAC9C;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpD;aACI,IAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,IAAE,OAAO,IAAI,IAAI,IAAI,WAAW,EACvE;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpD;aACG;YACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACtB;IACH,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IACD,mBAAmB;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;IACjD,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;CACD;;YA7C8B,0EAAe;YAAkB,sDAAM;YAAwB,oEAAY;;AAH9F,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;GACW,eAAe,CAgD1B;AAhD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACM;AACS;AACT;AACM;AACA;AACS;AACyB;AACS;AACb;AACa;AAC9C;AACF;AACK;AACK;AACI;AACI;AACmB;AAC+B;AAClE;AACN;AAC8C;AACuB;AACL;AACD;AACpB;AAChB;AACkC;AACD;AACkC;AACnC;AACA;AACvB;AACoC;AAC5D;AACgB;AACF;AACwD;AACrF;AACqE;AAC0B;AAChC;AACvB;AAC6B;AAChC;AACkB;AAC1C;AACkE;AACU;AA6DlI,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAI;AAAhB,YAAY;IA3DxB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,aAAa;YACb,2DAAW;YACX,oEAAc;YACd,mEAAmB;YACnB,gEAAW;YACZ,8DAAU;YACV,oEAAa;YACZ,wEAAgB,CAAC,OAAO,EAAE;YAC1B,4EAAkB,CAAC,OAAO,EAAE;YAC5B,0DAAW;YACX,gEAAe;YACf,8FAA8B;YAC9B,oFAA2B;YAE3B,EAAE;YACF,qEAAgB;YAChB,0EAAmB;YACnB,mEAAmB;YACnB,4DAAgB;YAChB,kEAAmB;YACnB,sEAAmB;SACpB;QACD,YAAY,EAAE;YACZ,iEAAe;YACf,kGAAuB;YACvB,2GAA0B;YAC1B,+FAAqB;YACrB,4GAA0B;YAC1B,gIAAgC;YAChC,iGAAkB;YAClB,6HAA0B;YAC1B,sGAAwB;YACxB,wHAA2B;YAC3B,uHAA0B;YAC1B,mGAAuB;YACvB,mFAAa;YACb,qHAAuB;YACvB,oHAA4B;YAC5B,sJAAsC;YACtC,mHAA6B;YAC7B,mHAA6B;YAC7B,8IAA0C;YAC1C,gIAAgC;YAChC,oFAAkB;YAClB,0IAAwC;YACxC,0HAA8B;YAC9B,oJAAsC;YACtC,oHAAyB;YACzB,6FAAqB;YACrB,0HAAkC;YAClC,0FAAiB;YACjB,4GAAuB;YACvB,oIAAyB;SAC1B;QACD,SAAS,EAAE,CAAC,wDAAQ,CAAC;KACtB,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;;AC7GzB;AAAe,4EAAa,yBAAyB,KAAK,uBAAuB,uCAAuC,kCAAkC,KAAK,uBAAuB,0CAA0C,kCAAkC,oCAAoC,KAAK,oBAAoB,yCAAyC,kCAAkC,uBAAuB,wBAAwB,KAAK,QAAQ,qCAAqC,KAAK,kBAAkB,qCAAqC,KAAK,sBAAsB,+BAA+B,KAAK,2DAA2D,gCAAgC,KAAK,oCAAoC,uCAAuC,KAAK,mCAAmC,uCAAuC,KAAK,aAAa,2BAA2B,8BAA8B,0BAA0B,6BAA6B,gBAAgB,yBAAyB,sBAAsB,yBAAyB,WAAW,qBAAqB,yBAAyB,WAAW,sBAAsB,8BAA8B,iBAAiB,mBAAmB,mBAAmB,gBAAgB,qBAAqB,mDAAmD,msF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/wC;AACkB;AAEV;AACkC;AACnE;AACM;AACiC;AACrB;AAO3C,IAAa,sCAAsC,GAAnD,MAAa,sCAAsC;IAYjD,YACU,YAA0B,EAC1B,qBAAmD,EACnD,QAAyB,EACzB,QAAkB;QAHlB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,0BAAqB,GAArB,qBAAqB,CAA8B;QACnD,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAU;QAb5B,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAC3B,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAC,EAAE,CAAC;QAEf,kBAAa,GAAuB,EAAE,CAAC;QACvC,wBAAmB,GAAuB,EAAE,CAAC;QAC7C,YAAO,GAAG,KAAK,CAAC;QAChB,MAAC,GAAQ,CAAC,CAAC;QACX,YAAO,GAAC,KAAK,CAAC;IAMV,CAAC;IAGL,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,YAAY,EAAE,EAAE,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC,CAAC;QACvG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IACD,wBAAwB;QACtB,IAAI,CAAC,yBAAyB,GAAG,IAAI,wDAAS,CAAC;YAC7C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;IACL,CAAC;IACD,oBAAoB,CAAC,WAAgB;QACnC,IAAI,CAAC,WAAW,GAAC,WAAW,CAAC;QAC7B,gCAAgC;IAClC,CAAC;IACD,6BAA6B;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,kCAAkC;QAClC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC;QAC1D,MAAM,uBAAuB,GAA8B;YACzD,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ;YACvD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;YACnD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;YACnD,UAAU,EAAE,IAAI,CAAC,WAAW;SAC7B,CAAC;QACF,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5F,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;aACxC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0BAA0B;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAChD,MAAM,MAAM,GAAe;YACzB,MAAM,EAAE,GAAG;SACZ,CAAC;QACF,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IAED,YAAY;QACV,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC;QAC1D,MAAM,uBAAuB,GAA8B;YACzD,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ;YACvD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;YACnD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;YACnD,UAAU,EAAE,IAAI,CAAC,WAAW;SAC7B,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE5F,IAAI,CAAC,mBAAmB,GAAG,IAA0B,CAAC;YACtD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvC,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC/D;iBACG;gBACF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;aAExC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,yBAAyB,CAAC,OAAO,EAAE,QAAa;QAC9C,MAAM,CAAC,GAAG,QAA8B,CAAC;QACzC,IAAI,GAAG,GAAU,EAAE,CAAC;QACpB,MAAM,IAAI,GAAU,EAAE,CAAC;QACvB,QAAQ,CAAC;QACT,IAAI,GAAG,GAAG,CAAC,UAAU,EAAE,oCAAoC,EAAE,YAAY,EAAE,QAAQ,EAAC,WAAW,EAAE,2BAA2B,EAAE,qBAAqB;YACjJ,aAAa,EAAC,gCAAgC,EAAE,QAAQ,CAAC,CAAC,CAAC,6BAA6B;QACxF,MAAM,KAAK,GAAG,iCAAiC,CAAC,CAAC,kBAAkB;QACtE,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,KAAG,SAAS,EAC3D;YACE,GAAG,GAAG,CAAC,UAAU,EAAE,oCAAoC,EAAE,YAAY,EAAE,QAAQ,EAAC,WAAW,EAAE,2BAA2B,EAAE,qBAAqB;gBAChJ,aAAa,EAAE,sBAAsB,EAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC,CAAC,6BAA6B;SAE9G;QACA,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;YACjB,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,GAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAChE,IAAI,aAAa,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YACjD,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,aAAa,EAAE,CAAC;gBAChB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;gBAChB,IAAI,aAAa,KAAK,CAAC,EAAE;oBACvB,CAAC,IAAI,KAAK,CAAC;iBACZ;aACF;YAED,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;YAC9B,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,CAAC,IAAI,aAAa,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;YACxG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;gBACpB,IAAI,OAAO,KAAK,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK,CAAC;iBAAE;aAEnC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC5B,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;gBAChB,IAAI,OAAO,KAAK,CAAC,EAAE;oBACjB,CAAC,IAAI,KAAK,CAAC;iBACZ;aACF;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,KAAG,SAAS,EAC3D;gBACA,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;oBACrC,OAAO,EAAE,CAAC;oBACV,yDAAyD;oBACzD,qEAAqE;oBACrE,IAAI,IAAI,CAAC;oBACT,IAAI,CAAC,CAAC,WAAW,KAAK,IAAI,IAAI,SAAS,IAAG,EAAE,IAAI,CAAC,EAAC;wBAChD,IAAI,GAAC,IAAI,CAAC;qBACX;yBACG;wBACF,IAAG,CAAC,CAAC,SAAS,GAAC,CAAC,EAAC;4BAAE,IAAI,GAAC,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC;yBAAC;wBACjD,IAAG,CAAC,CAAC,WAAW,GAAC,CAAC,EAAC;4BAAE,IAAI,GAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;yBAAC;qBAClD;oBACD,CAAC,IAAI,IAAI,CAAC;oBACV,IAAI,OAAO,KAAK,CAAC,EAAE;wBACjB,CAAC,IAAI,IAAI,CAAC;qBACX;iBAEF;gBACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb;YAGC,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,yDAAyD;gBACzD,qEAAqE;gBACrE,IAAI,IAAI,CAAC;gBACT,IAAI,CAAC,CAAC,cAAc,KAAK,IAAI,IAAI,SAAS,IAAG,EAAE,IAAI,CAAC,EAAC;oBACnD,IAAI,GAAC,IAAI,CAAC;iBACX;qBACG;oBACF,IAAG,CAAC,CAAC,SAAS,GAAC,CAAC,EAAC;wBAAE,IAAI,GAAC,CAAC,CAAC,cAAc,GAAG,OAAO,CAAC;qBAAC;oBACpD,IAAG,CAAC,CAAC,WAAW,GAAC,CAAC,EAAC;wBAAE,IAAI,GAAC,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC;qBAAC;iBACrD;gBACD,CAAC,IAAI,IAAI,CAAC;gBACV,IAAI,OAAO,KAAK,CAAC,EAAE;oBACjB,CAAC,IAAI,IAAI,CAAC;iBACX;aAEF;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,MAAM,IAAI,GAAG,CAAC,CAAC,cAAc,KAAK,IAAI,IAAI,SAAS;oBACjD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBAEtE,CAAC,IAAI,IAAI,CAAC;gBACV,IAAI,OAAO,KAAK,CAAC,EAAE;oBACjB,CAAC,IAAI,KAAK,CAAC;iBACZ;aAEF;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACf,GAAG,GAAG,EAAE,CAAC;SACV;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,SAAS,CAAC,GAAU,EAAE,IAAW,EAAE,KAAU,EAAE,OAAO;QACpD,MAAM,aAAa,GAAG,4BAA4B,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,kCAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACxE,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACtD,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC/D,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACpC,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACvE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC9D,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC5D,QAAQ,CAAC;QACT,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,KAAK,GAAC,KAAK,GAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,MAAM,CAAC,GAAG,GAAG,wCAAwC,CAAC;QACtD,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,MAAM,CAAC,GAAG,GAAG,mCAAmC,CAAC;QACjD,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9C,sEAAsE;QACtE,sEAAsE;QACtE,sCAAsC;QACtC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACnC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC;QAC9D,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAE9C,MAAM,WAAW,GAAG,UAAU,IAAI;YAChC,SAAS;YAET,SAAS;YACT,IAAI,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,yDAAyD;YACzD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC3C,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,aAAa,CAAC;aACpC;YACD,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACrF,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,8BAA8B;QAC3F,CAAC,CAAC;QACF,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EACrB;YACE,KAAK,EAAE,MAAM;YACb,gFAAgF;YAChF,qFAAqF;YACrF,YAAY;YACZ,wFAAwF;YACxF,oBAAoB;YACpB,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;YAC9E,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI;YACpD,2BAA2B;YAC3B,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAG,IAAI,EAAE,EAAE,EAAC;YAC9B,UAAU,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAE5D,MAAM,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;SAI7D,CAAC,CAAC;QAEL,iDAAiD;QACjD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;YAC3C,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAClC;QACE,+BAA+B;QACnC,4BAA4B;QACzB,GAAG,CAAC,aAAa,CAAC;YAChB,KAAK,EAAE,KAAK,GAAG,MAAM;SACxB,CAAC,CAAC;QAEJ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,+BAA+B;IAClC,CAAC;IACD,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;QACpC,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;SACR;QAED,MAAM,cAAc,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC;QAEnE,IAAI,cAAc,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;YAC1D,OAAM;SACP;QAED,IAAI,IAAI,CAAC;QAET,IAAI,IAAI,CAAC,GAAG,YAAY,IAAI,EAAE;YAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;SAC3B;aAAM;YACL,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,QAAQ,EAAE;gBAC/B,sBAAsB;gBACtB,6CAA6C;gBAC7C,OAAO;aACR;iBAAM;gBACL,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;aACtB;SACF;QAED,oCAAoC;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAEvC,+BAA+B;QAC/B,MAAM,gBAAgB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/H,MAAM,YAAY,GAAG,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;QAEzF,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC;QAE3D,oCAAoC;QAEpC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE;YACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE;YACnC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACjC;QAED,IAAI,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,YAAY,EAAE;YACzC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC;SACvC;IACH,CAAC;CACF;;YA9VyB,oEAAY;YACH,sGAA4B;YACzC,0EAAe;YACf,wDAAQ;;AAhBjB,sCAAsC;IALlD,+DAAS,CAAC;QACT,QAAQ,EAAE,sCAAsC;QAChD,oSAAgE;;KAEjE,CAAC;GACW,sCAAsC,CA2WlD;AA3WkD;;;;;;;;;;;;;ACfnD;AAAe,4EAAa,yBAAyB,KAAK,uBAAuB,uCAAuC,kCAAkC,KAAK,uBAAuB,0CAA0C,kCAAkC,oCAAoC,KAAK,oBAAoB,yCAAyC,kCAAkC,uBAAuB,wBAAwB,KAAK,QAAQ,qCAAqC,KAAK,kBAAkB,qCAAqC,KAAK,sBAAsB,+BAA+B,KAAK,2DAA2D,gCAAgC,KAAK,oCAAoC,uCAAuC,KAAK,mCAAmC,uCAAuC,KAAK,sBAAsB,yBAAyB,WAAW,qBAAqB,yBAAyB,WAAW,sBAAsB,8BAA8B,iBAAiB,mBAAmB,mBAAmB,gBAAgB,qBAAqB,+CAA+C,m1E;;;;;;;;;;;;;;;;;;;;;;;;ACA7kC;AACT;AACG;AAE4B;AACzB;AACP;AACd;AACS;AAQ3D,IAAa,gCAAgC,GAA7C,MAAa,gCAAgC;IAgB3C,YACU,uBAAuD,EACvD,YAA4B,EAC5B,mBAAwC,EACxC,QAAyB,EACzB,IAAgB;QAJhB,4BAAuB,GAAvB,uBAAuB,CAAgC;QACvD,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,SAAI,GAAJ,IAAI,CAAY;QAlBnB,YAAO,GAAG,KAAK,CAAC;QAGvB,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAM3B,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC;QAClD,eAAU,GAAG,EAAE,CAAC;QAChB,MAAC,GAAQ,CAAC,CAAC;QACX,6BAAwB,GAAC,KAAK,CAAC;IAS9B,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,YAAY,EAAC,EAAE,EAAE,eAAe,EAAE,YAAY,EAAC,CAAC,CAAC;QACrG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,wEAAwE;IACzE,CAAC;IACD,gCAAgC;QAC9B,IAAI,CAAC,0BAA0B,GAAG,IAAI,wDAAS,CAAC;YAC9C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IACD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC7C,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,EAAE;IACF,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,kCAAkC;gBAClC,yCAAyC;gBACzC,uCAAuC;gBACvC,2CAA2C;gBAC5C,qBAAqB;gBACpB,qCAAqC;aACtC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,KAAK;IAEL,kCAAkC;IAClC,uCAAuC;IACvC,6FAA6F;IAC7F,oCAAoC;IACpC,4CAA4C;IAC5C,WAAW;IACX,2CAA2C;IAC3C,uDAAuD;IACvD,4CAA4C;IAE5C,gDAAgD;IAChD,oDAAoD;IACpD,8BAA8B;IAC9B,8CAA8C;IAC9C,iBAAiB;IACjB,8CAA8C;IAC9C,4CAA4C;IAC5C,UAAU;IACV,oBAAoB;IACpB,4BAA4B;IAC5B,UAAU;IACV,IAAI;IACJ,eAAe,CAAC,KAAa;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,mCAAmC;gBACnC,wCAAwC;gBACxC,6CAA6C;gBAC7C,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,mCAAmC;gBACnC,wCAAwC;gBACxC,uCAAuC;gBACvC,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,oBAAoB,CAAC,CAAC;aAC7B;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iBAAiB,CAAC,KAAa;QAC7B,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,mCAAmC;gBACnC,wCAAwC;gBACxC,qCAAqC;gBACrC,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;aAClD;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,6BAA6B;QAC3B,IAAI,CAAC,uBAAuB,CAAC,6BAA6B,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE5E,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;QAClD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mCAAmC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,yBAAyB,GAAkC;YAC/D,QAAQ,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,QAAQ;YACxD,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM;YACpD,SAAS,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,SAAS;SAC3D,CAAC;QACF,IAAI,CAAC,uBAAuB,CAAC,mCAAmC,CAAC,yBAAyB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3G,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW,CAAC,CAAmB;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IACxB,CAAC;IACD,gBAAgB,CAAC,CAAmB;QAClC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE;QAC1B,iDAAiD;SAChD,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YAChD,IAAG,IAAI,CAAC,WAAW,GAAC,CAAC,EACrB;gBACE,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,WAAW,CAAC;aACtC;YACD,IAAG,IAAI,CAAC,SAAS,GAAC,CAAC,EACnB;gBACE,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,SAAS,CAAC;aACpC;YACF,8FAA8F;QAC/F,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc,CAAC,MAAU,EAAC,QAAY,EAAC,QAAY;QAEjD,IAAI,CAAC,wBAAwB,GAAC,KAAK,CAAC;QACpC,IAAI,MAAM,IAAE,EAAE,EAAC;YACb,IAAG,CAAC,MAAM,GAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,CAAC;mBAC/B,CAAE,MAAM,GAAG,QAAQ,IAAI,MAAM,IAAI,CAAC,CAAC,EACtC;gBACC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBAC/C,IAAI,CAAC,wBAAwB,GAAC,IAAI,CAAC;aAClC;SAED;IAEN,CAAC;IACD,OAAO,CAAC,CAAsB;QAE5B,IAAI,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC;eACzD,CAAE,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,EAAE;YAChE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,OAAO,KAAK,CAAC;SACd;QACD,kEAAkE;QAClE,oDAAoD;QACpD,kBAAkB;QAClB,IAAI;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAClE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CACzB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;QAC9B,iDAAiD;SAChD,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YAChD,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtE,MAAM,IAAI,GAAG,IAA2B,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QACzD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM,CAAC,CAAsB;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAClE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CACzB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;QAC9B,iDAAiD;SAChD,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YAChD,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrE,MAAM,IAAI,GAAG,IAA2B,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QACvD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uBAAuB;QACrB,MAAM,kBAAkB,GAAkC;YACxD,QAAQ,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,QAAQ;YAC5H,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM;YACtH,SAAS,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,SAAS;SAC3D,CAAC;QACF,IAAI,kBAAkB,CAAC,QAAQ,KAAK,SAAS,IAAI,kBAAkB,CAAC,QAAQ,IAAI,IAAI;YAClF,kBAAkB,CAAC,MAAM,KAAK,SAAS,IAAI,kBAAkB,CAAC,MAAM,IAAI,IAAI,EAAI;YAChF,IAAI,CAAC,6BAA6B,EAAE,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,mCAAmC,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACpG,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;YAClD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,oBAAoB;QAClB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;CACF;;YA5RoC,0GAA8B;YACzC,kEAAc;YACP,kFAAmB;YAC9B,0EAAe;YACnB,+DAAU;;AApByB;IAAlD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;2EAAqC;AACtC;IAAhD,+DAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;yEAAmC;AAFxE,gCAAgC;IAL5C,+DAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;QACzC,+QAAyD;;KAE1D,CAAC;GACW,gCAAgC,CA6S5C;AA7S4C;;;;;;;;;;;;;AChB7C;AAAe,mFAAoB,uCAAuC,kCAAkC,KAAK,uBAAuB,0CAA0C,kCAAkC,oCAAoC,KAAK,QAAQ,qCAAqC,KAAK,8BAA8B,oCAAoC,uCAAuC,uBAAuB,wBAAwB,KAAK,sBAAsB,yBAAyB,WAAW,qBAAqB,yBAAyB,WAAW,sBAAsB,8BAA8B,iBAAiB,mBAAmB,mBAAmB,gBAAgB,qBAAqB,+CAA+C,2mD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5sB;AACQ;AACU;AAEwB;AACnE;AACM;AACiC;AACrB;AAO3C,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAUzC,YACU,YAA0B,EAC1B,qBAAmD,EACnD,QAAyB,EACzB,QAAkB;QAHlB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,0BAAqB,GAArB,qBAAqB,CAA8B;QACnD,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAU;QAX5B,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAC3B,eAAU,GAAG,EAAE,CAAC;QAEhB,kBAAa,GAAuB,EAAE,CAAC;QACvC,YAAO,GAAG,KAAK,CAAC;QAChB,MAAC,GAAQ,CAAC,CAAC;IAQP,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC1C,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,aAAa,EAAE,EAAE,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC,CAAC;QACxG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACzE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAE1D,CAAC;IACD,gCAAgC;QAC9B,IAAI,CAAC,yBAAyB,GAAG,IAAI,wDAAS,CAAC;YAC7C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;IACL,CAAC;IACD,6BAA6B;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,kCAAkC;QAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC;QAC5D,MAAM,uBAAuB,GAA8B;YACzD,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ;YACvD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;YACnD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;SACpD,CAAC;QACF,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjG,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;aACxC;YACD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;oBAChC,IAAI,CAAC,CAAC,YAAY,EAAE;wBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC;wBAC9D,IAAI,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;4BAChC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gCACnC,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC;gCACxB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;gCACnB,wDAAwD;6BACvD;yBACF;qBACF;iBAEF;aACF;QAEH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAkC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAmB;YAC/B,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,IAAI,CAAC,qBAAqB,CAAC,kCAAkC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvF,IAAI,CAAC,aAAa,GAAG,IAA0B,CAAC;YAChD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBAC7B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;oBAChC,IAAI,CAAC,CAAC,YAAY,EAAE;wBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC;wBAC9D,IAAI,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;4BAChC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gCACnC,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC;gCACxB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;6BAClB;yBACF;qBACF;iBAEF;aACF;YAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IACD,yBAAyB;QACvB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;YAChD,OAAO,KAAK,CAAC;SACd;QACD,2BAA2B;QAC3B,mCAAmC;QACnC,yBAAyB;QACzB,IAAI,OAAO,CAAC;QACZ,IAAI,UAAU;QACd,MAAM,CAAC,GAAG,IAAI,CAAC,aAAmC,CAAC;QACnD,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;YACf,OAAO,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;YACjC,UAAU,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;SACrC;QACD,IAAI,GAAG,GAAU,EAAE,CAAC;QACpB,IAAI,IAAI,GAAU,EAAE,CAAC;QACrB,IAAI,GAAG,GAAG,CAAC,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc;YAC9F,UAAU,EAAE,qBAAqB,EAAE,aAAa,EAAE,wBAAwB,EAAE,+BAA+B,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,6BAA6B;QAClK,uFAAuF;QACvF,sGAAsG;QACtG,IAAI,KAAK,GAAG,iCAAiC,CAAC,CAAC,kBAAkB;QACjE,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAEjC,IAAI,aAAa,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YACjD,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,aAAa,EAAE,CAAC;gBAChB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;gBAChB,IAAI,aAAa,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK;iBAAE;gBAAA,CAAC;aAExC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;YAC9B,2BAA2B;YAE3B,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,CAAC,IAAI,aAAa,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;YACxG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;gBACpB,IAAI,OAAO,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK;iBAAE;gBAAA,CAAC;aAElC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAC1B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAE5B,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;gBAChB,IAAI,OAAO,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK;iBAAE;gBAAA,CAAC;aAElC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,EAAE;oBACrB,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC5B;gBACD,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,EAAE;oBACnB,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC;iBAC5B;gBACD,IAAI,OAAO,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK;iBAAE;gBAAA,CAAC;aAElC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,uDAAuD;gBACvD,qEAAqE;gBACrE,IAAI,IAAI,CAAC;gBACT,IAAI,CAAC,CAAC,cAAc,KAAK,IAAI,IAAI,SAAS,IAAI,EAAE,IAAI,CAAC,EAAE;oBACrD,IAAI,GAAG,IAAI,CAAC;iBACb;qBACI;oBACH,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,EAAE;wBAAE,IAAI,GAAG,CAAC,CAAC,cAAc,GAAG,OAAO,CAAC;qBAAE;oBAC3D,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,EAAE;wBAAE,IAAI,GAAG,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC;qBAAE;iBAC5D;gBAED,CAAC,IAAI,IAAI,CAAC;gBACV,IAAI,OAAO,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,IAAI;iBAAE;gBAAA,CAAC;aAEjC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,IAAI,IAAI,GAAG,CAAC,CAAC,cAAc,KAAK,IAAI,IAAI,SAAS;oBAC/C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;gBACpE,CAAC,IAAI,IAAI,CAAC;gBACV,IAAI,OAAO,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK;iBAAE;gBAAA,CAAC;aAClC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,OAAO,GAAG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACrC,OAAO,EAAE,CAAC;gBACV,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS;oBAC3C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC3B,CAAC,IAAI,OAAO,CAAC;gBACb,IAAI,OAAO,IAAI,CAAC,EAAE;oBAAE,CAAC,IAAI,KAAK;iBAAE;gBAAA,CAAC;aAClC;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACf,GAAG,GAAG,EAAE,CAAC;SACV;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IACxD,CAAC;IAED,SAAS,CAAC,GAAU,EAAE,IAAW,EAAE,KAAU,EAAE,OAAY,EAAE,UAAe;QAC1E,MAAM,aAAa,GAAG,4BAA4B,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,kCAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACtC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAClC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAErC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACjC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC;QAC9D,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,UAAU,IAAI;YAC9B,SAAS;YAET,SAAS;YACT,IAAI,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,yDAAyD;YACzD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC3C,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,aAAa,CAAC;aACpC;YACD,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACnF,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,8BAA8B;QAC3F,CAAC,CAAC;QACF,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EACrB;YACE,KAAK,EAAE,MAAM;YACb,gFAAgF;YAChF,oFAAoF;YACpF,YAAY;YACZ,wFAAwF;YACxF,oBAAoB;YACpB,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAG1C,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;YACpB,UAAU,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;YAE5D,MAAM,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;SAEhF,CAAC,CAAC;QAEL,gDAAgD;QAChD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;YAC3C,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAClC;QAED,4BAA4B;QAC5B,GAAG,CAAC,aAAa,CAAC;YAChB,KAAK,EAAE,KAAK,GAAG,MAAM;SACtB,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;CAGF;;YAvSyB,oEAAY;YACH,sGAA4B;YACzC,0EAAe;YACf,wDAAQ;;AAdjB,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,6BAA6B;QACvC,yQAAuD;;KAExD,CAAC;GACW,8BAA8B,CAkT1C;AAlT0C;;;;;;;;;;;;;ACf3C;AAAe,iFAAkB,uCAAuC,KAAK,SAAS,oBAAoB,6BAA6B,KAAK,+BAA+B,6CAA6C,0CAA0C,qCAAqC,0CAA0C,KAAK,6BAA6B,wCAAwC,yCAAyC,wCAAwC,uBAAuB,2BAA2B,+BAA+B,6BAA6B,SAAS,kBAAkB,mCAAmC,oCAAoC,6BAA6B,SAAS,iBAAiB,6CAA6C,SAAS,sBAAsB,6BAA6B,SAAS,uBAAuB,2CAA2C,SAAS,mBAAmB,4BAA4B,UAAU,eAAe,+BAA+B,yBAAyB,SAAS,0BAA0B,+BAA+B,EAAE,SAAS,iBAAiB,+BAA+B,gCAAgC,SAAS,0BAA0B,gCAAgC,6BAA6B,wCAAwC,4BAA4B,6BAA6B,6BAA6B,2BAA2B,+BAA+B,gCAAgC,iDAAiD,iDAAiD,kCAAkC,wCAAwC,SAAS,gCAAgC,oCAAoC,SAAS,uBAAuB,2CAA2C,sCAAsC,SAAS,uBAAuB,8CAA8C,sCAAsC,SAAS,oBAAoB,6CAA6C,SAAS,2DAA2D,oCAAoC,SAAS,0BAA0B,gCAAgC,oCAAoC,6BAA6B,wCAAwC,4BAA4B,6BAA6B,6BAA6B,2BAA2B,+BAA+B,gCAAgC,iDAAiD,iDAAiD,kCAAkC,SAAS,kDAAkD,25J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtmF;AACN;AACJ;AAEA;AACA;AACe;AACrB;AAGR;AACS;AACiB;AAEnD;AACM;AACY;AAO3C,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAiFnC,YACU,eAAgC,EAChC,YAA4B,EAC5B,QAAyB,EACzB,eAAuC,EACvC,YAA0B,EAC1B,IAAgB,EAChB,mBAAwC,EACxC,QAAkB;QAPlB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,oBAAe,GAAf,eAAe,CAAwB;QACvC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAY;QAChB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAU;QA5E5B,oBAAe,GAAG,MAAM,CAAC;QACzB,uBAAkB,GAAG,KAAK,CAAC;QACpB,YAAO,GAAG,KAAK,CAAC;QACvB,eAAU,GAAgB,EAAE,CAAC;QAC7B,wBAAmB,GAA0B,EAAE,CAAC;QAChD,6BAAwB,GAAG,EAAE,CAAC;QAC9B,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;QAGjB,aAAQ,GAAkC,EAAE,CAAC;QAC7C,mBAAc,GAAG,IAAI,CAAC;QAOtB,wBAAmB,GAA0B,EAAE,CAAC;QAEhD,kCAA6B,GAAG,KAAK,CAAC;QACtC,+BAA0B,GAAC,KAAK,CAAC;QAEjC,qBAAgB,GAAG,KAAK,CAAC;QACzB,wBAAmB,GAAG,IAAI,CAAC;QAC3B,gBAAW,GAAG,KAAK,CAAC;QACpB,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC;QAClD,kBAAa,GAAG,EAAE,CAAC;QACnB,eAAU,GAAG,EAAE,CAAC;QAChB,MAAC,GAAQ,CAAC,CAAC;QACX,OAAE,GAAQ,CAAC,CAAC;QACZ,OAAE,GAAQ,CAAC,CAAC;QACZ,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,oBAAe,GAAG,KAAK,CAAC;QACxB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,WAAM,GAAG;YACP,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QACF,sBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,cAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QAC1I,EAAE;QACF,kBAAkB;QACpB,iBAAY,GAAG;YACb,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE;YACvC,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAC;YAC3B,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAC;YACzB,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAC;YACvB,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAC;YACrB,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAC;YACzB,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,iCAAiC,EAAC;YAChD,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAC;YAC7B,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAC;YACtB,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAC;YAC1B,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC;YACvB,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAC;SAC3B,CAAC;QAQD,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;IAWvB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,aAAa,EAAE,EAAE,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC,CAAC;QACxG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;IAC5B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IACD,yBAAyB;QAEvB,IAAI,CAAC,mBAAmB,GAAG,IAAI,wDAAS,CAAC;YACvC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7D,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,IAAI,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7D,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3D,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,WAAW,EAAE,IAAI,0DAAW,CAAC,uBAAuB,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3E,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,yDAAyD;YACzD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IACD,4BAA4B;QAC1B,IAAI,CAAC,sBAAsB,GAAG,IAAI,wDAAS,CAAC;YAC1C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAChC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC;YACF,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC7B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC;aAC7C,CAAC;YACF,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC/B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC;aAC7C,CAAC;YACF,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC7B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC;aAC7C,CAAC;YACF,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1D,CAAC,CAAC;IACL,CAAC;IACD,0BAA0B,CAAC,QAA0B;QACnD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACpF,CAAC;IACD,uBAAuB,CAAC,QAA0B;QAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YACjE,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB,CAAC,QAA0B;QAC5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC5D,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,4BAA4B,CAAC,QAA0B;QACrD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC9D,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,kCAAkC,CAAC,QAA0B;QAC3D,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnE,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,UAAU;YACjB,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;IACD,eAAe;QACX,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxD,IAAI,SAAiB,CAAC;QACtB,iDAAiD;QACjD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAE,UAAS,IAAI,EAAE,KAAK;YAC3C,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;gBAC7B,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACrB,CAAC;IACD,6BAA6B,CAAC,IAAU;QACtC,IAAI,IAAI,EAAE;YACR,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,WAAW,GAAG,MAAM,CAAC;YAC3B,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EACtD,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC,WAAW,EAAE,EAAE;gBACjE,OAAO,mBAAmB,CAAC;aAC5B;YACD,IAAI,QAAQ,GAAG,OAAO,EAAE;gBACtB,OAAO,iBAAiB,CAAC;aAC1B;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;YAClF,OAAO;SACV;QACD,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YACpC,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;YAClC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC3E,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC;gBAChE,MAAM,KAAK,GAAG,IAA2B,CAAC;YAC5C,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACrB;IACH,CAAC;IACD,iBAAiB,CAAC,KAAK;QACrB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;YAClF,OAAO;SACR;QACD,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YACpC,MAAM,WAAW,GAAG,IAAI,QAAQ,EAAE,CAAC;YACnC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC7E,MAAM,KAAK,GAAG,IAA2B,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;YACnE,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACtB;IACH,CAAC;IACD,kBAAkB,CAAC,KAAK;QACtB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;YAClF,OAAO;SACR;QACD,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YACpC,MAAM,YAAY,GAAG,IAAI,QAAQ,EAAE,CAAC;YACpC,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC/E,MAAM,KAAK,GAAG,IAA2B,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;YAC5D,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;SACzB;IACH,CAAC;IACD,sBAAsB,CAAC,KAAK;QAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;YAClF,OAAO;SACT;QACA,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YACpC,MAAM,aAAa,GAAG,IAAI,QAAQ,EAAE,CAAC;YACrC,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACjF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBAC7D,MAAM,KAAK,GAAG,IAA2B,CAAC;YAC5C,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACvB;IACH,CAAC;IACD,oBAAoB,CAAC,IAAY;QAC/B,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,CAAC,wBAAwB,GAAG,aAAa,CAAC;YAC9C,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;YACpC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzD,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACtC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAClE;QACD,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,IAAI,CAAC,wBAAwB,GAAG,gBAAgB,CAAC;YACjD,MAAM,MAAM,GAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACvC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAElE;QACD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IACD,iBAAiB;IACjB,CAAC;IACD,aAAa;QACX,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAC1C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,UAAU,GAAG,IAAmB,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,gBAAgB;QACd,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,GAAwB;gBAC7B,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM;gBAChD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,YAAY,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,YAAY;gBAC5D,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS;gBACtD,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS;gBACtD,UAAU,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,UAAU;gBACxD,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,eAAe;gBAClE,YAAY,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,YAAY;gBAC5D,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW;gBAC1D,cAAc,EAAE,IAAI;gBACpB,UAAU,EAAE,CAAC;gBACb,OAAO,EAAE,IAAI;aACd,CAAC;YACF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBACxC,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE;oBAC1D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC;oBACvE,OAAO,KAAK,CAAC;iBACd;aACF;YACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;YACvC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1B,MAAM,CAAC,GAAwB;gBAC7B,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM;gBAChD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;gBACpD,YAAY,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,YAAY;gBAC5D,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS;gBACtD,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS;gBACtD,UAAU,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,UAAU;gBACxD,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,eAAe;gBAClE,YAAY,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,YAAY;gBAC5D,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW;gBAC1D,cAAc,EAAE,IAAI;gBACpB,UAAU,EAAE,CAAC;gBACb,OAAO,EAAE,IAAI;aACd,CAAC;YACF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YACpB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;YAChC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;YAC5B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;YAChC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;YAC9B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CACjG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;YACvC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;SACrC;IACH,CAAC;IACD,aAAa,CAAC,CAAsB;QAClC,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxD,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE;oBACvD,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACvC;aACF;SACF;aAAM;YACL,OAAO;SACR;IACH,CAAC;IACD,WAAW,CAAC,CAAsB;QAChC,MAAM,8BAA8B,GAAmC;YACrE,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;YAC/C,QAAQ,EAAC,CAAC,CAAC,QAAQ;YACnB,QAAQ,EAAC,CAAC,CAAC,QAAQ;YACnB,MAAM,EAAC,CAAC,CAAC,MAAM;SAChB,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,8BAA8B,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YACpG,IAAI,CAAC,QAAQ,GAAG,IAAqC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YACpE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;YAC1D,IAAI,CAAC,kBAAkB,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;YACzD,IAAG,CAAC,CAAC,EAAE,EAAC;gBACN,IAAI,CAAC,mBAAmB,IAAI,CAAC,CAAC,SAAS,CAAC;gBACxC,IAAI,CAAC,kBAAkB,IAAG,CAAC,CAAC,WAAW,CAAC;aACzC;YACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACjE,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,EAAE;QACF,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,MAAM,EAAE,CAAC,CAAC,MAAM;YAChB,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,YAAY,EAAE,CAAC,CAAC,YAAY;YAC5B,SAAS,EAAE,CAAC,CAAC,SAAS,IAAK,SAAS,IAAI,IAAI;YAC5C,SAAS,EAAE,CAAC,CAAC,SAAS;YACtB,UAAU,EAAE,CAAC,CAAC,UAAU;YACxB,eAAe,EAAE,CAAC,CAAC,eAAe;YAClC,YAAY,EAAE,CAAC,CAAC,YAAY;YAC5B,WAAW,EAAE,CAAC,CAAC,WAAW,IAAI,SAAS,IAAI,IAAI;SAChD,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,2BAA2B;QACzB,IAAI,CAAC,0BAA0B,GAAC,KAAK,CAAC;QACtC,IAAI,CAAC,6BAA6B,GAAC,KAAK,CAAC;QACzC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,WAAW,GAA4B;YAC3C,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;SAChD,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YAC9E,IAAI,CAAC,QAAQ,GAAG,IAAqC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,CAA8B;QAC9C,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,iDAAiD;QACjD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YACnD,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE;gBACjE,CAAC,GAAG,WAAW,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,WAAW,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uDAAuD,CAAC,CAAC;YAC/E,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjE,EAAE;QACF,IAAG,CAAC,CAAC,cAAc,GAAC,CAAC,EAAC;YACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YAC9D,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;YAC3D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAI,CAAC,mBAAmB,GAAC,CAAC,CAAC,eAAe,CAAC;SAC3C;QACD,IAAG,CAAC,CAAC,WAAW,GAAC,CAAC,EAAC;YAClB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;YAC5D,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;YAC7D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC5D,gBAAgB;YAChB,IAAI,CAAC,kBAAkB,GAAC,CAAC,CAAC,eAAe,CAAC;SACzC;QACH,EAAE;QACH,2EAA2E;QAC1E,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;QAC5D,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;QAClC,yCAAyC;QACzC,oDAAoD;QACpD,gDAAgD;QAChD,+BAA+B;QAC/B,mBAAmB;QACnB,MAAM;QACN,MAAM;IACR,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,0BAA0B,GAAC,KAAK,CAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC5D,IAAG,OAAO,GAAC,IAAI,CAAC,mBAAmB,EAAC;YAClC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC1D,IAAI,CAAC,0BAA0B,GAAC,IAAI,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;SAClD;aACG;YACF,IAAI,CAAC,0BAA0B,GAAC,KAAK,CAAC;YACtC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;SAC5D;IACH,CAAC;IACD,wBAAwB;QACtB,IAAI,CAAC,6BAA6B,GAAC,KAAK,CAAC;QACzC,MAAM,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW,CAAC;QACrE,IAAG,cAAc,GAAC,IAAI,CAAC,kBAAkB,EAAC;YACxC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,6BAA6B,GAAC,IAAI,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;SAClD;aACG;YACF,IAAI,CAAC,6BAA6B,GAAC,KAAK,CAAC;YACzC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;SAC5D;IACH,CAAC;IACD,eAAe;QACb,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;IACxD,CAAC;IACD,mBAAmB;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW,CAAC;QAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC5D,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,EAAE,CAAC,EAAE;YAC/H,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC3D,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACjE;QACD,IAAG,MAAM,GAAC,CAAC,EAAE;YACX,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,YAAY,CAAC;YAC9D,MAAM,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;YAClC,MAAM,YAAY,GAAG,QAAQ,GAAG,MAAM,CAAC;YACvC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;SAC3E;QACD,IAAG,IAAI,GAAC,CAAC,EAAE;YACT,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,YAAY,CAAC;YAC9D,MAAM,QAAQ,GAAG,IAAI,GAAG,OAAO,CAAC;YAChC,MAAM,YAAY,GAAG,QAAQ,GAAG,MAAM,CAAC;YACvC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;SAC3E;IACH,CAAC;IAED,oBAAoB;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACrC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,iDAAiD;YACjD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;gBACnD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YAC7D,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,oBAAoB;QAClB,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,WAAW,CAAC;QAC/D,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC3D,MAAM,QAAQ,GAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,iDAAiD;QACjD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAChE,CAAC;YACF,IAAK,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE;gBACjC,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;gBAC1C,QAAQ,GAAG,KAAK,CAAC;aAClB;iBAAM;gBACL,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;gBAC3C,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;aAE5D;YAED,IAAI,CAAC,QAAQ,EAAE;gBACb,IAAI,CAAC,0BAA0B,GAAG;oBACjC,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAC,QAAQ;oBACjB,WAAW,EAAE,QAAQ;oBACrB,UAAU,EAAE,QAAQ;iBACpB,CAAC;gBACF,IAAI,CAAC,eAAe,CAAC,mCAAmC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACzG,IAAI,CAAC,qBAAqB,GAAG,IAAmC,CAAC;oBACjE,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,KAAK,KAAK,EAAE;wBACzD,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;wBAC1C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;wBAC5D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;qBACpD;yBAAM;wBACL,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;wBAC3C,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;qBAE5D;gBACD,CAAC,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,CAAC,0BAA0B,GAAG;gBAChC,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,QAAQ;gBACjB,WAAW,EAAE,QAAQ;gBACrB,UAAU,EAAE,QAAQ;aACrB,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,mCAAmC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACxG,IAAI,CAAC,qBAAqB,GAAG,IAAmC,CAAC;gBACjE,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,KAAK,KAAK,EAAE;oBACzD,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBAC5D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;iBACpD;qBAAM;oBACL,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;oBAC3D,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;iBAC5C;YACD,CAAC,CAAC,CAAC;SACL;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IACD,OAAO;QACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IACD,kCAAkC;QAChC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC5C,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;SAC9B;QACD,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC/D,CAAC;IACD,sBAAsB;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAClD,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;YACrC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACjD,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAChD,MAAM,MAAM,GAAyB;gBACnC,EAAE,EAAE,CAAC;gBACL,aAAa,EAAE,CAAC;gBAChB,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,iBAAiB;gBACnE,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,YAAY;gBACzD,cAAc,EAAE,IAAI,IAAI,EAAE;gBAC1B,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ;gBACjD,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,eAAe;gBAC/D,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,aAAa;gBAC3D,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,WAAW;gBACvD,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,KAAK;gBACnB,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,IAAI;gBACpB,UAAU,EAAE,KAAK;aAClB,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACnE,MAAM,UAAU,GAAG,IAA2B,CAAC;gBAC/C,gCAAgC;gBAChC,MAAM,WAAW,GAA0B,EAAE,CAAC;gBAC9C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBACxC,MAAM,GAAG,GAAwB;wBAC/B,EAAE,EAAE,CAAC;wBACL,KAAK,EAAE,UAAU,CAAC,EAAE;wBACpB,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBACpB,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBACpB,MAAM,EAAE,CAAC,CAAC,MAAM;wBAChB,YAAY,EAAE,CAAC,CAAC,YAAY;wBAC5B,YAAY,EAAE,CAAC,CAAC,YAAY;wBAC5B,SAAS,EAAE,CAAC,CAAC,SAAS;wBACtB,SAAS,EAAE,CAAC,CAAC,SAAS;wBACtB,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBACpB,WAAW,EAAE,CAAC,CAAC,WAAW;wBAC1B,UAAU,EAAE,CAAC,CAAC,UAAU;wBACxB,eAAe,EAAE,CAAC,CAAC,eAAe;wBAClC,cAAc,EAAE,IAAI;wBACpB,UAAU,EAAE,CAAC;wBACb,OAAO,EAAE,IAAI;qBACd,CAAC;oBACF,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACvB;gBACD,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBAC5E,MAAM,WAAW,GAAG,QAAiC,CAAC;oBACtD,IAAI,UAAU,CAAC,EAAE,KAAK,SAAS,IAAI,UAAU,CAAC,EAAE,GAAG,CAAC,EAAE;wBACpD,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;4BAC5E,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;4BAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,SAAS,EAAE,CAAC;wBACrB,CAAC,EAAE,CAAC,CAAC,EAAE;4BACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;wBACxD,CAAC,CAAC,CAAC;qBACJ;gBACH,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;SACJ;QACD,IAAK,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YACrC,MAAM,aAAa,GAAkC;gBACnD,EAAE,EAAE,IAAI,CAAC,OAAO;gBAChB,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ;gBACjD,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,eAAe;gBAC/D,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,aAAa;gBAC3D,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,WAAW;gBACvD,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,iBAAiB;aACpE,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAChF,MAAM,UAAU,GAAG,QAA+B,CAAC;gBACnD,gCAAgC;gBAChC,MAAM,kBAAkB,GAA0B,EAAE,CAAC;gBACrD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBACxC,MAAM,GAAG,GAAwB;wBAC/B,EAAE,EAAE,CAAC;wBACL,KAAK,EAAE,UAAU,CAAC,EAAE;wBACpB,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBACpB,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBACpB,MAAM,EAAE,CAAC,CAAC,MAAM;wBAChB,YAAY,EAAE,CAAC,CAAC,YAAY;wBAC5B,YAAY,EAAE,CAAC,CAAC,YAAY;wBAC5B,SAAS,EAAE,CAAC,CAAC,SAAS;wBACtB,SAAS,EAAE,CAAC,CAAC,SAAS;wBACtB,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBACpB,WAAW,EAAE,CAAC,CAAC,WAAW;wBAC1B,UAAU,EAAE,CAAC,CAAC,UAAU;wBACxB,eAAe,EAAE,CAAC,CAAC,eAAe;wBAClC,cAAc,EAAE,IAAI;wBACpB,UAAU,EAAE,CAAC;wBACb,OAAO,EAAE,IAAI;qBACd,CAAC;oBACF,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC9B;gBACD,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC/F,MAAM,SAAS,GAAG,IAA6B,CAAC;oBAChD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBACjE,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,8BAA8B;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,QAAQ,GAA4B;YACxC,UAAU,EAAE,CAAC;SACd,CAAC;QACF,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QAC1D,IAAI,CAAC,eAAe,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,IAAI,CAAC,mBAAmB,GAAG,IAA6B,CAAC;YACzD,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;aACjE;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc,CAAC,CAAsB;QACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,uBAA4B,CAAC;QACjC,MAAM,qBAAqB,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACzG,IAAI,CAAC,CAAC,cAAc,KAAK,SAAS,IAAI,CAAC,CAAC,cAAc,KAAK,IAAI,EAAE;YAC/D,uBAAuB,GAAG,CAAC,CAAC,cAAc,CAAC;SAC5C;aAAM;YACL,uBAAuB,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;SACtG;QACD,IAAI,CAAC,CAAC,YAAY,KAAK,KAAK,EAAE;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;aAAM,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;QACD,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAC7E,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QACjF,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;QAC5E,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QACpE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,CAAC;QACzD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,sBAAsB,EAAE,CAAC;QAChE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,sBAAsB,EAAE,CAAC;QACjE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,eAAe,EAAE,CAAC;QAC7D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,sBAAsB,EAAE,CAAC;QACpE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,sBAAsB,EAAE,CAAC;QAClE,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,CAAC;IAC3C,CAAC;IACD,4BAA4B,CAAC,OAAe;QAC1C,MAAM,QAAQ,GAAsB;YAClC,aAAa,EAAE,CAAC;SACjB,CAAC;QACF,QAAQ,CAAC,aAAa,GAAG,OAAO,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3E,IAAI,CAAC,mBAAmB,GAAG,IAA6B,CAAC;YACzD,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtB,mCAAmC;gBAClC,wCAAwC;gBACxC,4CAA4C;gBAC5C,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,eAAe,CAAC,KAAa;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,mCAAmC;gBACnC,wCAAwC;gBACxC,6CAA6C;gBAC7C,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,mCAAmC;gBACnC,wCAAwC;gBACxC,uCAAuC;gBACvC,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,KAAK,CAAC,oBAAoB,CAAC,CAAC;aAC7B;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iBAAiB,CAAC,KAAa;QAC7B,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC;aAC5F,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;gBACzD,IAAI,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,mCAAmC;gBACnC,wCAAwC;gBACxC,qCAAqC;gBACrC,sBAAsB;gBACtB,sCAAsC;aACvC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;aAClD;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,aAAa;QACX,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IACD,aAAa;QACX,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,CAAC;IAC3C,CAAC;IACD,gCAAgC;QAC9B,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC/E,CAAC;IACD,qBAAqB;QACnB,MAAM,QAAQ,GAAsB;YAClC,aAAa,EAAE,IAAI,CAAC,OAAO;SAC5B,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YACrE,MAAM,IAAI,GAAG,IAA6B,CAAC;YAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;QACnE,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB,CAAC,GAAW;QAC7B,IAAI,GAAG,GAAsB;YAC3B,WAAW,EAAE,KAAK;SACnB,CAAC;QACF,MAAM,MAAM,GAAsB;YAChC,aAAa,EAAE,IAAI,CAAC,OAAO;SAC5B,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChE,GAAG,GAAG,IAAyB,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,GAAG,CAAC,WAAW,KAAK,KAAK,EAAE;YAC7B,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IACD,SAAS;QACP,oCAAoC;QACpC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1D,uCAAuC;QACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,0BAA0B,GAAC,KAAK,CAAC;QACtC,IAAI,CAAC,qBAAqB,GAAG;YAC3B,iBAAiB,EAAE,CAAC;YACpB,eAAe,EAAE,CAAC;YAClB,gBAAgB,EAAE,KAAK;YACvB,mBAAmB,EAAE,CAAC;SACvB,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IACD,kBAAkB;QACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,GAAG,GAAsB;YAC7B,aAAa,EAAE,IAAI,CAAC,OAAO;SAC5B,CAAC;QACF,IAAI,GAAG,GAAU,EAAE,CAAC;QACpB,MAAM,IAAI,GAAU,EAAE,CAAC;QACvB,MAAM,GAAG,GAAG,CAAC,UAAU,EAAC,cAAc,EAAE,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW;YACxF,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;QAC1E,MAAM,KAAK,GAAG,iBAAiB,CAAC;QAChC,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzE,MAAM,CAAC,GAAG,MAA+B,CAAC;YAC1C,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;gBACjB,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBACzB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACtB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACxB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACtB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBACvB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,GAAG,GAAG,EAAE,CAAC;aACV;YACD,IAAI,SAAqB,CAAC;YAC1B,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;gBACjE,SAAS,GAAG,IAAkB,CAAC;gBAC/B,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;gBAC3E,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBACvE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,CAAM;QACtB,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE;YACrC,OAAO,eAAe,CAAC;SACxB;QACD,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE;YACrC,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,aAAa,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;SAC3G;IACF,CAAC;IACF,SAAS,CAAC,GAAU,EAAE,IAAW,EAAE,KAAU,EAAE,SAAc;QAC3D,MAAM,aAAa,GAAG,4BAA4B,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,mCAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAClC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC7C,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACzC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAClE,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACtC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3C,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACxC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC;YACvD,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,cAAc,EAAG,GAAG,EAAE,GAAG,CAAC,CAAC;QACzD,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACtC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5C,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5C,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAE,SAAS,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,4CAA4C;QAC5C,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAC/B,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAG,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/C,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACvC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACvC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAE,SAAS,CAAC,aAAa,EAAG,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9C,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxB,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAG,GAAG,EAAE,GAAG,CAAC,CAAC;QACvC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,IAAI,CAAE,SAAS,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3C,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3B,MAAM,WAAW,GAAG,UAAU,IAAI;YAChC,SAAS;YAET,SAAS;YACT,IAAI,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,yDAAyD;YACzD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC3C,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,aAAa,CAAC;aACpC;YACD,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACrF,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,8BAA8B;QAC3F,CAAC,CAAC;QACF,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EACrB;YACE,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;YACxC,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;YACpB,UAAU,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;YAC1D,MAAM,EAAE,EAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAG,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAC;SAC/E,CAAC,CAAC;QAEL,iDAAiD;QACjD,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,UAAU,EAAE;YAC3C,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAClC;QAED,4BAA4B;QAC5B,GAAG,CAAC,aAAa,CAAC;YAChB,KAAK,EAAE,KAAK,GAAG,MAAM;SACxB,CAAC,CAAC;QAEJ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,mBAAmB;QACjB,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAE;YACrC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,MAAM,aAAa,GAAyB;gBAC1C,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,iBAAiB;aACpE,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC9E,MAAM,GAAG,GAAG,IAAI,CAAE;gBAClB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBACpC;qBAAM;oBACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iBACjC;YACH,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;IACH,CAAC;CACF;;YAjpC4B,0EAAe;YAClB,kEAAc;YAClB,0EAAe;YACR,yFAAsB;YACzB,oEAAY;YACpB,+DAAU;YACK,0FAAmB;YAC9B,yDAAQ;;AAxFyB;IAApD,+DAAS,CAAC,qBAAqB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;qEAAuC;AAChC;IAA1D,+DAAS,CAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;2EAA6C;AACjD;IAArD,+DAAS,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sEAAwC;AAC7B;IAA/D,+DAAS,CAAC,gCAAgC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;gFAAkD;AAC7D;IAAnD,+DAAS,CAAC,oBAAoB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;oEAAsC;AAL9E,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,oPAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAmuCpC;AAnuCoC;;;;;;;;;;;;;ACvBrC;AAAe,kEAAG,wCAAwC,KAAK,SAAS,oBAAoB,6BAA6B,KAAK,kBAAkB,+BAA+B,mCAAmC,QAAQ,wBAAwB,6CAA6C,KAAK,iBAAiB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,+BAA+B,wBAAwB,+BAA+B,0BAA0B,KAAK,kBAAkB,mCAAmC,yBAAyB,KAAK,UAAU,sCAAsC,mCAAmC,KAAK,+BAA+B,6CAA6C,gDAAgD,0CAA0C,0CAA0C,KAAK,6BAA6B,wCAAwC,yCAAyC,wCAAwC,uBAAuB,2BAA2B,+BAA+B,6BAA6B,SAAS,YAAY,qBAAqB,KAAK,uBAAuB,4BAA4B,gCAAgC,yBAAyB,oCAAoC,wBAAwB,yBAAyB,yBAAyB,uBAAuB,2BAA2B,4BAA4B,6CAA6C,6CAA6C,8BAA8B,KAAK,qBAAqB,oCAAoC,mCAAmC,KAAK,+CAA+C,u6G;;;;;;;;;;;;;;;;;;;;;;ACAvrD;AACO;AAEC;AACL;AACA;AACvB;AAOzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAmB5B,YACU,IAAgB,EAChB,eAAgC,EAChC,QAAyB,EACzB,MAAc;QAHd,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QAtBxB,gBAAW,GAAG,wBAAwB,CAAC;QACvC,SAAI,GAAoB,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1D,cAAS,GAAG,EAAE,CAAC;QAEf,cAAS,GAAG,EAAE,CAAC;QACtB,aAAQ,GAAG,EAAE,CAAC;QAOP,YAAO,GAAG,KAAK,CAAC;QACvB,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QACnB,qBAAgB,GAAG,KAAK,CAAC;IAKG,CAAC;IAE7B,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC,SAAS,CAC7D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,SAAS,GAAG,IAAkB,CAAC;QACtC,CAAC,EAAE,CAAC,GAAsB,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC,SAAS,CAC7D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,SAAS,GAAG,IAAmB,CAAC;QACvC,CAAC,EAAE,CAAC,GAAsB,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,SAAS,CAC5D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,QAAQ,GAAG,IAAkB,CAAC;QACrC,CAAC,EAAE,CAAC,GAAsB,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IACD,WAAW;QACT,8BAA8B;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC/C,8CAA8C;IAC/C,CAAC;IACD,sBAAsB;QACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/E,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACjF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9E,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAChF,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9F,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxD,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAClF,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACnH,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACvG,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1D,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAClC,CAAC;IACD,sBAAsB,CAAC,CAAY;QACjC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAE,CAAC;IACjG,CAAC;IACD,gBAAgB;QACd,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YACzC,IAAI,IAAI,CAAC,QAAQ,KAAM,OAAO,EAAE;gBAC7B,MAAM,GAAG,GAAG;oBACT,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBACxB,CAAC;gBACH,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,GAAG,KAAoB,CAAC;IACjC,CAAC;IACD,gBAAgB;QACd,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC;QACtD,iDAAiD;QACjD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK;YACtC,IAAK,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAG;gBAChC,MAAM,GAAG,GAAG;oBACV,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBACxB,CAAC;gBACF,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,GAAG,KAAmB,CAAC;IAChC,CAAC;IACD,8BAA8B,CAAC,IAAU;QACvC,IAAI,IAAI,EAAE;YACR,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,MAAM,WAAW,GAAG,MAAM,CAAC;YAC3B,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EACtD,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC,WAAW,EAAE,EAAE;gBACjE,OAAO,mBAAmB,CAAC;aAC5B;YACD,IAAI,QAAQ,GAAG,OAAO,EAAE;gBACtB,OAAO,iBAAiB,CAAC;aAC1B;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,iBAAiB,CAAC,KAAK;QACrB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IACD,iBAAiB,CAAC,KAAK;QACrB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IACD,iBAAiB,CAAC,KAAK;QACrB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,MAAM,KAAK,mBAAmB,EAAE;YAClC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC3C,OAAO;SACR;QACD,IAAI,MAAM,KAAK,iBAAiB,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzC,OAAO;SACR;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;IACH,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,YAAY,GAAG,IAAqB,CAAC;YAC1C,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,EAAG;gBACnE,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;qBACtE,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wDAAwD,CAAC,CAAC;oBAChF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC,EAAE,KAAK,CAAC,EAAE;oBACT,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACJ;QACA,CAAC,EAAE,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACN,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,MAAM,WAAW,GAAiB;YAChC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ;SAC/C,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrE,MAAM,GAAG,GAAG,IAAI,CAAE;YAClB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAClC;iBAAM;gBACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;CACF;;YA9MiB,+DAAU;YACC,0EAAe;YACtB,0EAAe;YACjB,sDAAM;;AAvBb,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAkO7B;AAlO6B;;;;;;;;;;;;;ACb9B;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,iPAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAOnC;AAPmC;;;;;;;;;;;;;ACPpC;AAAe,iFAAkB,yCAAyC,KAAK,sBAAsB,yBAAyB,KAAK,+CAA+C,mgB;;;;;;;;;;;;;;;;;;;;;ACA/F;AAEd;AAC3B;AACmB;AAO7D,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IASvC,YACU,YAAyB,EACzB,gBAAiC;QADjC,iBAAY,GAAZ,YAAY,CAAa;QACzB,qBAAgB,GAAhB,gBAAgB,CAAiB;QARjC,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QACf,SAAI,GAAiB,IAAI,aAAa,EAAE,CAAC;IAMxC,CAAC;IAEF,QAAQ;IACR,CAAC;IACD,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;aACxC,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IACD,MAAM,CAAC,IAAmB;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;aAC1C,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,MAAe;QAClB,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,aAAa,EAAE,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;YAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACH,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC3D,MAAM,CAAC,GAAG,MAAwB;gBAClC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC;gBACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;IACL,CAAC;IACD,KAAK;QAEH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;CACF;;YAzDyB,yEAAW;YACP,iFAAe;;AATO;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;2DAAuB;AAC9D;IAAT,4DAAM,EAAE;+DAAwD;AAHtD,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,oQAAsD;;KAEvD,CAAC;GACW,4BAA4B,CAmExC;AAnEwC;AA2ElC,MAAM,aAAa;IAKxB,YAAY,IAAqB;QAC7B,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;CACF;;;;;;;;;;;;;ACnGD;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;ACAA;AACW;AACX;AAIQ;AAQrE,IAAa,aAAa,GAA1B,MAAa,aAAa;IASxB,YACU,YAAyB,EACzB,gBAAiC;QADjC,iBAAY,GAAZ,YAAY,CAAa;QACzB,qBAAgB,GAAhB,gBAAgB,CAAiB;QAN3C,eAAU,GAAG,EAAE,CAAC;QAQd,IAAI,CAAC,kBAAkB,GAAG,IAAI,qFAAkB,EAAE,CAAC;IACrD,CAAC;IAGD,QAAQ,CAAC,KAAqB;QAC5B,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC9C,MAAM,IAAI,GAA0B;YACnC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAC,KAAK,CAAC;YACrE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QACA,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1D,MAAM,CAAC,GAAG,MAAyB,CAAC;YACnC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,IAAoB;QAC7B,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;iBACtC,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;SACN;IACH,CAAC;CACF;;YA7CyB,yEAAW;YACP,iFAAe;;AATW;IAArD,+DAAS,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;4DAAqD;AAChE;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gDAAkB;AACnB;IAAvC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAC,IAAI,EAAC,CAAC;gDAAsB;AAJlD,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,OAAO;QACjB,gOAAoC;;KAErC,CAAC;GACW,aAAa,CAuDzB;AAvDyB;;;;;;;;;;;;;ACd1B;AAAe,2EAAY,oCAAoC,KAAK,eAAe,mCAAmC,KAAK,gBAAgB,kCAAkC,KAAK,+CAA+C,+pB;;;;;;;;;;;;;;;;;;;;;ACA9I;AAEA;AACd;AAC3B;AAS1C,IAAa,sCAAsC,GAAnD,MAAa,sCAAsC;IAajD,YACU,sBAA6C,EAC7C,gBAAiC;QADjC,2BAAsB,GAAtB,sBAAsB,CAAuB;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAiB;QAVjC,cAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QACf,mBAAc,GAA4B,IAAI,uBAAuB,EAAE,CAAC;QACxE,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAC,EAAE,CAAC;IAMZ,CAAC;IAED,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC;aAChE,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC;IACD,MAAM,CAAC,cAAuC;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,cAAc,EAAE,cAAc,CAAC,EAAE,CAAC;aAC5E,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,gBAAyB;QAC5B,IAAI,CAAC,gBAAgB,EAAE;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,uBAAuB,EAAE,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,gBAAgB,CAAC;YAE1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;aACI;YACH,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACnF,MAAM,CAAC,GAAG,MAAkC;gBAC5C,CAAC,CAAC,EAAE,GAAG,gBAAgB,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,oBAAoB,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QAC1D,IAAI,CAAC,oBAAoB,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IACD,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC;IACxD,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,oBAAoB,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QAC1D,IAAI,CAAC,oBAAoB,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IACD,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC;IACxD,CAAC;IAED,KAAK;QAEH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;CACF;;YAvFmC,+FAAqB;YAC3B,iFAAe;;AAbO;IAAjD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;qEAAuB;AACnB;IAApD,+DAAS,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oFAAqD;AACpD;IAApD,+DAAS,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oFAAqD;AAC/F;IAAT,4DAAM,EAAE;yEAAwD;AALtD,sCAAsC;IALlD,+DAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;QACzC,wSAAkE;;KAEnE,CAAC;GACW,sCAAsC,CAqGlD;AArGkD;AA+G5C,MAAM,uBAAuB;IAOlC,YAAY,IAA+B;QACzC,IAAI,IAAI,EAAE;YACR,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACzB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACzB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACjD;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;AC3ID;AAAe,6GAA8C,2L;;;;;;;;;;;;;;;;;;;;ACAA;AAIW;AACW;AACd;AAQrE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IASlC,YACU,sBAA6C,EAC7C,gBAAiC;QADjC,2BAAsB,GAAtB,sBAAsB,CAAuB;QAC7C,qBAAgB,GAAhB,gBAAgB,CAAiB;QAN3C,eAAU,GAAG,EAAE,CAAC;QAQd,IAAI,CAAC,kBAAkB,GAAG,IAAI,qFAAkB,EAAE,CAAC;IACrD,CAAC;IAGD,YAAY,CAAC,KAAqB;QAChC,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC9C,MAAM,IAAI,GAA0B;YACnC,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,OAAO,EAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1D,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAC,KAAK,CAAC;YACrE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;SACjF;QACA,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxE,MAAM,CAAC,GAAG,MAAyB,CAAC;YACnC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;YAC3C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;IAED,cAAc,CAAC,IAA8B;QAC3C,MAAM,MAAM,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACvD,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;iBACpD,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;SACN;IACH,CAAC;CACF;;YA7CmC,+FAAqB;YAC3B,iFAAe;;AATmB;IAA7D,+DAAS,CAAC,+BAA+B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;8EAAuE;AAC1F;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;0DAAkB;AACnB;IAAvC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAC,IAAI,EAAC,CAAC;0DAAsB;AAJlD,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,oQAAgD;;KAEjD,CAAC;GACW,uBAAuB,CAuDnC;AAvDmC;;;;;;;;;;;;;;;;;;;ACdK;AACM;AAU/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAI;AAAtB,kBAAkB;IAN9B,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,kBAAkB,CAAI;AAAJ;;;;;;;;;;;;;;;;;ACXxB,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE,MAAM;CACf,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IACjB,wCAAwC;IACxC,wCAAwC;IACvC,MAAM,EAAE,6BAA6B;IACtC,uCAAuC;CACvC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACnBpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"box box-primary\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <h3 class=\\\"box-title\\\"><strong>Admin Dashboard</strong></h3>\\r\\n        </div>\\r\\n        <div class=\\\"box-body\\\" style=\\\"background-color: #ecF0F5;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n               \\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-aqua\\\"><i class=\\\"fa fa-book\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Total Proforma</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.totalProforma === undefined ? 0 : adminDashboardInfo.totalProforma}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-green\\\"><i class=\\\"fa fa-check\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Approved Proforma</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.approvedProforma === undefined ? 0 : adminDashboardInfo.approvedProforma}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- fix for small devices only -->\\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-orange\\\"><i class=\\\"fa fa-check\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Partially Approved</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.partialApprovedProforma === undefined ? 0 : adminDashboardInfo.partialApprovedProforma}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- fix for small devices only -->\\r\\n                <div class=\\\"clearfix visible-sm-block\\\"></div>\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-red\\\"><i class=\\\"fa fa-warning\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Rejected Proforma</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.rejectedProforma === undefined ? 0 : adminDashboardInfo.rejectedProforma}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- /.col -->\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n              \\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-yellow\\\"><i class=\\\"fa fa-clock-o\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Pending Proforma</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.pendingProformaApproval ===  undefined ? 0 :  adminDashboardInfo.pendingProformaApproval}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <div class=\\\"clearfix visible-sm-block\\\"></div>\\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-blue\\\"><i class=\\\"fa fa-list\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Total Importer</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.totalImporter === undefined ? 0 : adminDashboardInfo.totalImporter}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <div class=\\\"clearfix visible-sm-block\\\"></div>\\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-aqua\\\"><i class=\\\"fa fa-list\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Total Employee</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{adminDashboardInfo.totalEmployee === undefined ? 0 : adminDashboardInfo.totalEmployee}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <div class=\\\"clearfix visible-sm-block\\\"></div>\\r\\n                <!-- /.col -->\\r\\n              </div>\\r\\n        </div>\\r\\n        <!-- /.box-body -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n         <div class=\\\"box box-success\\\">\\r\\n             <div class=\\\"box-header with-border\\\">\\r\\n               <h3 class=\\\"box-title\\\"><strong>Annual Requirement Submission</strong></h3>\\r\\n                <button *ngIf=\\\"userRole!='SA'\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-success btn-add-product\\\" style=\\\"float: right; margin-left: 7px;\\\"\\r\\n                (click)=\\\"searchAnnualRequirements()\\\"><i class=\\\"fa fa-search\\\"></i> Search</button>\\r\\n                <button *ngIf=\\\"userRole=='SA'\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-success btn-add-product\\\" style=\\\"float: right; margin-left: 7px;\\\"\\r\\n                (click)=\\\"show()\\\"><i class=\\\"fa fa-search\\\"></i> Search</button>\\r\\n                \\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-embossed btn-add-product\\\"\\r\\n                style=\\\"float: right;  margin-right: 5px;\\\" (click)=\\\"viewAnnualReqReport()\\\"\\r\\n                [disabled]=\\\"mstNo === null || mstNo === undefined\\\"><i class=\\\"fa fa-file-pdf\\\"\\r\\n                  style=\\\"color: white;\\\"></i>View Summary Report</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info btn-embossed btn-add-product\\\" style=\\\"float: right;\\\"\\r\\n                (click)=\\\"confirmAnnualRequirementSubmission()\\\" [disabled]=\\\"submitButtonDisable\\\"><i\\r\\n                  class=\\\"fa fa-save\\\"></i> Submit</button>\\r\\n\\r\\n               <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-primary btn-add-product\\\" style=\\\"float: right;\\\"\\r\\n                (click)=\\\"confirmAnnualReqSubmission()\\\" [disabled]=\\\"annReqUpdateMode || updateBtnDisable\\\">\\r\\n                <i class=\\\"fa fa-save\\\"></i>\\r\\n                 {{saveButtonTitle}}</button>\\r\\n               <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger btn-add-product\\\" style=\\\"float: right;\\\" \\r\\n               (click)=\\\"resetPage()\\\"><i class=\\\"fa fa-refresh\\\" style=\\\"color: white;\\\"></i>Reset</button>\\r\\n             </div>\\r\\n             <div class=\\\"box-body\\\">\\r\\n                <fieldset class=\\\"scheduler-border\\\">\\r\\n                    <legend class=\\\"scheduler-border\\\">Annual requirement</legend>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <form [formGroup]=\\\"annualRequirementMstForm\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-1\\\"></div>\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                          <div class=\\\"form-group m-form__group\\\">\\r\\n                              <label for=\\\"annual-req-no\\\" class=\\\"control-label required\\\">Annual Requirement No</label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"annual-req-no\\\" placeholder=\\\"auto generated\\\"\\r\\n                              formControlName= \\\"annualReqNo\\\" readonly>               \\r\\n                           </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-1\\\"></div>\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                          <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"mstNo\\\"> \\r\\n                              <label for=\\\"submission-date\\\" class=\\\"control-label required\\\">Submission Date</label>\\r\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"submission-date\\\" placeholder=\\\"auto generated\\\"\\r\\n                              formControlName= \\\"submissionDate\\\" readonly>               \\r\\n                           </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-1\\\"></div>\\r\\n                    </div>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n              </fieldset>\\r\\n             </div>\\r\\n             <!-- /.box-body -->\\r\\n           </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n           <div class=\\\"box\\\" style=\\\"border-top: white;\\\">\\r\\n               <div class=\\\"box-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-bottom:5px ;\\\">\\r\\n                      <div class=\\\"col-md-2\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-success btn-add-product\\\" (click)=\\\"openRequireModal('add')\\\" [disabled]=\\\"annReqUpdateMode\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\"></i> Add Product</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                          <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\"  [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-1\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger\\\" (click)=\\\"resetFilter()\\\"><i class=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #bed2c9; width: 100%;\\\">\\r\\n                        <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                          <thead style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));\\\">\\r\\n                            <tr>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Action</th>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 14%\\\">Product<br>Name</th>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 6%\\\">Type</th>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 7%\\\">H.S.Code</th>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 6%\\\">Pack<br>Size</th>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Total<br>Units(Kg/Ltr/Unit)</th>\\r\\n                              <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Total Amount(Ton)</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let a of annualRequirements | paginate: { itemsPerPage:10, currentPage: p} | filter: searchText\\\">\\r\\n                              <td>\\r\\n                                <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-sm btn-success\\\"  dropdownToggle>\\r\\n                                        <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                                    </button>\\r\\n                                    <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                        <li>\\r\\n                                            <a href=\\\"javascript:;\\\"\\r\\n                                                (click)=\\\"editProduct(a)\\\">Edit</a>\\r\\n                                        </li>\\r\\n                                        <li>\\r\\n                                            <a href=\\\"javascript:;\\\"\\r\\n                                                (click)=\\\"removeProduct(a)\\\">Delete</a>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                              <td>{{a.prodName}}</td>\\r\\n                              <td>{{a.prodType}}</td>\\r\\n                              <td>{{a.hsCode}}</td>\\r\\n                              <td>{{a.packSize}}</td>\\r\\n                              <td style=\\\"text-align: right;\\\">{{a.tentativeUnits}}</td>\\r\\n                              <td style=\\\"text-align: right;\\\">{{a.totalAmount}} MT</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n                    </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <!-- /.box-body -->\\r\\n             </div>\\r\\n        </div>\\r\\n      </div> \\r\\n </div>\\r\\n \\r\\n <ng-template #taskmodal>\\r\\n    <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">{{modalTitle}}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"padding: 20px 50px 20px 50px;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <fieldset class=\\\"scheduler-border\\\">\\r\\n                  <legend class=\\\"scheduler-border\\\">Product Information</legend>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form [formGroup]=\\\"annualRequirementsForm\\\" (submit)=\\\"addUpdateProduct()\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                       <div class=\\\"form-group m-form__group\\\">\\r\\n                                           <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Product Name</label>\\r\\n                                           <span style=\\\"color:red;\\\">*</span>\\r\\n                                           <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product-name\\\"\\r\\n                                           [ngClass]=\\\"{'is-invalid': annualRequirementsForm.get('prodName').errors && annualRequirementsForm.get('prodName').touched}\\\" \\r\\n                                           formControlName= \\\"prodName\\\">\\r\\n                                           <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('prodName').hasError('required')\\r\\n                                           && annualRequirementsForm.get('prodName').touched\\\">Product name required</div>\\r\\n                                           <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('prodName').hasError('maxlength')\\r\\n                                              && annualRequirementsForm.get('prodName').touched\\\"> Product name can be max 50 Character long</div>                    \\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Product Type</label>\\r\\n                                          <span style=\\\"color:red;\\\">*</span>\\r\\n                                        <ng-select \\r\\n                                          [items]=\\\"productTypes\\\" \\r\\n                                           bindLabel=\\\"name\\\" \\r\\n                                           bindValue=\\\"name\\\"\\r\\n                                           placeholder=\\\"Select Product Type\\\" \\r\\n                                           [ngClass]=\\\"{'is-invalid': annualRequirementsForm.get('prodType').errors && annualRequirementsForm.get('prodType').touched}\\\" \\r\\n                                          formControlName= \\\"prodType\\\" >\\r\\n                                       </ng-select>\\r\\n                                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('prodType').hasError('required')\\r\\n                                       && annualRequirementsForm.get('prodType').touched\\\"> Product type is required</div>                                         \\r\\n                                       </div>\\r\\n                                   </div>\\r\\n                                   \\r\\n                                  </div>\\r\\n                                  <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"product-name\\\" class=\\\"control-label required\\\">H.S. Code</label>\\r\\n                                          <span style=\\\"color:red;\\\">*</span>\\r\\n                                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product-name\\\" \\r\\n                                          [ngClass]=\\\"{'is-invalid': annualRequirementsForm.get('hsCode').errors && annualRequirementsForm.get('hsCode').touched}\\\" \\r\\n                                          formControlName= \\\"hsCode\\\">\\r\\n                                          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('prodName').hasError('required')\\r\\n                                          && annualRequirementsForm.get('hsCode').touched\\\">H.S. code required</div>\\r\\n                                          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('hsCode').hasError('maxlength')\\r\\n                                             && annualRequirementsForm.get('hsCode').touched\\\">H.S. code can be max 50 Character long</div>                    \\r\\n                                       </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-md-6\\\">\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Pack Size</label>\\r\\n                                        <span style=\\\"color:red;\\\">*</span>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"manufacturer\\\"\\r\\n                                        [ngClass]=\\\"{'is-invalid': annualRequirementsForm.get('packSize').errors && annualRequirementsForm.get('packSize').touched}\\\" \\r\\n                                        formControlName= \\\"packSize\\\">\\r\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('packSize').hasError('required')\\r\\n                                        && annualRequirementsForm.get('packSize').touched\\\">Pack size required</div>\\r\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"annualRequirementsForm.get('packSize').hasError('maxlength')\\r\\n                                          && annualRequirementsForm.get('packSize').touched\\\">Pack size can be max 100 Character long</div>                    \\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"row\\\">\\r\\n                                      <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"total-quantity\\\" class=\\\"control-label required\\\">Total Amount(Tons)</label>\\r\\n                                           <small style=\\\"color:#888889;\\\"> numeric value</small>\\r\\n                                           <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"total-quantity\\\" name=\\\"totalAmount\\\"  autocomplete=\\\"off\\\"\\r\\n                                           formControlName= \\\"totalAmount\\\" (input)=\\\"isDisableUnit()\\\">\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Total Units(Kg/Ltr/Unit)</label>\\r\\n                                            <small style=\\\"color: #888889;\\\"> numeric value</small>\\r\\n                                            <input type=\\\"number\\\" min=\\\"0\\\"   class=\\\"form-control\\\" id=\\\"tentativeUnits\\\" name=\\\"tentativeUnits\\\"autocomplete=\\\"off\\\"\\r\\n                                            formControlName= \\\"tentativeUnits\\\" (input)=\\\"isDisableTon()\\\">\\r\\n                                         </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"row\\\">\\r\\n                                      <div class=\\\"col-md-8\\\"> \\r\\n                                      </div>\\r\\n                                      <div class=\\\"col-md-4\\\">\\r\\n                                      <button type=\\\"submit\\\" *ngIf=\\\"addMode\\\" class=\\\"btn btn-success btn-md\\\" style=\\\"width: 100px;\\\"\\r\\n                                      [disabled]=\\\"!annualRequirementsForm.valid\\\">Add</button>\\r\\n                                      <button type=\\\"submit\\\" *ngIf=\\\"editMode\\\" class=\\\"btn btn-success btn-md\\\" style=\\\"width: 100px;\\\"\\r\\n                                      [disabled]=\\\"!annualRequirementsForm.valid\\\">Update</button>\\r\\n                                      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-md\\\" (click)=\\\"modalRef.hide()\\\" \\r\\n                                      style=\\\"margin-right:20px;width: 100px; \\\">Cancel</button>\\r\\n                                    </div>\\r\\n                                   </div>\\r\\n                              </form>\\r\\n                        </div>\\r\\n                      </div>\\r\\n              </fieldset>\\r\\n          </div>\\r\\n        </div>\\r\\n     </div>\\r\\n  </ng-template>\\r\\n  <ng-template #annualReqsModal>\\r\\n    <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Annual Requirements</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"padding: 20px 30px 20px 30px;\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-1\\\"></div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n          <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\"\\r\\n            placeholder=\\\"Search..\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-1\\\"></div>\\r\\n      </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #bed2c9; width: 100%;\\\">\\r\\n              <table class=\\\"table table-bordered table-responsive table-hover table-striped\\\">\\r\\n                  <thead style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));\\\">\\r\\n                    <tr>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Action</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 5%;display: none;\\\">Id</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 8%\\\">Annual<br>Req<br>No</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 7%;\\\">Importer</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Submission<br>Date</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 30%;overflow: hidden;\\\">Products</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 30%;overflow: hidden;\\\">Pack Size</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 8%;\\\">Total<br>Amounts</th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 8%;\\\">Total<br>Units(Kg/Ltr/Unit)</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let a of annReqs |paginate: { itemsPerPage:8, currentPage: p} | filter: searchText\\\">\\r\\n                      <!-- <td><button class=\\\"btn btn-sm btn-success btn-grid-action\\\" (click)=\\\"selectAnnualReq(a)\\\"><i class=\\\"fas fa-check icon-action\\\"></i></button> </td> -->\\r\\n                      <td><button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"selectAnnualReq(a)\\\">Details</button> </td>\\r\\n                      <td style=\\\"display: none;\\\">{{a.id}}</td>\\r\\n                        <td>{{a.annualReqNo}}</td>\\r\\n                        <!-- <td style=\\\"display: none;\\\">{{a.importerId}}</td> -->\\r\\n                        <td>{{a.importerId}}</td>\\r\\n                        <td>\\r\\n                          <div *ngIf=\\\"a.submissionDate == null\\\" style=\\\"background-color: #ffb822;\\\">\\r\\n                            Not Submitted\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"a.submissionDate\\\">\\r\\n                            {{a.submissionDate | date}}\\r\\n                          </div>\\r\\n                        </td>\\r\\n                        <!-- <td>{{a.submissionDate| date}}</td> -->\\r\\n                        <td>\\r\\n                          <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                            <li>{{d.prodName}}</li>\\r\\n                          </ul>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                            <li>{{d.packSize}}</li>\\r\\n                          </ul>\\r\\n                        </td>\\r\\n                        <td style=\\\"text-align: right;\\\">\\r\\n                            <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                              <li>{{d.totalAmount}} MT</li>\\r\\n                            </ul>\\r\\n                        </td>\\r\\n                        <td style=\\\"text-align: right;\\\">\\r\\n                          <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                            <li>{{d.tentativeUnits}}</li>\\r\\n                          </ul>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n              <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n              </div>\\r\\n          </div>\\r\\n     </div>\\r\\n  </ng-template>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div bsModal #annualReqsModalNew=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n      aria-labelledby=\\\"annualReqsModalNew\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n      <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\r\\n            <h4 class=\\\"modal-title\\\">\\r\\n              <span>Annual Requirements</span>\\r\\n            </h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"content\\\">\\r\\n            <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n              <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                  <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                    <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                      <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                          <div class=\\\"input-group\\\">\\r\\n                            <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\"\\r\\n                              type=\\\"text\\\">\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                              <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                  class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                            </span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n  \\r\\n                <div class=\\\"row\\\">\\r\\n                  <!--<Primeng-Datatable-Start>-->\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"primeng-datatable-container\\\" style=\\\"border: 1px solid #bed2c9; width: 100%;\\\">\\r\\n                      <p-table #dataTable (onLazyLoad)=\\\"getAll($event)\\\" [value]=\\\"primengTableHelper.records\\\" rows=\\\"5\\\"\\r\\n                        [paginator]=\\\"false\\\" [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                        [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                        [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\" class=\\\"table table-bordered table-responsive table-hover table-striped\\\">\\r\\n                        <ng-template pTemplate=\\\"header\\\">\\r\\n                          <tr style=\\\" font-size: 12px;\\\">\\r\\n                            <th>Actions</th>\\r\\n                            <th  style=\\\"display: none;\\\">Id</th>\\r\\n                            <th >Annual<br>Req<br>No</th>\\r\\n                            <th >Importer</th>\\r\\n                            <th >Submission<br>Date</th>\\r\\n                            <th  style=\\\"overflow: hidden;\\\">Products</th>\\r\\n                            <th  style=\\\"overflow: hidden;\\\">Pack Size</th>\\r\\n                            <!-- <th  style=\\\"width: 20%;overflow: hidden;\\\">Countries</th>\\r\\n                                                    <th  style=\\\"width: 0%;display: none;;\\\">Manufactures</th> -->\\r\\n                            <!-- <th  style=\\\"width: 5%; display: none;\\\">Currencies</th> -->\\r\\n                            <th >Total<br>Amounts</th>\\r\\n                            <th >Total<br>Units <br> (Kg/Ltr/Unit)</th>\\r\\n                            <!-- <th  style=\\\"width: 12%;display: none;\\\">Total<br>Prices</th>\\r\\n                                                    <th  style=\\\"width: 10%;\\\">Total<br>Price(BDT)</th> -->\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n                        <ng-template pTemplate=\\\"body\\\" let-a=\\\"$implicit\\\">\\r\\n                          <tr style=\\\" font-size: 12px;\\\">\\r\\n                            <td><button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"selectAnnualReq(a)\\\">Details</button> </td>\\r\\n                            <td style=\\\"display: none;\\\">{{a.id}}</td>\\r\\n                            <td>{{a.annualReqNo}}</td>\\r\\n                            <!-- <td style=\\\"display: none;\\\">{{a.importerId}}</td> -->\\r\\n                            <td>{{a.importerId}}</td>\\r\\n                            <td>{{a.submissionDate| date}}</td>\\r\\n                            <td>\\r\\n                              <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                                <li>{{d.prodName}}</li>\\r\\n                              </ul>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                              <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                                <li>{{d.packSize}}</li>\\r\\n                              </ul>\\r\\n                            </td>\\r\\n                            <td style=\\\"text-align: right;\\\">\\r\\n                              <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                                <li>{{d.totalAmount}} MT</li>\\r\\n                              </ul>\\r\\n                            </td>\\r\\n                            <td style=\\\"text-align: right;\\\">\\r\\n                              <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\r\\n                                <li>{{d.tentativeUnits}}</li>\\r\\n                              </ul>\\r\\n                            </td>\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n                      </p-table>\\r\\n                      <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                        NoData\\r\\n                      </div>\\r\\n                      <div class=\\\"primeng-paging-container\\\">\\r\\n                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                          styleClass=\\\"role-lookup-table-paginator\\\" (onPageChange)=\\\"getAll($event)\\\"\\r\\n                          [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                          [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                        </p-paginator>\\r\\n                        <span class=\\\"total-records-count\\\">\\r\\n                          <b>Total: </b> {{primengTableHelper.totalRecordsCount}}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button  type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">Close</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <app-annual-requirement></app-annual-requirement> -->\\r\\n  </div>\\r\\n<ng-template #confirmModal>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <div><h4>আপনি কি অ্যানুয়াল রিকোয়ারমেন্টটি {{saveUpdateMsg}} করতে চান ?</h4><p>( বিঃ দ্রঃ অ্যানুয়াল রিকোয়ারমেন্টটি\\r\\n      {{saveUpdateMsg}} করে পরবর্তী প্রসেসের জন্য অবশ্যই সাবমিট করতে হবে  )</p></div>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\" >Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\" >No</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-template #annualReqSubmissionConfirmModal>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <div>\\r\\n      <h4>আপনি কি অ্যানুয়াল রিকোয়ারমেন্টটি সাবমিট করতে চান ?</h4><small>( বিঃ দ্রঃ সাবমিটেড অ্যানুয়াল রিকোয়ারমেন্ট অপরিবর্তনযোগ্য )</small>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirmSubmit()\\\">Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"declineSubmit()\\\">No</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '0',fullScreenBackdrop:true }\\\"></ngx-loading>\"","export default \"<router-outlet></router-outlet>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #currencyRateForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"currencyRate.id\\\">Edit Currency Rate</span>\\r\\n                        <span *ngIf=\\\"!currencyRate.id\\\">Create New Currency Rate</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <label for=\\\"Currency\\\">Currency Name<span style=\\\"color:red;\\\">*</span> </label>\\r\\n                                <input type=\\\"text\\\" id=\\\"currency\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"currencyRate.currency\\\" name=\\\"currency\\\" #name=\\\"ngModel\\\"\\r\\n                                    [ngClass]=\\\"{ 'is-invalid': name.touched && name.invalid }\\\" required />\\r\\n                                <div *ngIf=\\\"name.touched && name.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"name.errors.required\\\">Currency is required</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <label for=\\\"TickerIcon\\\">Currency TickerIcon</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"tickerIcon\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"currencyRate.tickerIcon\\\" name=\\\"tickerIcon\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <label for=\\\"exchangeRate\\\">Exchange Rate <span style=\\\"color:red;\\\">*</span> </label>\\r\\n                                <!-- <input type=\\\"number\\\" id=\\\"exchangeRate\\\" class=\\\"form-control\\\" min=\\\"0\\\"\\r\\n                                    [(ngModel)]=\\\"currencyRate.exchangeRate\\\" name=\\\"exchangeRate\\\" #rate=\\\"ngModel\\\"\\r\\n                                    [ngClass]=\\\"{ 'is-invalid': rate.touched && rate.invalid }\\\" required />\\r\\n                                <div *ngIf=\\\"rate.touched && rate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"rate.errors.required\\\">Exchange Rate is required</div>\\r\\n                                </div> -->\\r\\n                                <!--<input min='0' type=\\\"number\\\" onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0) ? null : event.charCode >= 48 && event.charCode <= 57\\\">  -->\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" oninput=\\\"this.value = Math.abs(this.value)\\\"\\r\\n                                    id=\\\"exchangeRate\\\" class=\\\"form-control\\\" min=\\\"0\\\"\\r\\n                                    [(ngModel)]=\\\"currencyRate.exchangeRate\\\" name=\\\"exchangeRate\\\" #rate=\\\"ngModel\\\"\\r\\n                                    [ngClass]=\\\"{ 'is-invalid': rate.touched && rate.invalid }\\\" required>\\r\\n                                <div *ngIf=\\\"rate.touched && rate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"rate.errors.required\\\">Exchange Rate is required</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n                    <button *ngIf=\\\"!currencyRate.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"!currencyRateForm.form.valid\\\"><i class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Save</span></button>\\r\\n                    <button *ngIf=\\\"currencyRate.id\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\" (click)=\\\"update(currencyRate)\\\"><i\\r\\n                            class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Update</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>Currency Rate</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"createCurrency()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Create New Currency</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"filterText\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getAllCurrency()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                                    class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"primeng-datatable-container\\\">\\r\\n                            <p-table #dataTable (onLazyLoad)=\\\"getAllCurrency($event)\\\"\\r\\n                                [value]=\\\"primengTableHelper.records\\\"\\r\\n                                rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" [paginator]=\\\"false\\\"\\r\\n                                [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                <ng-template pTemplate=\\\"header\\\">\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 100px\\\">\\r\\n                                            Actions</th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"Currency\\\">\\r\\n                                            Currency\\r\\n                                            <p-sortIcon field=\\\"currency\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"TickerIcon\\\">\\r\\n                                            Ticker/Icon\\r\\n                                            <p-sortIcon field=\\\"tickerIcon\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"exchangeRate\\\">\\r\\n                                            Exchange Rate\\r\\n                                            <p-sortIcon field=\\\"exchangeRate\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width: 100px\\\">\\r\\n                                            <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                                <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                                                </button>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"createOrEditCurrencyModal.show(record.id)\\\">\\r\\n                                                            Edit</a>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\" (click)=\\\"deleteCurrency(record)\\\">Delete</a>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> currency</span>\\r\\n                                            {{record.currency}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> tickerIcon</span>\\r\\n                                            {{record.tickerIcon}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> ExchangeRate</span>\\r\\n                                            {{record.exchangeRate}}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                            </p-table>\\r\\n                            <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                NoData\\r\\n                            </div>\\r\\n                            <div class=\\\"primeng-paging-container\\\">\\r\\n                                <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                                    (onPageChange)=\\\"getAllCurrency($event)\\\"\\r\\n                                    [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                    [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                </p-paginator>\\r\\n                                <span class=\\\"total-records-count\\\">\\r\\n                                    <b>Total: </b> {{ primengTableHelper.totalRecordsCount}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditCurrencyModal #createOrEditCurrencyModal (modalSave)=\\\"getAllCurrency()\\\"></createOrEditCurrencyModal>\\r\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <!-- (ngSubmit)=\\\"save()\\\" -->\\r\\n      <form *ngIf=\\\"active\\\" #empForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <span *ngIf=\\\"employee.id\\\">Edit Employee</span>\\r\\n            <span *ngIf=\\\"!employee.id\\\">Create New Employee</span>\\r\\n          </h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"EmployeeName\\\">Employee Name \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <!-- [ngClass]=\\\"{'is-invalid': registrationForm.get('empName').errors && registrationForm.get('empName').touched}\\\"  -->\\r\\n                    <input type=\\\"text\\\" id=\\\"EmployeeName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.empName\\\"\\r\\n                      name=\\\"empName\\\" #empName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': empName.touched && empName.invalid }\\\" required empName />\\r\\n                    <div *ngIf=\\\"empName.touched && empName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"empName.errors.required\\\">Employee Name is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"Designation\\\">Designation \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <input type=\\\"text\\\" id=\\\"Designation\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.designation\\\"\\r\\n                      name=\\\"designation\\\" #designation=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': designation.touched && designation.invalid }\\\" required designation />\\r\\n                    <div *ngIf=\\\"designation.touched && designation.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"designation.errors.required\\\">Designation is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"Email\\\">Email \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <input type=\\\"email\\\" id=\\\"Email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.email\\\" name=\\\"email\\\"\\r\\n                      placeholder=\\\"someone@domain.com\\\" #email=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': email.touched && email.invalid }\\\" required email\\r\\n                      pattern=\\\"^\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$\\\" />\\r\\n                    <div *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\r\\n                      <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"ContactNo\\\">Mobile \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <!-- <input type=\\\"text\\\" id=\\\"contactNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.contactNo\\\"\\r\\n                      name=\\\"contactNo\\\" #contactNo=\\\"ngModel\\\" required /> -->\\r\\n                    <international-phone-number  [(ngModel)]=\\\"employee.contactNo\\\" placeholder=\\\"Enter Contact Number\\\"\\r\\n                      [maxlength]=\\\"20\\\" [required]=\\\"true\\\" #contactNo=\\\"ngModel\\\" name=\\\"contactNo\\\">\\r\\n                    </international-phone-number>\\r\\n                    <div *ngIf=\\\"contactNo.touched && contactNo.invalid\\\" class=\\\"help-block\\\" style=\\\"color: red;\\\"><small>Mobile No is required\\r\\n                      and should be valid</small></div>\\r\\n\\r\\n                    <!-- <int-phone-prefix [defaultCountry]=\\\"'us'\\\" #phoneNumberInput=\\\"ngModel\\\" [(ngModel)]=\\\"contact.mobile\\\"\\r\\n                      name=\\\"homePhone\\\" minlength=\\\"0\\\" maxlength=\\\"512\\\">\\r\\n                      [allowedCountries]=\\\"['bd','in', 'ca', 'us']\\\"\\r\\n                    </int-phone-prefix> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"UserName\\\">Username \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employee.username\\\"\\r\\n                      name=\\\"username\\\" #username=\\\"ngModel\\\"   [ngClass]=\\\"{ 'is-invalid': username.touched && username.invalid }\\\" required username />\\r\\n                    <div *ngIf=\\\"username.touched && username.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!employee.id\\\" class=\\\"col-md-4\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"Password\\\">Password \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <input type=\\\"password\\\" autocomplete=\\\"new-password\\\" id=\\\"Password\\\" class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"employee.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\r\\n                      [ngClass]=\\\"{ 'is-invalid': password.touched && password.invalid }\\\" required minlength=\\\"6\\\" />\\r\\n                    <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"password.errors.required\\\">Password is required </div>\\r\\n                      <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!employee.id\\\" class=\\\"col-md-4\\\">\\r\\n                  <div class=\\\"form-group m-form__group\\\">\\r\\n                    <label for=\\\"ConfirmPassword\\\">Confirm Password \\r\\n                        <span style=\\\"color:red;\\\">*</span>\\r\\n                    </label>\\r\\n                    <input type=\\\"password\\\" autocomplete=\\\"new-password\\\" id=\\\"ConfirmPassword\\\" class=\\\"form-control\\\"\\r\\n                      name=\\\"confirmPassword\\\" [(ngModel)]=\\\"employee.confirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': confirmPassword.touched && confirmPassword.invalid }\\\" required confirmPassword\\r\\n                      #confirmPassword=\\\"ngModel\\\" />\\r\\n                    <div *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"confirmPassword.errors.required\\\">Confirm Password is required</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"confirmPassword.touched && employee.password!=employee.confirmPassword\\\"\\r\\n                      class=\\\"invalid-feedback\\\">\\r\\n                      Passwords not matched\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n          <button *ngIf=\\\"!employee.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"save()\\\"\\r\\n            [disabled]=\\\"!empForm.form.valid || employee.password!=employee.confirmPassword\\\"><i class=\\\"fa fa-save\\\"></i>\\r\\n            <span>Save</span></button>\\r\\n          <button *ngIf=\\\"employee.id\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\" (click)=\\\"update(employee)\\\"><i\\r\\n              class=\\\"fa fa-save\\\"></i>\\r\\n            <span>Update</span></button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"changeViewId!=2\\\" class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"box box-success\\\">\\n                <div class=\\\"box-header with-border\\\">\\n                    <h3 class=\\\"box-title\\\"><strong>Profile</strong></h3>\\n                    <button *ngIf=\\\"changeViewId==0\\\" class=\\\"btn btn-primary blue\\\" style=\\\"float: right;margin-left: 10px;\\\"\\n                        (click)=\\\"changePasswordBtn()\\\"><i class=\\\"fa fa-edit\\\"></i>\\n                        Change Password</button>\\n                    <button *ngIf=\\\"changeViewId==0\\\" class=\\\"btn btn-primary blue\\\" style=\\\"float: right;\\\"\\n                        (click)=\\\"editEmployeeInfo()\\\"><i class=\\\"fa fa-edit\\\"></i>\\n                        Edit Profile</button>\\n                    <button *ngIf=\\\"changeViewId==1\\\" type=\\\"button\\\" style=\\\"float: right;margin-right: 100px;\\\"\\n                        class=\\\"btn btn-embossed btn-primary blue\\\" (click)=\\\"backToEmployeeInfo()\\\"><i\\n                            class=\\\"fas fa-backward\\\"></i>Back to Profile Info</button>\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div *ngIf=\\\"changeViewId==0\\\" class=\\\"row\\\">\\n                        <div class=\\\"col-md-1\\\"></div>\\n                        <div class=\\\"col-md-10\\\">\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\n                                <div class=\\\"col-md-2\\\"></div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <h5>\\n                                        <b>\\n                                            <i class=\\\"fa fa-server\\\" aria-hidden=\\\"true\\\"></i>\\n                                            Name\\n                                        </b>\\n                                    </h5>\\n                                </div>\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\n                                <div class=\\\"col-md-6\\\">{{employeeInfo.empName}}</div>\\n                            </div>\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\n                                <div class=\\\"col-md-2\\\"></div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <h5>\\n                                        <b>\\n                                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                                            Username\\n                                        </b>\\n                                    </h5>\\n                                </div>\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\n                                <div class=\\\"col-md-6\\\">{{employeeInfo.username}}</div>\\n                            </div>\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\n                                <div class=\\\"col-md-2\\\"></div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <h5>\\n                                        <b>\\n                                            <i class=\\\"fa fa-briefcase\\\" aria-hidden=\\\"true\\\"></i>\\n                                            Designation\\n                                        </b>\\n                                    </h5>\\n                                </div>\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\n                                <div class=\\\"col-md-6\\\">{{employeeInfo.designation}}</div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\n                                <div class=\\\"col-md-2\\\"></div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <h5>\\n                                        <b>\\n                                            <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i>\\n                                            Email\\n                                        </b>\\n                                    </h5>\\n                                </div>\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\n                                <div class=\\\"col-md-6\\\">{{employeeInfo.email}}</div>\\n                            </div>\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\n                                <div class=\\\"col-md-2\\\"></div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <h5>\\n                                        <b>\\n                                            <i class=\\\"fa fa-phone-square\\\" aria-hidden=\\\"true\\\"></i>\\n                                            Contact Number\\n                                        </b>\\n                                    </h5>\\n                                </div>\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\n                                <div class=\\\"col-md-6\\\">{{employeeInfo.contactNo}}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"changeViewId==1\\\" class=\\\"row\\\">\\n                        <form #empForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\n                            <div class=\\\"modal-header\\\">\\n                                <h4 class=\\\"modal-title\\\">\\n                                    <span>Edit Profile</span>\\n                                </h4>\\n                            </div>\\n                            <div class=\\\"modal-body\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group m-form__group\\\">\\n                                                    <label for=\\\"EmployeeName\\\">Employee Name\\n                                                        <span style=\\\"color:red;\\\">*</span>\\n                                                    </label>\\n                                                    <!-- [ngClass]=\\\"{'is-invalid': registrationForm.get('empName').errors && registrationForm.get('empName').touched}\\\"  -->\\n                                                    <input type=\\\"text\\\" id=\\\"EmployeeName\\\" class=\\\"form-control\\\"\\n                                                        [(ngModel)]=\\\"employeeInfo.empName\\\" name=\\\"empName\\\"\\n                                                        #empName=\\\"ngModel\\\"\\n                                                        [ngClass]=\\\"{ 'is-invalid': empName.touched && empName.invalid }\\\"\\n                                                        required empName />\\n                                                    <div *ngIf=\\\"empName.touched && empName.invalid\\\"\\n                                                        class=\\\"invalid-feedback\\\">\\n                                                        <div *ngIf=\\\"empName.errors.required\\\">Employee Name is required\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group m-form__group\\\">\\n                                                    <label for=\\\"Designation\\\">Designation\\n                                                        <span style=\\\"color:red;\\\">*</span>\\n                                                    </label>\\n                                                    <input type=\\\"text\\\" id=\\\"Designation\\\" class=\\\"form-control\\\"\\n                                                        [(ngModel)]=\\\"employeeInfo.designation\\\" name=\\\"designation\\\"\\n                                                        #designation=\\\"ngModel\\\"\\n                                                        [ngClass]=\\\"{ 'is-invalid': designation.touched && designation.invalid }\\\"\\n                                                        required designation />\\n                                                    <div *ngIf=\\\"designation.touched && designation.invalid\\\"\\n                                                        class=\\\"invalid-feedback\\\">\\n                                                        <div *ngIf=\\\"designation.errors.required\\\">Designation is required\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group m-form__group\\\">\\n                                                    <label for=\\\"Email\\\">Email\\n                                                        <span style=\\\"color:red;\\\">*</span>\\n                                                    </label>\\n                                                    <input type=\\\"email\\\" id=\\\"Email\\\" class=\\\"form-control\\\"\\n                                                        [(ngModel)]=\\\"employeeInfo.email\\\" name=\\\"email\\\"\\n                                                        placeholder=\\\"someone@domain.com\\\" #email=\\\"ngModel\\\"\\n                                                        [ngClass]=\\\"{ 'is-invalid': email.touched && email.invalid }\\\"\\n                                                        required email\\n                                                        pattern=\\\"^\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$\\\" />\\n                                                    <div *ngIf=\\\"email.touched && email.invalid\\\"\\n                                                        class=\\\"invalid-feedback\\\">\\n                                                        <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                                                        <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email\\n                                                            address</div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group m-form__group\\\">\\n                                                    <label for=\\\"ContactNo\\\">Mobile\\n                                                        <span style=\\\"color:red;\\\">*</span>\\n                                                    </label>\\n                                                    <!-- <input type=\\\"text\\\" id=\\\"contactNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employeeInfo.contactNo\\\"\\n                                          name=\\\"contactNo\\\" #contactNo=\\\"ngModel\\\" required /> -->\\n                                                    <international-phone-number [(ngModel)]=\\\"employeeInfo.contactNo\\\"\\n                                                        placeholder=\\\"Enter Contact Number\\\" [maxlength]=\\\"20\\\"\\n                                                         [required]=\\\"true\\\" #contactNo=\\\"ngModel\\\"\\n                                                        name=\\\"contactNo\\\">\\n                                                    </international-phone-number>\\n                                                    <div *ngIf=\\\"contactNo.touched && contactNo.invalid\\\"\\n                                                        class=\\\"help-block\\\" style=\\\"color: red;\\\"><small>Mobile No is\\n                                                            required\\n                                                            and should be valid</small></div>\\n\\n                                                    <!-- <int-phone-prefix [defaultCountry]=\\\"'us'\\\" #phoneNumberInput=\\\"ngModel\\\" [(ngModel)]=\\\"contact.mobile\\\"\\n                                          name=\\\"homePhone\\\" minlength=\\\"0\\\" maxlength=\\\"512\\\">\\n                                          [allowedCountries]=\\\"['bd','in', 'ca', 'us']\\\"\\n                                        </int-phone-prefix> -->\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group m-form__group\\\">\\n                                                    <label for=\\\"UserName\\\">Username\\n                                                        <span style=\\\"color:red;\\\">*</span>\\n                                                    </label>\\n                                                    <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\"\\n                                                        [(ngModel)]=\\\"employeeInfo.username\\\" name=\\\"username\\\"\\n                                                        #username=\\\"ngModel\\\"\\n                                                        [ngClass]=\\\"{ 'is-invalid': username.touched && username.invalid }\\\"\\n                                                        required username />\\n                                                    <div *ngIf=\\\"username.touched && username.invalid\\\"\\n                                                        class=\\\"invalid-feedback\\\">\\n                                                        <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"update-btn btn btn-info\\\" (click)=\\\"update(employeeInfo)\\\"><i\\n                                    class=\\\"fa fa-save\\\"></i>\\n                                <span>Update Info</span></button>\\n                        </form>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"changeViewId==2\\\" class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"box box-success\\\">\\n              <div class=\\\"box-header with-border\\\">\\n                <h3 class=\\\"box-title\\\"><strong>Change Password</strong></h3>\\n               <button type=\\\"button\\\" style=\\\"float: right;margin-right: 100px;\\\" class=\\\"btn btn-embossed btn-primary blue\\\" (click)=\\\"backToEmployeeInfo()\\\"><i class=\\\"fas fa-backward\\\"></i>Back to Profile Info</button>\\n              </div>\\n              <div class=\\\"box-body\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-md-12\\\">\\n                      <form [formGroup]=\\\"changePasswordForm\\\" (submit)=\\\"changePassword()\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-1\\\"></div>\\n                            <div class=\\\"col-md-10\\\">\\n                                <div class=\\\"form-group\\\">\\n                                   <label for=\\\"password\\\">Current Password<span style=\\\"color:red;\\\">*</span></label>\\n                                   \\n                                   <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" (keyup)=\\\"verifyCurrentPassword()\\\"\\n                                   [ngClass]=\\\"{'is-invalid': changePasswordForm.get('currentPassword').errors && changePasswordForm.get('currentPassword').touched}\\\" \\n                                    formControlName= \\\"currentPassword\\\" autocomplete=\\\"new-password\\\">\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"verifyCrntPass\\\">Wrong Password</div>\\n                               </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-1\\\"></div>\\n                              <div class=\\\"col-md-10\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                     <label for=\\\"new-password\\\">New Password<span style=\\\"color:red;\\\">*</span></label>\\n                                     \\n                                     <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"new-password\\\" \\n                                     [ngClass]=\\\"{'is-invalid': changePasswordForm.get('newPassword').errors && changePasswordForm.get('newPassword').touched}\\\" \\n                                      formControlName= \\\"newPassword\\\" autocomplete=\\\"new-password\\\">\\n                                      <div class=\\\"invalid-feedback\\\"\\n                                        *ngIf=\\\"changePasswordForm.get('newPassword').hasError('required') \\n                                        && changePasswordForm.get('newPassword').touched\\\">Password required</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"changePasswordForm.get('newPassword').hasError('minlength')\\n                                          && changePasswordForm.get('newPassword').touched\\\"> Password must be atleast 5 character long</div>\\n                                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"changePasswordForm.get('newPassword').hasError('maxlength') \\n                                      && changePasswordForm.get('newPassword').touched\\\">Password should not more than 10 character long</div>\\n                                 </div>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-1\\\"></div>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                       <label for=\\\"confirm-password\\\">Confirm New Password<span style=\\\"color:red;\\\">*</span></label>\\n                                       \\n                                       <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirm-password\\\" \\n                                       [ngClass]=\\\"{'is-invalid': changePasswordForm.get('confirmPassword').errors && changePasswordForm.get('confirmPassword').touched}\\\" \\n                                        formControlName= \\\"confirmPassword\\\" autocomplete=\\\"new-password\\\">\\n                                        <div *ngIf=\\\"changePasswordForm.get('confirmPassword').hasError('required')\\n                                         && changePasswordForm.get('confirmPassword').touched && !changePasswordForm.hasError('mismatch')\\\" class=\\\"invalid-feedback\\\">Confirm Password required</div>\\n                                        <div *ngIf=\\\"changePasswordForm.hasError('mismatch') && changePasswordForm.get('confirmPassword').touched\\\"\\n                                          class=\\\"invalid-feedback\\\">Confirm password not matched</div>\\n                                   </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-1\\\"></div>\\n                                <div class=\\\"col-md-10\\\">\\n                                   <div class=\\\"form-group\\\">\\n                                    <button class=\\\"form-control btn-success\\\" [ngClass]=\\\"{'btn-registration-disabled': changePasswordForm.invalid}\\\" \\n                                    [disabled]=\\\"changePasswordForm.invalid\\\"\\n                                    style=\\\"padding: 0; color: white;font-size:large; font-weight: 500;\\\">Change Password</button>\\n                                   </div>\\n                                 </div>\\n                               </div>\\n                      </form>\\n                   </div>\\n                 </div>\\n  \\n              </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>Employees</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"createEmployee()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Create New Employee</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input name=\\\"filterText\\\" autoFocus\\r\\n                                         class=\\\"form-control m-input\\\" type=\\\"text\\\"  [(ngModel)]=\\\"filterText\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getEmployees()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                                    class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"primeng-datatable-container\\\">\\r\\n                            <p-table #dataTable (onLazyLoad)=\\\"getEmployees($event)\\\" [value]=\\\"primengTableHelper.records\\\"\\r\\n                                rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" [paginator]=\\\"false\\\"\\r\\n                                [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                <ng-template pTemplate=\\\"header\\\">\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 100px\\\">\\r\\n                                            Actions</th>\\r\\n                                        <th style=\\\"width: 130px\\\" pSortableColumn=\\\"empCode\\\">\\r\\n                                            Employee Code\\r\\n                                            <p-sortIcon field=\\\"empCode\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 160px\\\" pSortableColumn=\\\"empName\\\">\\r\\n                                            Employee Name\\r\\n                                            <p-sortIcon field=\\\"empName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"designation\\\">\\r\\n                                            Designation\\r\\n                                            <p-sortIcon field=\\\"designation\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 180px\\\" pSortableColumn=\\\"email\\\">\\r\\n                                            Email\\r\\n                                            <p-sortIcon field=\\\"email\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            Contact Number\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"userName\\\">\\r\\n                                            Username\\r\\n                                            <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width: 100px\\\">\\r\\n                                            <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                                <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                                                </button>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                        (click)=\\\"viewEmployeeModal.show(record)\\\">View</a>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                        (click)=\\\"createOrEditEmployeeModal.show(record.id)\\\">\\r\\n                                                        Edit</a>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"deleteEmployee(record)\\\">Delete</a>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:130px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Employee Code</span>\\r\\n                                            {{record.empCode}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:160px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Name</span>\\r\\n                                            {{record.empName}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Designation</span>\\r\\n                                            {{record.designation}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:180px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Email</span>\\r\\n                                            {{record.email}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Contact Number</span>\\r\\n                                            {{record.contactNo}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Username</span>\\r\\n                                            {{record.username}}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                            </p-table>\\r\\n                            <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                NoData\\r\\n                            </div>\\r\\n                            <div class=\\\"primeng-paging-container\\\">\\r\\n                                <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                                    (onPageChange)=\\\"getEmployees($event)\\\"\\r\\n                                    [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                    [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                </p-paginator>\\r\\n                                <span class=\\\"total-records-count\\\">\\r\\n                                    <b>Total: </b> {{ primengTableHelper.totalRecordsCount}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditEmployeeModal #createOrEditEmployeeModal (modalSave)=\\\"getEmployees()\\\"></createOrEditEmployeeModal>\\r\\n    <viewEmployeeModal #viewEmployeeModal></viewEmployeeModal>\\r\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #employeeForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>View EmplyeeInfo</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-1\\\"></div>\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5><b> <i class=\\\"fa fa-server\\\" aria-hidden=\\\"true\\\"></i> Employee Name </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <b>: </b>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    {{item.empName}}\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <button type=\\\"button\\\"  class=\\\"btn btn-primary blue\\\"\\r\\n                                    (click)=\\\"change()\\\"><i class=\\\"fa fa-pencil-square-o\\\"\\r\\n                                            aria-hidden=\\\"true\\\"></i>\\r\\n                                        Change Password</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5><b><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i> Username </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <b>: </b>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\"> {{item.username}}</div>\\r\\n                            </div>\\r\\n                            <!-- change password -->\\r\\n                            <div *ngIf=\\\"changePasswordId==1\\\" class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            New Password\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <input type=\\\"password\\\" autocomplete=\\\"new-password\\\" id=\\\"Password\\\"\\r\\n                                        class=\\\"form-control\\\" [(ngModel)]=\\\"employee.password\\\" name=\\\"password\\\"\\r\\n                                        #password=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{ 'is-invalid': password.touched && password.invalid }\\\" required\\r\\n                                        minlength=\\\"6\\\" />\\r\\n                                    <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"password.errors.required\\\">Password is required </div>\\r\\n                                        <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"changePasswordId==1\\\" class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Confirm Password\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <input type=\\\"password\\\" autocomplete=\\\"new-password\\\" id=\\\"ConfirmPassword\\\"\\r\\n                                        class=\\\"form-control\\\" name=\\\"confirmPassword\\\"\\r\\n                                        [(ngModel)]=\\\"employee.confirmPassword\\\"\\r\\n                                        [ngClass]=\\\"{ 'is-invalid': confirmPassword.touched && confirmPassword.invalid }\\\"\\r\\n                                        required confirmPassword #confirmPassword=\\\"ngModel\\\" />\\r\\n                                    <div *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"confirmPassword.errors.required\\\">Confirm Password is required</div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"confirmPassword.touched && employee.password!=employee.confirmPassword\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        Passwords not matched\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--change password -->\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5><b> <i class=\\\"fa fa-briefcase\\\" aria-hidden=\\\"true\\\"></i> Designation </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <b>: </b>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    {{item.designation}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5><b> <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i> Email </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <b>: </b>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    {{item.email}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5><b> <i class=\\\"fa fa-phone-square\\\" aria-hidden=\\\"true\\\"></i> Contact Number </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <b>: </b>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    {{item.contactNo}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button *ngIf=\\\"changePasswordId==0\\\" [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\"\\r\\n                        (click)=\\\"close()\\\">Close</button>\\r\\n                    <button *ngIf=\\\"changePasswordId==1\\\" type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\"\\r\\n                        (click)=\\\"updatePssword(item.id)\\\"\\r\\n                        [disabled]=\\\"!employeeForm.form.valid || employee.password!=employee.confirmPassword\\\"><i\\r\\n                            class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Update Password</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"box box-success\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <h3 class=\\\"box-title\\\"><strong>Importer Dashboard</strong></h3>\\r\\n        </div>\\r\\n        <div class=\\\"box-body\\\" style=\\\"background-color: #ecF0F5;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <!-- fix for small devices only -->\\r\\n                <div class=\\\"clearfix visible-sm-block\\\"></div>\\r\\n                 <!-- /.col -->\\r\\n                 <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-aqua\\\"><i class=\\\"fa fa-book\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Total Proforma</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{importerDashboardInfo.totalProforma === undefined ? 0 : importerDashboardInfo.totalProforma}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-green\\\"><i class=\\\"fa fa-check\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Approved Proforma</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{importerDashboardInfo.approvedProforma === undefined ? 0 : importerDashboardInfo.approvedProforma}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- /.col -->\\r\\n                <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                  <div class=\\\"info-box\\\">\\r\\n                    <span class=\\\"info-box-icon bg-red\\\"><i class=\\\"fa fa-warning\\\"></i></span>\\r\\n        \\r\\n                    <div class=\\\"info-box-content\\\">\\r\\n                      <span class=\\\"info-box-text\\\">Rejected Product</span>\\r\\n                      <span class=\\\"info-box-number\\\">{{importerDashboardInfo.rejectedProduct === undefined ? 0 : importerDashboardInfo.rejectedProduct}}</span>\\r\\n                    </div>\\r\\n                    <!-- /.info-box-content -->\\r\\n                  </div>\\r\\n                  <!-- /.info-box -->\\r\\n                </div>\\r\\n                <!-- /.col -->\\r\\n                  <div class=\\\"col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                    <div class=\\\"info-box\\\">\\r\\n                      <span class=\\\"info-box-icon bg-yellow\\\"><i class=\\\"fa fa-clock-o\\\"></i></span>\\r\\n          \\r\\n                      <div class=\\\"info-box-content\\\">\\r\\n                        <span class=\\\"info-box-text\\\">Pending Product</span>\\r\\n                        <span class=\\\"info-box-number\\\">{{importerDashboardInfo.pendingProformaApproval ===  undefined ? 0 :  importerDashboardInfo.pendingProformaApproval}}</span>\\r\\n                      </div>\\r\\n                      <!-- /.info-box-content -->\\r\\n                    </div>\\r\\n                    <!-- /.info-box -->\\r\\n                  </div>\\r\\n              </div>\\r\\n        </div>\\r\\n        <!-- /.box-body -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-success\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n              <h3 class=\\\"box-title\\\"><strong>Change Password</strong></h3>\\r\\n             <button type=\\\"button\\\" style=\\\"float: right;margin-right: 100px;\\\" class=\\\"btn btn-embossed btn-primary blue\\\" (click)=\\\"backToImporterInfo()\\\"><i class=\\\"fas fa-backward\\\"></i>Back to Importer Info</button>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n               <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-md-12\\\">\\r\\n                    <form [formGroup]=\\\"changePasswordForm\\\" (submit)=\\\"changePassword()\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-1\\\"></div>\\r\\n                          <div class=\\\"col-md-10\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                 <label for=\\\"password\\\">Current Password<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 \\r\\n                                 <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" (keyup)=\\\"verifyCurrentPassword()\\\"\\r\\n                                 [ngClass]=\\\"{'is-invalid': changePasswordForm.get('currentPassword').errors && changePasswordForm.get('currentPassword').touched}\\\" \\r\\n                                  formControlName= \\\"currentPassword\\\" autocomplete=\\\"new-password\\\">\\r\\n                                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"verifyCrntPass\\\">Wrong Password</div>\\r\\n                             </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-1\\\"></div>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                   <label for=\\\"new-password\\\">New Password<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                   \\r\\n                                   <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"new-password\\\" \\r\\n                                   [ngClass]=\\\"{'is-invalid': changePasswordForm.get('newPassword').errors && changePasswordForm.get('newPassword').touched}\\\" \\r\\n                                    formControlName= \\\"newPassword\\\" autocomplete=\\\"new-password\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\"\\r\\n                                      *ngIf=\\\"changePasswordForm.get('newPassword').hasError('required') \\r\\n                                      && changePasswordForm.get('newPassword').touched\\\">Password required</div>\\r\\n                                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"changePasswordForm.get('newPassword').hasError('minlength')\\r\\n                                        && changePasswordForm.get('newPassword').touched\\\"> Password must be atleast 5 character long</div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"changePasswordForm.get('newPassword').hasError('maxlength') \\r\\n                                    && changePasswordForm.get('newPassword').touched\\\">Password should not more than 10 character long</div>\\r\\n                               </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-1\\\"></div>\\r\\n                              <div class=\\\"col-md-10\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                     <label for=\\\"confirm-password\\\">Confirm New Password<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                     \\r\\n                                     <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirm-password\\\" \\r\\n                                     [ngClass]=\\\"{'is-invalid': changePasswordForm.get('confirmPassword').errors && changePasswordForm.get('confirmPassword').touched}\\\" \\r\\n                                      formControlName= \\\"confirmPassword\\\" autocomplete=\\\"new-password\\\">\\r\\n                                      <div *ngIf=\\\"changePasswordForm.get('confirmPassword').hasError('required')\\r\\n                                       && changePasswordForm.get('confirmPassword').touched && !changePasswordForm.hasError('mismatch')\\\" class=\\\"invalid-feedback\\\">Confirm Password required</div>\\r\\n                                      <div *ngIf=\\\"changePasswordForm.hasError('mismatch') && changePasswordForm.get('confirmPassword').touched\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">Confirm password not matched</div>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-md-1\\\"></div>\\r\\n                              <div class=\\\"col-md-10\\\">\\r\\n                                 <div class=\\\"form-group\\\">\\r\\n                                  <button class=\\\"form-control btn-success\\\" [ngClass]=\\\"{'btn-registration-disabled': changePasswordForm.invalid}\\\" \\r\\n                                  [disabled]=\\\"changePasswordForm.invalid\\\"\\r\\n                                  style=\\\"padding: 0; color: white;font-size:large; font-weight: 500;\\\">Change Password</button>\\r\\n                                 </div>\\r\\n                               </div>\\r\\n                             </div>\\r\\n                    </form>\\r\\n                 </div>\\r\\n               </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\\r\\n\"","export default \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-success\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n              <h3 class=\\\"box-title\\\"><strong>Profile</strong></h3>\\r\\n              <button  class=\\\"btn btn-primary blue\\\" style=\\\"float: right;margin-left: 10px;\\\" (click)=\\\"changePassword()\\\"><i class=\\\"fa fa-edit\\\"></i>\\r\\n                Change Password</button>\\r\\n        <button  class=\\\"btn btn-primary blue\\\" style=\\\"float: right;\\\" (click)=\\\"editImporterInfo()\\\"><i class=\\\"fa fa-edit\\\"></i>\\r\\n            Edit Importer Info</button>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-2\\\"></div>\\r\\n                    <div class=\\\"col-md-10\\\">\\r\\n                        <h3 style=\\\"color: green; font-weight: bold;\\\">{{importerInfo.orgName}}</h3>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" >\\r\\n                    <div class=\\\"col-md-1\\\"></div>\\r\\n                    <div class=\\\"col-md-10\\\">\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-sitemap\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Organization Name\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.orgName}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-server\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Contact Name\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.contactName}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-phone-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Contact Number\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.contactNo}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-briefcase\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Position\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.position}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Username\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.userLogin.username}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Email\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.email}}</div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Division\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.division}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        District\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.district}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Upazila\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.upazila}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        Address\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.address}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-file\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        DLS License Type\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.dlsLicenseType}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-id-card\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        DLS License No.\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.dlsLicenseNo}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" >\\r\\n                            <div class=\\\"col-md-2\\\"></div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <h5>\\r\\n                                    <b>\\r\\n                                        <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        NID No.\\r\\n                                    </b>\\r\\n                                </h5>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                            <div class=\\\"col-md-6\\\">{{importerInfo.nidNo}}</div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"box box-success\\\">\\r\\n              <div class=\\\"box-header with-border\\\">\\r\\n                <h3 class=\\\"box-title\\\"><strong>Edit Info</strong></h3>\\r\\n               <button type=\\\"button\\\" style=\\\"float: right;margin-right: 100px;\\\" class=\\\"btn btn-embossed btn-primary blue\\\" (click)=\\\"backToImporterInfo()\\\"><i class=\\\"fas fa-backward\\\"></i>Back to Importer Info</button>\\r\\n              </div>\\r\\n              <div class=\\\"box-body\\\">\\r\\n                 <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-md-12\\\">\\r\\n                      <form [formGroup]=\\\"editInfoForm\\\" (submit)=\\\"updateInfo()\\\">\\r\\n                         <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                  <label for=\\\"contact-person\\\">Contact Person<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                 \\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact-person\\\" \\r\\n                                  [ngClass]=\\\"{'is-invalid': editInfoForm.get('contactName').errors && editInfoForm.get('contactName').touched}\\\" \\r\\n                                  formControlName= \\\"contactName\\\">\\r\\n                                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('contactName').hasError('required')\\r\\n                                  && editInfoForm.get('contactName').touched\\\">Contact person required</div>\\r\\n                                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('contactName').hasError('maxlength')\\r\\n                                     && editInfoForm.get('contactName').touched\\\"> Contact person can be maximum 50 Character long</div>                 \\r\\n                               </div>\\r\\n                           </div>\\r\\n                         </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-1\\\"></div>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"position\\\">Position<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"position\\\"\\r\\n                                    [ngClass]=\\\"{'is-invalid': editInfoForm.get('position').errors && editInfoForm.get('position').touched}\\\" \\r\\n                                     formControlName= \\\"position\\\">\\r\\n                                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('position').hasError('required')\\r\\n                                     && editInfoForm.get('position').touched\\\">Position required</div>\\r\\n                                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('position').hasError('maxlength')\\r\\n                                        && editInfoForm.get('position').touched\\\"> Position can be maximum 20 Character long</div> \\r\\n                                </div>\\r\\n                             </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"contact-no\\\">Mobile No.<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                    \\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact-no\\\" \\r\\n                                   [ngClass]=\\\"{'is-invalid': editInfoForm.get('contactNo').errors && editInfoForm.get('contactNo').touched}\\\" \\r\\n                                   formControlName= \\\"contactNo\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('contactNo').hasError('required')\\r\\n                                    && editInfoForm.get('contactNo').touched\\\">Mobile No. required</div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('contactNo').hasError('maxlength')\\r\\n                                       && editInfoForm.get('contactNo').touched\\\">Mobile No. can be maximum 20 Character long</div>\\r\\n                                </div>\\r\\n                             </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"email\\\">Email<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                  \\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" \\r\\n                                    [ngClass]=\\\"{'is-invalid': editInfoForm.get('email').errors && editInfoForm.get('email').touched}\\\" \\r\\n                                   formControlName= \\\"email\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('email').hasError('required')\\r\\n                                    && editInfoForm.get('email').touched\\\">Email No. required</div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('email').hasError('maxlength')\\r\\n                                       && editInfoForm.get('email').touched\\\">Email can be maximum 50 Character long</div>\\r\\n                                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('email').hasError('email')\\r\\n                                       && editInfoForm.get('email').touched\\\">Invalid email format</div>\\r\\n                                  </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"user-name\\\">Username <span style=\\\"color:red;\\\">*</span></label>\\r\\n                                   \\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-name\\\" \\r\\n                                    [ngClass]=\\\"{'is-invalid': editInfoForm.get('username').errors && editInfoForm.get('username').touched}\\\" \\r\\n                                     formControlName= \\\"username\\\" autocomplete=\\\"off\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('username').hasError('required')\\r\\n                                    && editInfoForm.get('username').touched\\\">Username required</div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('username').hasError('maxlength')\\r\\n                                    && editInfoForm.get('username').touched\\\">Username can be maximum 20 Character long</div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('username').hasError('pattern')\\r\\n                                    && editInfoForm.get('username').touched && !editInfoForm.get('username').hasError('maxlength')\\\">Username must have atleast one character</div>\\r\\n                                </div>\\r\\n                             </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"nid-no\\\">NID No<span style=\\\"color:red;\\\">*</span></label>\\r\\n                                    \\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nid-no\\\" \\r\\n                                  [ngClass]=\\\"{'is-invalid': editInfoForm.get('nidNo').errors && editInfoForm.get('nidNo').touched}\\\" \\r\\n                                  formControlName= \\\"nidNo\\\">\\r\\n                                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('nidNo').hasError('required')\\r\\n                                 && editInfoForm.get('nidNo').touched\\\">NID No. required</div>\\r\\n                                 <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('nidNo').hasError('maxlength')\\r\\n                                 && editInfoForm.get('nidNo').touched\\\">NID No can be maximum 20 Character long</div>\\r\\n                               </div>\\r\\n                               </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"nid-scan-copy\\\">NID Scan Copy</label>\\r\\n                                    \\r\\n                                     <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"nid-scan-copy\\\" (change)=\\\"onSelectedNidFile($event)\\\"\\r\\n                                     placeholder=\\\"NID scan copy\\\"\\r\\n                                    [ngClass]=\\\"{'is-invalid': editInfoForm.get('nidScan').errors && editInfoForm.get('nidScan').touched}\\\" \\r\\n                                    formControlName= \\\"nidScan\\\">\\r\\n                                  <small class=\\\"help-block\\\" style=\\\"color: #888889\\\">File size should be(Max 1MB) in PDF Format </small>\\r\\n                                   <div class=\\\"invalid-feedback\\\" *ngIf=\\\"editInfoForm.get('nidScan').hasError('required')\\r\\n                                   && editInfoForm.get('nidScan').touched\\\">NID scan copy required</div>\\r\\n                                    </div>\\r\\n                              </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-md-1\\\"></div>\\r\\n                           <div class=\\\"col-md-10\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                               <button class=\\\"form-control btn-success\\\" [ngClass]=\\\"{'btn-registration-disabled': editInfoForm.invalid}\\\" \\r\\n                               [disabled]=\\\"editInfoForm.invalid\\\"\\r\\n                               style=\\\"padding: 0; color: white;font-size:large; font-weight: 500;\\\">Update Info</button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </form>\\r\\n                   </div>\\r\\n                 </div>\\r\\n  \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\\r\\n\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>Importer Management</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <!-- <button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel-o\\\"></i>\\r\\n                    ExportToExcel</button> -->\\r\\n                    <button (click)=\\\"createImporter()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i>\\r\\n                        Create New Importer</button>\\r\\n                <button (click)=\\\"viewImporterReport(true)\\\" class=\\\"btn btn-info\\\"><i class=\\\"fa fa-eye\\\"\\r\\n                        aria-hidden=\\\"true\\\"></i>\\r\\n                    View All Importer Report</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"filterText\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getImporters()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                                    class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"primeng-datatable-container\\\">\\r\\n                            <p-table #dataTable (onLazyLoad)=\\\"getImporters($event)\\\" [value]=\\\"primengTableHelper.records\\\"\\r\\n                                rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" [paginator]=\\\"false\\\"\\r\\n                                [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                <ng-template pTemplate=\\\"header\\\">\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 110px\\\">\\r\\n                                            Actions</th>\\r\\n                                        <th style=\\\"width: 130px\\\" pSortableColumn=\\\"orgName\\\">\\r\\n                                            Organization\\r\\n                                            <p-sortIcon field=\\\"orgName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 160px\\\" pSortableColumn=\\\"contactName\\\">\\r\\n                                            Contact Name\\r\\n                                            <p-sortIcon field=\\\"contactName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            Contact Number\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            Position\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 180px\\\">\\r\\n                                            Email\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\" pSortableColumn=\\\"username\\\">\\r\\n                                            Username\\r\\n                                            <p-sortIcon field=\\\"username\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            Division\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            District\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            Upazila\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            Address\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            DLS License Type\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            DLS License No.\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 150px\\\">\\r\\n                                            NID No.\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 100px\\\">\\r\\n                                            DLS License\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 100px\\\">\\r\\n                                            NID\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 100px\\\">\\r\\n                                            IRC\\r\\n                                        </th>\\r\\n\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width: 110px\\\">\\r\\n                                            <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                                <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                                                </button>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"viewImporterModal.show(record)\\\">View</a>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"deleteImporter(record)\\\">Delete</a>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:130px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Organization</span>\\r\\n                                            {{record.orgName}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:160px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Contact Name</span>\\r\\n                                            {{record.contactName}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Contact Number</span>\\r\\n                                            {{record.contactNo}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Position</span>\\r\\n                                            {{record.position}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:180px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Email</span>\\r\\n                                            {{record.email}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Username</span>\\r\\n                                            {{record.username}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Division</span>\\r\\n                                            {{record.division}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> District</span>\\r\\n                                            {{record.district}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Upazila</span>\\r\\n                                            {{record.upazila}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Address</span>\\r\\n                                            {{record.address}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> DLS License Type</span>\\r\\n                                            {{record.dlsLicenseType}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> DLS License No.</span>\\r\\n                                            {{record.dlsLicenseNo}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:150px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">NID No.</span>\\r\\n                                            {{record.nidNo}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:100px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> DLS License</span>\\r\\n                                            <button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\"\\r\\n                                                (click)=\\\"DownloadDlsLicenseFile(record.dlsLicenseScan)\\\"><i\\r\\n                                                    class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                                            <!-- {{record.dlsLicenseScan}} -->\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:100px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">NID</span>\\r\\n                                            <button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\"\\r\\n                                                (click)=\\\"DownloadNidFile(record.nidScan)\\\"><i\\r\\n                                                    class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                                            <!-- {{record.nidScan}} -->\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:100px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> IRC</span>\\r\\n                                            <button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\"\\r\\n                                                (click)=\\\"DownloadIrcFile(record.ircScan)\\\"><i\\r\\n                                                    class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                                            <!-- {{record.ircScan}} -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                            </p-table>\\r\\n                            <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                NoData\\r\\n                            </div>\\r\\n                            <div class=\\\"primeng-paging-container\\\">\\r\\n                                <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                                    (onPageChange)=\\\"getImporters($event)\\\"\\r\\n                                    [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                    [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                </p-paginator>\\r\\n                                <span class=\\\"total-records-count\\\">\\r\\n                                    <b>Total: </b> {{ primengTableHelper.totalRecordsCount}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <viewImporterModal #viewImporterModal></viewImporterModal>\\r\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #importerForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>View ImporterInfo</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-2\\\"></div>\\r\\n                        <div class=\\\"col-md-7\\\">\\r\\n                            <h3 style=\\\"color: green; font-weight: bold;\\\">{{item.orgName}}</h3>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <button type=\\\"button\\\"  class=\\\"btn btn-primary blue\\\"\\r\\n                            (click)=\\\"change()\\\"><i class=\\\"fa fa-pencil-square-o\\\"\\r\\n                                    aria-hidden=\\\"true\\\"></i>\\r\\n                                Change Password</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-1\\\"></div>\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-sitemap\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Organization Name\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.orgName}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-server\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Contact Name\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.contactName}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-phone-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Contact Number\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.contactNo}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-briefcase\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Position\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.position}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Username\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.username}}</div>\\r\\n                            </div>\\r\\n                            <!-- change password -->\\r\\n                            <div *ngIf=\\\"changePasswordId==1\\\" class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            New Password\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <input type=\\\"password\\\" autocomplete=\\\"new-password\\\" id=\\\"Password\\\"\\r\\n                                        class=\\\"form-control\\\" [(ngModel)]=\\\"importer.password\\\" name=\\\"password\\\"\\r\\n                                        #password=\\\"ngModel\\\"\\r\\n                                        [ngClass]=\\\"{ 'is-invalid': password.touched && password.invalid }\\\" required\\r\\n                                        minlength=\\\"6\\\" />\\r\\n                                    <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"password.errors.required\\\">Password is required </div>\\r\\n                                        <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"changePasswordId==1\\\" class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Confirm Password\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <input type=\\\"password\\\" autocomplete=\\\"new-password\\\" id=\\\"ConfirmPassword\\\"\\r\\n                                        class=\\\"form-control\\\" name=\\\"confirmPassword\\\"\\r\\n                                        [(ngModel)]=\\\"importer.confirmPassword\\\"\\r\\n                                        [ngClass]=\\\"{ 'is-invalid': confirmPassword.touched && confirmPassword.invalid }\\\"\\r\\n                                        required confirmPassword #confirmPassword=\\\"ngModel\\\" />\\r\\n                                    <div *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"confirmPassword.errors.required\\\">Confirm Password is required</div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"confirmPassword.touched && importer.password!=importer.confirmPassword\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        Passwords not matched\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--change password -->\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Email\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.email}}</div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Division\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.division}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            District\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.district}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Upazila\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.upazila}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            Address\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.address}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-file\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            DLS License Type\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.dlsLicenseType}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" style=\\\"border-bottom: 1px solid #f1f1f1 ;\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-id-card\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            DLS License No.\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.dlsLicenseNo}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\"></div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <h5>\\r\\n                                        <b>\\r\\n                                            <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            NID No.\\r\\n                                        </b>\\r\\n                                    </h5>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-1\\\"><b>:</b></div>\\r\\n                                <div class=\\\"col-md-6\\\">{{item.nidNo}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button *ngIf=\\\"changePasswordId==0\\\" [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\"\\r\\n                        (click)=\\\"close()\\\">Close</button>\\r\\n\\r\\n                    <button *ngIf=\\\"changePasswordId==1\\\" type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"updatePssword(item.id)\\\"\\r\\n                        [disabled]=\\\"!importerForm.form.valid || importer.password!=importer.confirmPassword\\\"><i\\r\\n                            class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Update Password</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","export default \"<div class=\\\"container\\\" style=\\\"padding: 0;\\\">\\r\\n     <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n           <div style=\\\"padding:5% 20% 6% 15%;\\\">\\r\\n               <form [formGroup]=\\\"loginForm\\\" (ngSubmit) =\\\"login()\\\">\\r\\n                     <div class=\\\"imgcontainer\\\">\\r\\n                           <img src=\\\"../../../assets/img/logo/govt-logo.png\\\" alt=\\\"DLS Logo\\\">\\r\\n                         </div>\\r\\n                        <div style=\\\"width: 100%;text-align: center;\\\">\\r\\n                         <div style=\\\"font-size: 24px; font-weight:700; color:#d43a3a;margin-bottom: 5px;\\\">প্রাণিসম্পদ অধিদপ্তর বাংলাদেশ</div>\\r\\n                        </div>\\r\\n                        <div style=\\\"font-size: 20px; font-weight:600; margin-bottom: 20px;\\\">NOC Management System(NMS)</div>\\r\\n                         <div style=\\\"font-weight:900;font-size:20px; text-align:center; color:#45A845;\\\">\\r\\n                              লগইন করুন\\r\\n                         </div>\\r\\n                   <!-- <div class=\\\"container\\\">--> \\r\\n                        <div class=\\\"text-center\\\" id=\\\"lg-spinner\\\" style=\\\"margin-bottom:10px;\\\">\\r\\n                              <i class=\\\"fas fa-3x fa-spinner fa-pulse\\\" style=\\\"color:#54B575\\\" *ngIf=\\\"loading\\\"></i>\\r\\n                          </div>\\r\\n                        <div class=\\\"formGroup\\\">\\r\\n                           <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': loginForm.get('username').errors && loginForm.get('username').touched}\\\"\\r\\n                            class=\\\"form-control\\\"  formControlName=\\\"username\\\" placeholder=\\\"Username\\\">\\r\\n                           <div class=\\\"invalid-feedback\\\" *ngIf=\\\"loginForm.get('username').hasError('required')\\r\\n                           && loginForm.get('username').touched\\\">Please enter your username</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"formGroup\\\">\\r\\n                           <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': loginForm.get('password').errors && loginForm.get('password').touched}\\\"\\r\\n                           class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                           <div class=\\\"invalid-feedback\\\" *ngIf=\\\"loginForm.get('password').hasError('required') && loginForm.get('password').touched\\\">\\r\\n                              Please enter your password</div>\\r\\n                           <!--<div class=\\\"invalid-feedback\\\" *ngIf=\\\"loginForm.get('password').hasError('minlength') && loginForm.get('password').touched\\\">\\r\\n                              Password must atleast 4 character long</div>\\r\\n                           <div class=\\\"invalid-feedback\\\" *ngIf=\\\"loginForm.get('password').hasError('maxlength') && loginForm.get('password').touched\\\">\\r\\n                              Password should not more than 8 character long</div>-->\\r\\n                        </div>\\r\\n                        <div class=\\\"formGroup\\\">\\r\\n                        <div *ngIf=\\\"invalidUserCred\\\"><small style=\\\"color: red; font-weight: bold;\\\">Invalid Username or Password</small></div>\\r\\n                        <button class=\\\"form-control btn-success\\\" [disabled]=\\\"loginForm.invalid\\\"\\r\\n                         [ngClass]=\\\"{'btn-login-disabled':loginForm.invalid}\\\"\\r\\n                         style=\\\" padding: 0; color: white;font-size:large; font-weight: 700;\\\">Login</button>\\r\\n                        </div>\\r\\n                        <div style=\\\"text-align: center; margin-top: 10px;\\\">\\r\\n                        <span style=\\\"font-size: 15px; font-weight: 700\\\">Not registered? \\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success btn-register\\\" \\r\\n                        (click)=\\\"NavigateToRegister()\\\"><i class=\\\"fa fa-user-plus\\\" aria-hidden=\\\"true\\\"></i> Register</button>\\r\\n                        </span>\\r\\n                     </div>\\r\\n                  <!--</div>-->\\r\\n                </form>\\r\\n           </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\"></div>\\r\\n     </div>\\r\\n</div>\\r\\n<!-- <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '0',fullScreenBackdrop:true }\\\"></ngx-loading> -->\\r\\n\"","export default \"<div class=\\\"content\\\">\\n  <div bsModal #annualReqsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n    aria-labelledby=\\\"annualReqsModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\n          <h4 class=\\\"modal-title\\\">\\n            <span>Annual Requirements</span>\\n          </h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"content\\\">\\n          <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n              <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\n                <div class=\\\"m-form m-form--label-align-right\\\">\\n                  <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <div class=\\\"form-group m-form__group align-items-center\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\"\\n                            type=\\\"text\\\">\\n                          <span class=\\\"input-group-btn\\\">\\n                            <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\n                                class=\\\"flaticon-search-1\\\"></i></button>\\n                          </span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n\\n              <div class=\\\"row\\\">\\n                <!--<Primeng-Datatable-Start>-->\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"primeng-datatable-container\\\" style=\\\"border: 1px solid #bed2c9; width: 100%;\\\">\\n                    <p-table #dataTable (onLazyLoad)=\\\"getAll($event)\\\" [value]=\\\"primengTableHelper.records\\\" rows=\\\"5\\\"\\n                      [paginator]=\\\"false\\\" [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\n                      [responsive]=\\\"primengTableHelper.isResponsive\\\"\\n                      [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\" class=\\\"table table-bordered table-responsive table-hover table-striped\\\">\\n                      <ng-template pTemplate=\\\"header\\\">\\n                        <tr style=\\\" font-size: 12px;\\\">\\n                          <th>Actions</th>\\n                          <th  style=\\\"display: none;\\\">Id</th>\\n                          <th >Annual<br>Req<br>No</th>\\n                          <th >Importer</th>\\n                          <th >Submission<br>Date</th>\\n                          <th  style=\\\"overflow: hidden;\\\">Products</th>\\n                          <th  style=\\\"overflow: hidden;\\\">Pack Size</th>\\n                          <!-- <th  style=\\\"width: 20%;overflow: hidden;\\\">Countries</th>\\n                                                  <th  style=\\\"width: 0%;display: none;;\\\">Manufactures</th> -->\\n                          <!-- <th  style=\\\"width: 5%; display: none;\\\">Currencies</th> -->\\n                          <th >Total<br>Amounts</th>\\n                          <th >Total<br>Units <br> (Kg/Ltr/Unit)</th>\\n                          <!-- <th  style=\\\"width: 12%;display: none;\\\">Total<br>Prices</th>\\n                                                  <th  style=\\\"width: 10%;\\\">Total<br>Price(BDT)</th> -->\\n                        </tr>\\n                      </ng-template>\\n                      <ng-template pTemplate=\\\"body\\\" let-a=\\\"$implicit\\\">\\n                        <tr style=\\\" font-size: 12px;\\\">\\n                          <td><button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"selectAnnualReq(a)\\\">Details</button> </td>\\n                          <td style=\\\"display: none;\\\">{{a.id}}</td>\\n                          <td>{{a.annualReqNo}}</td>\\n                          <!-- <td style=\\\"display: none;\\\">{{a.importerId}}</td> -->\\n                          <td>{{a.importerId}}</td>\\n                          <td>{{a.submissionDate| date}}</td>\\n                          <td>\\n                            <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\n                              <li>{{d.prodName}}</li>\\n                            </ul>\\n                          </td>\\n                          <td>\\n                            <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\n                              <li>{{d.packSize}}</li>\\n                            </ul>\\n                          </td>\\n                          <td style=\\\"text-align: right;\\\">\\n                            <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\n                              <li>{{d.totalAmount}} MT</li>\\n                            </ul>\\n                          </td>\\n                          <td style=\\\"text-align: right;\\\">\\n                            <ul type=\\\"none\\\" *ngFor=\\\"let d of a.annualRequirementDtls\\\">\\n                              <li>{{d.tentativeUnits}}</li>\\n                            </ul>\\n                          </td>\\n                        </tr>\\n                      </ng-template>\\n                    </p-table>\\n                    <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\n                      NoData\\n                    </div>\\n                    <div class=\\\"primeng-paging-container\\\">\\n                      <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\n                        styleClass=\\\"role-lookup-table-paginator\\\" (onPageChange)=\\\"getAll($event)\\\"\\n                        [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                        [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                      </p-paginator>\\n                      <span class=\\\"total-records-count\\\">\\n                        <b>Total: </b> {{primengTableHelper.totalRecordsCount}}\\n                      </span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"modal-footer\\\">\\n            <button  type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"close()\\\">Close</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <app-annual-requirement></app-annual-requirement> -->\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>Pick Proforma Invoice</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"content\\\">\\r\\n                <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                    <div class=\\\"m-portlet__body\\\">\\r\\n                        <div class=\\\"row\\\" style=\\\"margin: 5px 0px 5px 0px\\\">\\r\\n                            <div class=\\\"col-md-1\\\"></div>\\r\\n                            <div class=\\\"col-md-9\\\">\\r\\n                                <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\"\\r\\n                                    [(ngModel)]=\\\"filterText\\\" placeholder=\\\"Search..\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-embossed btn-danger\\\" (click)=\\\"resetFilter()\\\"><i\\r\\n                                        class=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\"></div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--<Primeng-Datatable-Start>-->\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n                                    <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                                        <thead style=\\\"background-color: #3c8dbc;color:white;\\\">\\r\\n                                            <tr>\\r\\n                                                <th style=\\\"width: 10px\\\">Actions</th>\\r\\n                                                <th style=\\\"width: 30px\\\">\\r\\n                                                    PI No.\\r\\n                                                </th>\\r\\n                                                <th style=\\\"width: 35px\\\">\\r\\n                                                    Submission Date\\r\\n                                                </th>\\r\\n                                                <th style=\\\"width: 35px\\\">\\r\\n                                                    Importer Name\\r\\n                                                </th>\\r\\n                                                <th style=\\\"width: 35px\\\">\\r\\n                                                    Products\\r\\n                                                </th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr\\r\\n                                                *ngFor=\\\"let record of records | paginate: { itemsPerPage:5, currentPage: p} | filter: filterText\\\">\\r\\n                                                <td style=\\\"width: 10px\\\">\\r\\n                                                    <div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                        <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\"\\r\\n                                                            (click)=\\\"setAndSave(record)\\\">\\r\\n                                                            Select\\r\\n                                                        </button>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"width:30px\\\">\\r\\n                                                    {{record.proformaInvoiceNo}}\\r\\n                                                </td>\\r\\n                                                <td style=\\\"width:35px\\\">\\r\\n                                                    {{record.submissionDate | date}}\\r\\n                                                </td>\\r\\n                                                <td style=\\\"width:35px\\\">\\r\\n                                                    {{record.importerInfo.orgName}}\\r\\n                                                </td>\\r\\n                                                <td style=\\\"width:35px\\\">\\r\\n                                                    <p *ngFor=\\\"let d of record.proformaInvoiceDtls\\\">{{d.prodName}}</p>\\r\\n                                                    <br>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\"\\r\\n                        (click)=\\\"close()\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>Pick Role</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"content\\\">\\r\\n                    <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                        <div class=\\\"m-portlet__body\\\">\\r\\n                            <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                                <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                                    <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus\\r\\n                                                        class=\\\"form-control m-input\\\" type=\\\"text\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\"\\r\\n                                                            type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <!--<Primeng-Datatable-Start>-->\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"primeng-datatable-container\\\">\\r\\n                                        <p-table #dataTable (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                            [value]=\\\"primengTableHelper.records\\\" rows=\\\"5\\\" [paginator]=\\\"false\\\"\\r\\n                                            [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                            [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                            [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                                <tr>\\r\\n                                                    <th style=\\\"width: 5px\\\">Actions</th>\\r\\n                                                    <th style=\\\"width: 20px\\\" pSortableColumn=\\\"displayName\\\">\\r\\n                                                        Role\\r\\n                                                        <p-sortIcon field=\\\"displayName\\\"></p-sortIcon>\\r\\n                                                    </th>\\r\\n                                                    <th style=\\\"width: 20px\\\" pSortableColumn=\\\"fullName\\\">\\r\\n                                                        Role Name\\r\\n                                                        <p-sortIcon field=\\\"fullName\\\"></p-sortIcon>\\r\\n                                                    </th>\\r\\n                                                </tr>\\r\\n                                            </ng-template>\\r\\n                                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                                <tr>\\r\\n                                                    <td style=\\\"width: 5px\\\">\\r\\n                                                        <div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                            <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\"\\r\\n                                                                (click)=\\\"setAndSave(record)\\\">\\r\\n                                                                Select\\r\\n                                                            </button>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"width:20px\\\">\\r\\n                                                        <span class=\\\"ui-column-title\\\"> Role</span>\\r\\n                                                        {{record.displayName}}\\r\\n                                                    </td> <td style=\\\"width:20px\\\">\\r\\n                                                        <span class=\\\"ui-column-title\\\"> Role Name</span>\\r\\n                                                        {{record.fullName}}\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </ng-template>\\r\\n                                        </p-table>\\r\\n                                        <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                            NoData\\r\\n                                        </div>\\r\\n                                        <div class=\\\"primeng-paging-container\\\">\\r\\n                                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                                #paginator styleClass=\\\"role-lookup-table-paginator\\\"\\r\\n                                                (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                                [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                                [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                            </p-paginator>\\r\\n                                            <span class=\\\"total-records-count\\\">\\r\\n                                                <b>Total: </b> {{primengTableHelper.totalRecordsCount}}\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\"\\r\\n                            (click)=\\\"close()\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    <span>Pick User</span>\\r\\n                </h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"content\\\">\\r\\n                <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                    <div class=\\\"m-portlet__body\\\">\\r\\n                        <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                            <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                                <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                            <div class=\\\"input-group\\\">\\r\\n                                                <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus\\r\\n                                                    class=\\\"form-control m-input\\\" type=\\\"text\\\">\\r\\n                                                <span class=\\\"input-group-btn\\\">\\r\\n                                                    <button (click)=\\\"getAll()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                                            class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!--<Primeng-Datatable-Start>-->\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"primeng-datatable-container\\\">\\r\\n                                    <p-table #dataTable (onLazyLoad)=\\\"getAll($event)\\\"\\r\\n                                        [value]=\\\"primengTableHelper.records\\\" rows=\\\"5\\\" [paginator]=\\\"false\\\" [lazy]=\\\"true\\\"\\r\\n                                        [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                        [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                        [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                        <ng-template pTemplate=\\\"header\\\">\\r\\n                                            <tr>\\r\\n                                                <th style=\\\"width: 5px\\\">Actions</th>\\r\\n                                                <th style=\\\"width: 20px\\\" pSortableColumn=\\\"displayName\\\">\\r\\n                                                    Name\\r\\n                                                    <p-sortIcon field=\\\"displayName\\\"></p-sortIcon>\\r\\n                                                </th>\\r\\n                                            </tr>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                            <tr>\\r\\n                                                <td style=\\\"width: 5px\\\">\\r\\n                                                    <div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                                        <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\"\\r\\n                                                            (click)=\\\"setAndSave(record)\\\">\\r\\n                                                            Select\\r\\n                                                        </button>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"width:20px\\\">\\r\\n                                                    <span class=\\\"ui-column-title\\\"> Name</span>\\r\\n                                                    {{record.displayName}}\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </ng-template>\\r\\n                                    </p-table>\\r\\n                                    <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                        NoData\\r\\n                                    </div>\\r\\n                                    <div class=\\\"primeng-paging-container\\\">\\r\\n                                        <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                                            styleClass=\\\"user-lookup-table-paginator\\\" (onPageChange)=\\\"getAll($event)\\\"\\r\\n                                            [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                            [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                        </p-paginator>\\r\\n                                        <span class=\\\"total-records-count\\\">\\r\\n                                            <b>Total: </b> {{primengTableHelper.totalRecordsCount}}\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-primary blue\\\"\\r\\n                        (click)=\\\"close()\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n                <div class=\\\"box-header with-border\\\">\\r\\n                    <h3 class=\\\"box-title\\\"><strong>NOC Certificate Generate Form</strong></h3>\\r\\n                </div>\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form #nocForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-3\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                        <label for=\\\"from-date\\\" class=\\\"control-label date-label\\\">NOC Certificate\\r\\n                                            Type</label>\\r\\n                                        <span style=\\\"color:red;\\\"> *</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-4\\\" style=\\\"margin-left: 0px; margin-left: -38px;\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <ng-select [items]=\\\"nocTypes\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" placeholder=\\\"Select NOC Type\\\" [(ngModel)]=\\\"selectedNocType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                            </ng-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                        <label for=\\\"from-date\\\" class=\\\"control-label date-label\\\">NOC Cert.\\r\\n                                            Date</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\" style=\\\"margin-left: 0px; margin-left: -38px;\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" (bsValueChange)=\\\"changeNocDate($event)\\\" id=\\\"nocCertDate\\\" placeholder=\\\"Printing Date\\\" [bsValue]=\\\"bsValue\\\" name=\\\"nocCertDate\\\" [(ngModel)]=\\\"nocCertDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                    <!-- value {{selectedNocType | json}} -->\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                        <label for=\\\"from-date\\\" class=\\\"control-label date-label\\\">From</label>\\r\\n                                        <span style=\\\"color:red;\\\"> *</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"from-date\\\" placeholder=\\\"From Date\\\" name=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly #FromDate=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': FromDate.touched && FromDate.invalid }\\\" required>\\r\\n                                            <div *ngIf=\\\"FromDate.touched && FromDate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"FromDate.errors.required\\\">From Date is required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                        <label for=\\\"to-date\\\" class=\\\"control-label date-label\\\">To</label>\\r\\n                                        <span style=\\\"color:red;\\\">*</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"to-date\\\" placeholder=\\\"To Date\\\" [bsValue]=\\\"bsValue\\\" name=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly #ToDate=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': ToDate.touched && ToDate.invalid }\\\"\\r\\n                                                required>\\r\\n                                            <div *ngIf=\\\"ToDate.touched && ToDate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"ToDate.errors.required\\\">To Date is required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-embossed btn-primary\\\" (click)=\\\"openSelectProformaInvoiceModal(selectedNocType)\\\" [disabled]=\\\"!nocForm.valid\\\">Search</button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-embossed btn-danger\\\" (click)=\\\"resetDateRange()\\\">Reset</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                            <form #cForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"piNo.\\\" class=\\\"control-label\\\">PI No.</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"piNo.\\\" [(ngModel)]=\\\"proformaInvoiceNo\\\" name=\\\"piNo\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-4\\\" style=\\\"text-align:center;\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" (click)=\\\"captureSc()\\\" [disabled]=\\\"!cForm.valid || !viewCertificate \\\">\\r\\n                                            View Certificate</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"letterNo.\\\" class=\\\"control-label\\\">Letter No.(পত্র নং-)</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div style=\\\"display: flex; justify-content: space-between;\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"letterNoFixed.\\\" lang=\\\"bn\\\" xml:lang=\\\"bn\\\" [(ngModel)]=\\\"letterNoFixed\\\" name=\\\"letterNoFixed\\\" readonly>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"letterNoInput\\\" lang=\\\"bn\\\" xml:lang=\\\"bn\\\" name=\\\"letterNoInput\\\" [(ngModel)]=\\\"letterNoInput\\\" #LetterNo=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': LetterNo.touched && LetterNo.invalid }\\\" required>\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"LetterNo.touched && LetterNo.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"LetterNo.errors.required\\\">Letter No. is required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-4\\\"></div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"toAddress.\\\" class=\\\"control-label\\\">To (প্রাপক )</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toAddress.\\\" [(ngModel)]=\\\"toAddress\\\" name=\\\"toAddress\\\" readonly rows=\\\"5\\\"></textarea>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"sub\\\" class=\\\"control-label date-label\\\">Subject (বিষয় ) <span\\r\\n                                                style=\\\"color:red;\\\">*</span></label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"subject\\\" [(ngModel)]=\\\"subject\\\" name=\\\"subject\\\" rows=\\\"2\\\" #subjectValidation=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': subjectValidation.touched && subjectValidation.invalid }\\\" required>\\r\\n                                            </textarea>\\r\\n                                            <div *ngIf=\\\"subjectValidation.touched && subjectValidation.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"subjectValidation.errors.required\\\">Subject is required\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"submissionDate\\\" class=\\\"control-label \\\">Submission Date </label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"submissionDate\\\" [(ngModel)]=\\\"proformaSubmissionDate\\\" name=\\\"submissionDate\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"portOfLoading\\\" class=\\\"control-label\\\">Port of Loading</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"portOfLoading\\\" [(ngModel)]=\\\"portOfLoading\\\" name=\\\"portOfLoading\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\"></div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <label for=\\\"onulipiPort\\\" class=\\\"control-label\\\">অনুলিপি পোর্ট <span\\r\\n                                                style=\\\"color:red;\\\">*</span></label>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <ng-multiselect-dropdown [placeholder]=\\\"'অনুলিপি পোর্ট'\\\"\\r\\n                                                [data]=\\\"dropdownList\\\" [(ngModel)]=\\\"selectedItems\\\" name=\\\"onulipi\\\"\\r\\n                                                [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                                            </ng-multiselect-dropdown>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div> -->\\r\\n                            </form>\\r\\n                            <br>\\r\\n                            <!-- table data -->\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n                                        <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th style=\\\"width: 150px\\\">\\r\\n                                                        Description of Products\\r\\n                                                    </th>\\r\\n                                                    <th style=\\\"width: 150px\\\">\\r\\n                                                        PI No. & Date\\r\\n                                                    </th>\\r\\n                                                    <th style=\\\"width: 150px; text-align:center;\\\">\\r\\n                                                        Country of Origin\\r\\n                                                    </th>\\r\\n                                                    <th style=\\\"width: 150px\\\">\\r\\n                                                        Name & Address of Exporter\\r\\n                                                    </th>\\r\\n                                                    <th style=\\\"width: 150px\\\">\\r\\n                                                        Pack Size\\r\\n                                                    </th>\\r\\n                                                    <th style=\\\"width: 120px; text-align:right;\\\">\\r\\n                                                        Amount\\r\\n                                                    </th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr>\\r\\n                                                    <td style=\\\"width:150px\\\">\\r\\n                                                        <p *ngFor=\\\"let d of proformaInvoiceDtls\\\">{{d.prodName}} &nbsp; {{d.prodType}}</p>\\r\\n                                                        <br>\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"width:150px\\\">\\r\\n                                                        PI- {{proformaInvoiceNo}}\\r\\n                                                        <br> Dated-{{proformaDate}}\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"width:150px; text-align:center;\\\">\\r\\n                                                        {{countryOfOrigin}}\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"width:150px\\\">\\r\\n                                                        <ul type=\\\"none\\\" style=\\\"padding-left:5px;\\\">\\r\\n                                                            <li *ngFor=\\\"let d of proformaInvoiceDtls\\\">\\r\\n                                                                {{d.manufacturer}}\\r\\n                                                            </li>\\r\\n                                                        </ul>\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"width:150px\\\">\\r\\n                                                        <p *ngFor=\\\"let d of proformaInvoiceDtls\\\">{{d.packSize}}</p>\\r\\n                                                        <br>\\r\\n                                                    </td>\\r\\n                                                    <td style=\\\"width:120px; text-align:right;\\\">\\r\\n                                                        <p *ngFor=\\\"let d of proformaInvoiceDtls\\\">\\r\\n                                                            <span *ngIf=\\\"d.noOfUnits>0\\\">{{d.approvedAmount}}\\r\\n                                                                Unit\\r\\n                                                                <!-- <img style=\\\"height: 20px; width: 20px;\\\"   src=\\\"../../assets/img/plus-minus.jpg\\\"/> -->\\r\\n                                                                <!-- <img style=\\\"height: 16px; width: 16px;\\\"   src=\\\"https://img.icons8.com/ios/50/000000/plus-minus.png\\\"/>\\r\\n                                                                10% -->\\r\\n                                                            </span>\\r\\n                                                            <span *ngIf=\\\"d.totalAmount>0\\\">{{d.approvedAmount}}\\r\\n                                                                MT \\r\\n                                                                <!-- <img style=\\\"height: 16px; width: 16px;\\\"  src=\\\"https://img.icons8.com/ios/50/000000/plus-minus.png\\\"/>\\r\\n                                                                10% -->\\r\\n                                                            </span>\\r\\n                                                            <!-- <span *ngIf=\\\"d.approvedAmount zero\\\">{{d.approvedAmount}}\\r\\n                                                                MT</span>\\r\\n                                                            <ng-template #zero>\\r\\n                                                                0 MT\\r\\n                                                            </ng-template> -->\\r\\n                                                        </p>\\r\\n                                                        <br>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- table data end -->\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- modal area -->\\r\\n<ng-template #createOrEditModal>\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">\\r\\n                <span>Pick Proforma Invoice</span>\\r\\n            </h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modalRef.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\" style=\\\"margin: 5px 0px 5px 0px\\\">\\r\\n                <div class=\\\"col-md-1\\\"></div>\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                    <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"filterText\\\" placeholder=\\\"Search..\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-embossed btn-danger\\\" (click)=\\\"resetFilter()\\\">Reset</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <!--<Primeng-Datatable-Start>-->\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n                        <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 10px\\\">Actions</th>\\r\\n                                    <th style=\\\"width: 30px\\\">\\r\\n                                        PI No.\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 35px\\\">\\r\\n                                        Submission Date\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 35px\\\">\\r\\n                                        Importer Name\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 35px\\\">\\r\\n                                        Products\\r\\n                                    </th>\\r\\n                                    <th style=\\\"width: 35px\\\">\\r\\n                                        Port Of Entry\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let record of records | paginate: { itemsPerPage:5, currentPage: p} | filter: filterText\\\">\\r\\n                                    <td style=\\\"width: 10px\\\">\\r\\n                                        <div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                            <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"setAndSave(record)\\\">\\r\\n                                                Select\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:30px\\\">\\r\\n                                        {{record.proformaInvoiceNo}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:35px\\\">\\r\\n                                        {{record.submissionDate | date}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:35px\\\">\\r\\n                                        {{record.importerInfo.orgName}}\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:35px\\\">\\r\\n                                        <p *ngFor=\\\"let d of record.proformaInvoiceDtls\\\">{{d.prodName}}</p>\\r\\n                                        <br>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"width:35px\\\">\\r\\n                                        {{record.portOfEntry}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- <div class=\\\"content\\\"  > -->\\r\\n<div class=\\\"row\\\" id=\\\"content\\\" style=\\\"margin-left: auto;margin-right: auto; width: 850px;display: none;\\\">\\r\\n    <style>\\r\\n        * {\\r\\n            font-family: 'nikosh', 'arial', sans-serif;\\r\\n        }\\r\\n    </style>\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding-left: 20px;padding-right: 20px;\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"text-align: center\\\">\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"text-align: right; padding-right: 125px;\\\"><b>NOC NO.\\r\\n                </b><span>--------------------------</span></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-left: 5px;margin-top: 10px;margin-bottom: 10px;\\\">\\r\\n            <!-- <div style=\\\"float: left;\\\">\\r\\n                    <img style=\\\"height: 50px; width: 50px;\\\" src=\\\"../../../assets/img/logo/logo.png\\\" alt=\\\"DLS Logo\\\">\\r\\n                </div> -->\\r\\n\\r\\n            <!-- <img style=\\\"padding-left: 100px; height: 100px; width: 500px;\\\" src=\\\"../../assets/img/ReportHeader.png\\\" alt=\\\"Header\\\"> -->\\r\\n            <div style=\\\"text-align: center;\\\">\\r\\n                <img style=\\\"height: 50px;width: 50px;float: left;margin-left: 180px;;\\\" src=\\\"../../../assets/img/logo/govt-logo.png\\\" alt=\\\"DLS Logo\\\">\\r\\n                <img style=\\\"height: 50px; width: 50px; float: right;margin-right: 180px;\\\" src=\\\"../../../assets/img/logo/logo.png\\\" alt=\\\"DLS Logo\\\"> গণপ্রজাতন্ত্রী বাংলাদেশ সরকার\\r\\n                <br> প্রাণিসম্পদ অধিদপ্তর\\r\\n                <br> কৃষি খামার সড়ক, ফার্মগেট, ঢাকা-১২১৫\\r\\n                <br>\\r\\n                <div style=\\\"text-decoration: underline;\\\">www.dls.gov.bd</div>\\r\\n\\r\\n            </div>\\r\\n            <!-- <div  style=\\\"float: right;\\\">\\r\\n                    <img style=\\\"height: 50px;width: 50px;\\\" src=\\\"../../../assets/img/logo/govt-logo.png\\\" alt=\\\"DLS Logo\\\">\\r\\n                </div> -->\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 5px;margin-top: 15px;\\\">\\r\\n            <!-- <div class=\\\"col-md-1\\\"></div> -->\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <table class='table table-borderless' style=\\\"width:1160px;\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width:480px;text-align: left; \\\">\\r\\n                                পত্র নং - {{letterNoFixed}}.{{letterNoInput}}\\r\\n                            </th>\\r\\n                            <th style=\\\"text-align: right;\\\">\\r\\n                                তারিখ: {{printingDate}} ইং\\r\\n                            </th>\\r\\n                    </thead>\\r\\n                </table>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-6\\\">পত্র নং - {{letterNoFixed}}.{{letterNoInput}}</div>\\r\\n            <div class=\\\"col-md-4\\\">তারিখ: {{printingDate}} ইং</div> -->\\r\\n            <!-- <div class=\\\"col-md-1\\\"></div> -->\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 1px;\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\"> প্রাপক</div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <p style=\\\"margin-bottom: 5px;margin-top: 2px;\\\">\\r\\n                    {{orgName}}<br> {{toAddress}}\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\" style=\\\"padding-bottom: 5px;\\\"><b>বিষয় :</b> {{subject}}।</div>\\r\\n            <div class=\\\" col-md-1 \\\"></div>\\r\\n        </div>\\r\\n        <!-- <br> -->\\r\\n        <div class=\\\"row \\\">\\r\\n            <div class=\\\"col-md-1 \\\"></div>\\r\\n            <div class=\\\"col-md-10 \\\">\\r\\n                <p style=\\\"margin-bottom: 5px;margin-top: 5px;\\\">\\r\\n                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; উপর্যুক্ত বিষয়ে আপনার {{proformaSubmissionDate}} তারিখে আবেদনের প্রেক্ষিতে পশুপুষ্টি উপকরণ ও টেরিনারি ঔষুধ সামগ্রী আমদানির অনাপত্তি সনদ (NOC) প্রদান কমিটির {{approvalDate}} তারিখে সভার সিদ্ধান্ত মোতাবেক নিম্নবর্ণিত\\r\\n                    পণ্য পত্রে উল্লেখিত শর্তসাপেক্ষে {{portOfLoading}} থেকে আমদানির জন্য অনাপত্তির সনদ প্রদান করা হল।\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1 \\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row \\\" style=\\\"margin-bottom: 5px; \\\">\\r\\n            <div class=\\\"col-md-1 \\\"></div>\\r\\n            <div class=\\\"col-md-10 \\\">\\r\\n                <b style=\\\"text-decoration: underline; \\\">আমদানিযোগ্য পণ্য :</b>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1 \\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row \\\" style=\\\"margin-bottom: 5px; \\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-11\\\">\\r\\n                <!-- <table style=\\\"height: 150px; width:1160px; border-collapse: collapse; font-size: 11px; \\\"> -->\\r\\n                <!-- <table style=\\\"height: 150px; width:1160px; border-collapse: collapse;font-family: Arial, Helvetica, sans-serif;\\\"> -->\\r\\n                <table style=\\\" width:1160px; border-collapse: collapse;font-family: Arial, Helvetica, sans-serif;\\\">\\r\\n                    <thead style=\\\"border-collapse: collapse; \\\">\\r\\n                        <tr style=\\\"border-collapse: collapse; \\\">\\r\\n                            <th style=\\\"width: 50px; text-align: center; vertical-align: top ; border: 1px solid #696969; \\\">\\r\\n                                SL No.\\r\\n                            </th>\\r\\n                            <th style=\\\"width: 200px; text-align: center; vertical-align: top ; border: 1px solid #696969; \\\">\\r\\n                                Description of Products\\r\\n                            </th>\\r\\n                            <th style=\\\"width: 150px; text-align: center; vertical-align: top; border: 1px solid #696969; \\\">\\r\\n                                PI No. & Date\\r\\n                            </th>\\r\\n                            <th style=\\\"width: 80px; text-align:center; vertical-align: top; border: 1px solid #696969; \\\">\\r\\n                                Country of Origin\\r\\n                            </th>\\r\\n                            <th style=\\\"width: 150px; text-align: center; vertical-align: top; border: 1px solid #696969; \\\">\\r\\n                                Name & Address of Exporter\\r\\n                            </th>\\r\\n                            <th style=\\\"width: 100px; text-align:center; vertical-align: top; border: 1px solid #696969; \\\">\\r\\n                                Pack Size\\r\\n                            </th>\\r\\n                            <th style=\\\"width: 70px; text-align:center; vertical-align: top; border: 1px solid #696969; \\\">\\r\\n                                Amount\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody style=\\\"border-collapse: collapse; \\\">\\r\\n                        <tr style=\\\"border-collapse: collapse; \\\">\\r\\n                            <td style=\\\"width:50px; vertical-align: middle; text-align: center; border: 1px solid #696969; padding-left: 5px; \\\">\\r\\n                                <ol type=\\\"1 \\\" style=\\\"padding-left:15px;margin: 0px; \\\">\\r\\n                                    <li *ngFor=\\\"let d of proformaInvoiceDtls \\\">\\r\\n                                </ol>\\r\\n                            </td>\\r\\n                            <td style=\\\"width:200px; vertical-align: middle;text-align: left; border: 1px solid #696969; padding-left: 5px; \\\">\\r\\n                                <ul type=\\\"none \\\" style=\\\"padding-left:5px;list-style-type: none;margin: 0px; \\\">\\r\\n                                    <p *ngFor=\\\"let d of proformaInvoiceDtls \\\" style=\\\"margin: 0px;\\\">{{d.prodName}} &nbsp; {{d.prodType}}</p>\\r\\n                                </ul>\\r\\n                            </td>\\r\\n                            <td style=\\\"width:150px; vertical-align: middle; border: 1px solid #696969; padding-left: 5px; \\\">\\r\\n                                PI-{{proformaInvoiceNo}}\\r\\n                                <br>Dated-{{proformaDate}}\\r\\n                            </td>\\r\\n                            <td style=\\\"width:80px; text-align:center; vertical-align: middle; border: 1px solid #696969; padding-left: 5px; \\\">\\r\\n                                {{countryOfOrigin}}\\r\\n                            </td>\\r\\n                            <td style=\\\"width:150px; vertical-align: middle; border: 1px solid #696969; padding-left: 5px; \\\">\\r\\n                                <ul type=\\\"none \\\" style=\\\"padding-left:5px;list-style-type: none;margin: 0px; \\\">\\r\\n                                    <li *ngFor=\\\"let d of proformaInvoiceDtls \\\">\\r\\n                                        {{d.manufacturer}}\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </td>\\r\\n                            <td style=\\\"width: 100px;text-align:left; vertical-align: middle; border: 1px solid #696969; \\\">\\r\\n                                <ul type=\\\"none \\\" style=\\\"padding-left: 5px; list-style-type: none;margin: 0px;\\\">\\r\\n                                    <li *ngFor=\\\"let d of proformaInvoiceDtls \\\">{{d.packSize}}</li>\\r\\n                                </ul>\\r\\n                            </td>\\r\\n                            <td style=\\\"width:70px; text-align:center; vertical-align: middle; border: 1px solid #696969; padding-left: 5px; \\\">\\r\\n                                <p *ngFor=\\\"let d of proformaInvoiceDtls \\\" style=\\\"margin:0px;\\\">\\r\\n                                    <span *ngIf=\\\"d.noOfUnits>0\\\">{{d.approvedAmount}} Unit\\r\\n                <!-- <img style=\\\"height: 16px; width: 16px;\\\"  src=\\\"https://img.icons8.com/ios/50/000000/plus-minus.png\\\"/>\\r\\n                                        10%   -->\\r\\n                </span>\\r\\n                                    <span *ngIf=\\\"d.totalAmount>0\\\">{{d.approvedAmount}}\\r\\n                                        MT\\r\\n                                        <!-- <img style=\\\"height: 16px; width: 16px;\\\"  src=\\\"https://img.icons8.com/ios/50/000000/plus-minus.png\\\"/>\\r\\n                                        10% -->\\r\\n                                    </span>\\r\\n\\r\\n                                    <!-- <span *ngIf=\\\"d.approvedAmount zero\\\">{{d.approvedAmount}}\\r\\n                                        MT</span>\\r\\n                                    <ng-template #zero>\\r\\n                                        0 MT\\r\\n                                    </ng-template> -->\\r\\n                                </p>\\r\\n                                <br>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <b style=\\\"text-decoration: underline;\\\">শর্তাবলী :</b>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedNocId==1\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                ১. আমদানিতব্য পণ্য অবশ্যই পোল্ট্রি খাদ্য / পশু খাদ্য হিসাবে ব্যবহার করতে হবে। <br> ২. কমিটির সদস্য(গণ) ও ক্ষমতা প্রাপ্ত কর্মকর্তা কর্তৃক সময় সময় ওয়্যার হাউজ, ব্যবসা প্রতিষ্ঠান ও বাজার পরিদর্শনে এবং বিধি মোতাবেক ব্যাবস্থা গ্রহণে প্রয়োজনীয়\\r\\n                সহযোগিতা করতে হবে। <br> ৩. আমদানিতব্য পণ্য রিপ্যাকিং করা যাবে না এবং পোল্ট্রি খাদ্য / পশু খাদ্য ব্যতীত অন্য কোনভাবে ব্যবহার করা যাবে না। <br> ৪. এই ছাড়পত্রের মেয়াদ ইস্যুর তারিখ হতে ১(এক) বৎসর পর্যন্ত বলবৎ থাকবে। পণ্য আমদানি ও পণ্য খালাস\\r\\n                উক্ত ১(এক) বছরের মধ্যে করতে হবে। <br> ৫. সরকারের বিদ্যমান আইনের ব্যত্যয় ঘটলে অনাপত্তি সনদ(NOC) বাতিল বলে গণ্য হবে এবং আইনানুগ ব্যবস্থা গ্রহণ করা হবে। <br> ৬. পশুখাদ্য বিধিমালা-২০১৩ এবং আমদানি নীতি আদেশ ২০১৫-২০১৮ এর ধারা-১৭ তে উল্লেখিত\\r\\n                বিষয়াদি অনুসরণ করতে হবে। <br> ৭. সকল চালান জেলা প্রাণিসম্পদ কর্মকর্তা/তাঁর প্রতিনিধির উপস্থিতিতে নমুনা সংগ্রহপূর্বক পিআরটিসি, চট্টগ্রাম/সরকার অনুমোদিত ল্যাবে পরীক্ষাসমূহ (Bovine and Porcine) উপজাতের উপস্থিতি, মাইক্রোবায়োলোজিক্যাল পরীক্ষা,\\r\\n                ভারী ধাতুর উপস্থিতি ও ক্ষতিকারক এন্টিবায়োটিক, Pesticide, ক্ষতিকারক রাসায়নিক দ্রব্য উপস্থিতি) করাতে হবে। <br> ৮. পণ্য খালাসের পূর্বে ভেটেনারী হেলথ সার্টিফিকেট, শিপিং ডকুমেন্ট ও অন্যান্য কাগজপত্র প্রাণিসম্পদ অধিদপ্তর কর্তৃক যাচাই করে নিতে\\r\\n                হবে। <br> ৯. আমদানিকৃত পণ্যের প্যাকেটের গায়ে পণ্যের নাম, উৎস প্রাণীর নাম, পণ্যের উপাদানসমূহ (শতকরা হারসহ), কোম্পানী, উৎপাদনকারী দেশের নাম ও উৎপাদনের তারিখ স্পষ্টাকারে উল্লেখ থাকতে হবে।\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedNocId==2\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                ১. আমদানিতব্য পণ্য অবশ্যই গবাদিপশু ও পোল্ট্রির চিকিৎসা/রোগ প্রতিরোধে ব্যবহার করতে হবে। <br> ২. কমিটির সদস্য(গণ) ও ক্ষমতা প্রাপ্ত কর্মকর্তা কর্তৃক সময় সময় ওয়্যার হাউজ, ব্যবসা প্রতিষ্ঠান ও বাজার পরিদর্শনে এবং বিধি মোতাবেক ব্যাবস্থা গ্রহণে\\r\\n                প্রয়োজনীয় সহযোগিতা করতে হবে। <br> ৩. আমদানিতব্য পণ্য রিপ্যাকিং করা যাবে না এবং গবাদিপশু ও পোল্ট্রির চিকিৎসা/রোগ প্রতিরোধ ব্যতীত অন্য কোনভাবে ব্যবহার করা যাবে না। <br> ৪. এই ছাড়পত্রের মেয়াদ ইস্যুর তারিখ হতে ১(এক) বৎসর পর্যন্ত বলবৎ থাকবে।\\r\\n                <br> ৫. সরকারের বিদ্যমান আইনের ব্যত্যয় ঘটলে অনাপত্তি সনদ(NOC) বাতিল বলে গণ্য হবে এবং আইনানুগ ব্যবস্থা গ্রহণ করা হবে। <br> ৬. পশুখাদ্য বিধিমালা-২০১৩ এবং আমদানি নীতি আদেশ ২০১৫-২০১৮ এর ধারা-১৭ তে উল্লেখিত বিষয়াদি অনুসরণ করতে হবে। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedNocId==3\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                ১. কোন অবস্থাতেই MBM(Meat & Bone Meal) আমদানি করা যাবে না। <br> ২. নিজস্ব Manufacturing Plant/ম্যানুফ্যাকচারিং কোম্পানীর অনুমোদিত রপ্তানিকারক হতে Poultry Meal আমদানি করতে হবে। <br> ৩. আমদানিতব্য পোল্ট্রি মিলে ন্যূনতম ৫৫%-৬৫% প্রোটিন থাকতে\\r\\n                হবে।\\r\\n                <br> ৪. আমদানিতব্য পণ্য অবশ্যই পোল্ট্রি খাদ্য/ মৎস্য খাদ্য হিসাবে ব্যবহার করতে হবে। <br> ৫. অমদানীকৃত পণ্যের রপ্তানিকারক দেশের উপর্যুক্ত কর্তৃপক্ষ কর্তৃক প্রদত্ত তেজস্ক্রিয়তা পরীক্ষণ রিপোর্ট (প্রতি কিলোগ্রামে সিজিয়াম -১৩৭ এর মাত্রা) সুস্পষ্টভাবে\\r\\n                উল্লেখ থাকতে হবে। <br> ৬. আমদানিতব্য Poultry Meal সকল প্রকার এন্টিবায়োটিক মুক্ত হতে হবে। <br> ৭. আমদানিতব্য পণ্যটি ক্ষতিকারক ক্রোমিয়াম, টেনারি উপজাত ও মেলামিন মুক্ত হতে হবে। পণ্যটি Porcine and Bovine উপজাত মুক্ত হতে হবে। এ লক্ষে Porcine\\r\\n                and Bovine উপজাত উপস্থিতির পরীক্ষা করাতে হবে। <br> ৮. পণ্যটি ২৫/৫০/১০০ কেজি প্যাক সাইজের ব্যাগে আমদানি করতে হবে। <br> ৯. আমদানিকৃত পণ্যের প্যাকেটের গায়ে পণ্যের নাম, উৎস প্রাণীর নাম, পণ্য ও উপাদানসমূহ (শতকরা হারসহ ), কোম্পানি উৎপাদনকারী\\r\\n                দেশের নাম (Country of Origin) উৎপাদনের তারিখ স্পষ্টকারে উল্লেখ থাকতে হবে। <br> ১০. প্রত্যেক চালানের পণ্য খালাসের পূর্বে প্রত্যেক কন্টেইনার থেকে নমুনা সংগ্রহ করে তা মন্ত্রনালয় কর্তৃক অনুমোদিত পরীক্ষাগার হতে পরীক্ষা করতে হবে এবং কি কি উপাদান\\r\\n                খাদ্যে সংমিশ্রিত আছে তা শতকরা হারে রিপোর্টে উল্লেখ করতে হবে। <br> ১১. ল্যাবরেটরী পরীক্ষা রিপোর্ট ব্যতীত আমদানিকৃত কোন Poultry Meal বন্দর থেকে খালাস করা যাবে না। <br> ১২. পণ্য খালাসের পূর্বে পণ্যের আমদানিকৃত দেশ হতে ইস্যুকৃত Health Certificate-\\r\\n                প্রাণিসম্পদ অধিদপ্তর এর মাধ্যমে সঠিকতা যাচাই করতে হবে। <br> ১৩. আমদানিকৃত Poultry Meal অবশ্যই শতভাগ পোল্ট্রি উপজাত সংমিশ্রনে তৈরি করতে হবে। <br> ১৪. পণ্য খালাসের পূর্বে ভেটেনারি হেলথ সার্টিফিকেট, শিপিং ডকুমেন্ট ও অন্যান্য কাগজপত্র প্রাণিসম্পদ\\r\\n                অধিদপ্তর কর্তৃক যাচাই করে নিতে হবে। <br> ১৫. আমদানিকৃত পণ্য খালাসের পূর্বে গবাদিপশু ও শুকরের উপজাতের উপস্থিতি, মাইক্রোবায়োলোজিক্যাল পরীক্ষা, ভারী ধাতুর উপস্থিতি ও ক্ষতিকারক এন্টিবায়োটিক এর উপস্থিতি, জীবাণু মুক্ত এবং পুষ্টিমান সম্পর্কে\\r\\n                সরকার কর্তৃক অনুমোদিত ল্যাবরেটরিতে পরীক্ষাপূর্বক তার সনদপত্র অত্র দপ্তরে দাখিল করতে হবে। নমুনা সংগ্রহের সময় সংশ্লিষ্ট ডিএলও/ ইউএলও উপস্থিত থাকবেন। এ পরীক্ষা সংক্রান্ত যাবতীয় ব্যয়ভার আমদানিকারক/সত্ত্বাধিকারী বহন করবে। যদি পরীক্ষার ফলাফল\\r\\n                সন্তোষজনক না হয় তবে রপ্তানিকারক নিজ ব্যয়ে সংশ্লিষ্ট চালান ফিরত নিতে বাধ্য থাকবে। <br> ১৬. অনাপত্তি সনদ প্রদান কমিটির সদস্যগণ ও ক্ষমতাপ্রাপ্ত কর্মকর্তা কর্তৃক সময় সময় ওয়ার হাউজ, ব্যবসা প্রতিষ্ঠান ও বাজার পরিদর্শনপূর্বক বিধি মোতাবেক ব্যবস্থা\\r\\n                গ্রহণ করতে পারবে। <br> ১৭. আমদানিতব্য পণ্য রিপ্যাকিং করা যাবে না এবং পশুখাদ্য/ পোল্ট্রি খাদ্য ব্যতীত অন্য কোনভাবে ব্যবহার করা যাবে না। <br> ১৮. অনাপত্তি পত্রের মেয়াদ ইস্যুর তারিখ হতে ১(এক) বৎসর পর্যন্ত বলবৎ থাকবে। পণ্য আমদানি ও পণ্য খালাস\\r\\n                উক্ত ১(এক) বছরের মধ্যে করতে হবে। <br> ১৯. পণ্য আমদানি সংক্রান্ত কোন ভুল/অসত্য তথ্য প্রদানের দায়-দায়িত্ব আমদানিকারক প্রতিষ্ঠান বহন করবে। <br> ২০. যে দেশসমূহ হতে পণ্য আমদানি করা হবে সে সকল দেশে এ ধরণের পণ্য তৈরির কারখানা আছে কি-না, মহাপরিচালক,\\r\\n                প্রাণী সম্পদ অধিদপ্ততর বিষয়টি নিশ্চিত করে মন্ত্রণালয়কে অবহিত করবেন। <br> ২১. ভুল/অসত্য তথ্য প্রদানের পাশাপাশি কোন তথ্য গোপন করা হলে ইস্যুকৃত NOC বাতিলসহ উক্ত প্রতিষ্ঠানের অনুকূলে ভবিষ্যতে এ ধরণের NOC প্রদান স্থায়ীভাবে বন্ধ করতে হবে। <br>                ২২. উপরোক্ত শর্তাবলী পালনে ব্যর্থ হলে এবং এতদসংক্রান্ত অন্যান্য সরকারী বিধি বিধান অনুসরণ করা না হলে অত্র NOC বাতিল বলে গণ্য হবে।\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedNocId==4\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                ১. আমদানিতব্য পণ্য অবশ্যই পোল্ট্রি খাদ্য/পশু খাদ্য হিসেবে ব্যবহার করতে হবে। <br> ২. কমিটির সদস্য(গণ) ও ক্ষমতাপ্রাপ্ত কর্মকর্তা কর্তৃক সময় ওয়্যার হাউজ, ব্যবসা প্রতিষ্ঠান ও বাজার পরিদর্শনে এবং বিধি মোতাবেক ব্যবস্থা গ্রহণে প্রয়োজনীয় সহযোগিতা\\r\\n                করতে হবে। <br> ৩. আমদানিতব্য পণ্য রিপ্যাকিং করা যাবে না এবং পশুখাদ্য/ পোল্ট্রি খাদ্য ব্যতীত অন্য কোনভাবে ব্যবহার করা যাবে না। <br> ৪. এই ছাড়পত্রের মেয়াদ ইস্যুর তারিখ হতে ১(এক) বৎসর পর্যন্ত বলবৎ থাকবে। পণ্য আমদানি ও পণ্য খালাস উক্ত ১(এক)\\r\\n                বছরের মধ্যে করতে হবে। <br> ৫. সরকারের বিদ্যমান আইনের ব্যত্যয় ঘটলে অনাপত্তি সনদ(NOC) বাতিল বলে গণ্য হবে এবং আইনানুগ ব্যবস্থা গ্রহণ করা হবে। <br> ৬. পশুখাদ্য বিধিমালা-২০১৩ এবং আমদানি নীতি আদেশ ২০১৫-২০১৮ এর ধারা-১৭ তে উল্লেখিত বিষয়াদি অনুসরণ\\r\\n                করতে হবে।\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <!-- <br> -->\\r\\n        <!-- <br>\\r\\n        <br> -->\\r\\n        <div class=\\\"row\\\" style=\\\"padding-left: 840px;padding-top: 15px; text-align: center;\\\">\\r\\n            <!-- (ড. মো: আবু সুফিয়ান) <br> -->\\r\\n            <!-- সহকারী পরিচালক (প্রাণিস্বাস্থ্য ও প্রশাসন) <br> -->\\r\\n            উপপরিচালক (প্রাণিস্বাস্থ্য) <br> পক্ষে, মহাপরিচালক <br> প্রাণিসম্পদ অধিদপ্তর, বাংলাদেশ, ঢাকা। <br>\\r\\n            <!-- ফোন: ০২-৯১১৫৮৬৮ <br> -->\\r\\n            ফোন:০২-৫৮১৫৭২১১\\r\\n            <br>ই-মেইল:adhealthdls@gmail.com\\r\\n        </div>\\r\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"selectedNocId==1\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ, চট্টগ্রাম, বাংলাদেশ । <br>\\r\\n                ২. সহকারী পরিচালক, প্রাণীসম্পদ কয়ারেনটাইন স্টেশন, চট্টগ্রাম, বাংলাদেশ । <br>\\r\\n                ৩. সভাপতি, আহকাব, সেন্টার পয়েন্ট, ইউনিট -১২ ডি, ১৪/এ, তেজকুনীপাড়া, ফার্মগেট বা/এ, তেজগাঁও, ঢাকা\\r\\n                -১২২৫ । <br>\\r\\n                ৪. জেলা প্রাণীসম্পদ কর্মকর্তা, মানিকগঞ্জ । <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div> -->\\r\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"onulipiId==0\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ, চট্টগ্রাম, বাংলাদেশ । <br>\\r\\n                ২. সহকারী পরিচালক, প্রাণীসম্পদ কয়ারেনটাইন স্টেশন, চট্টগ্রাম, বাংলাদেশ । <br>\\r\\n                ৩. সভাপতি, আহকাব, সেন্টার পয়েন্ট, ইউনিট -১২ ডি, ১৪/এ, তেজকুনীপাড়া, ফার্মগেট বা/এ, তেজগাঁও, ঢাকা\\r\\n                -১২২৫ । <br>\\r\\n                ৪. জেলা প্রাণীসম্পদ কর্মকর্তা, নারায়ণগঞ্জ । <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div> -->\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==0\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ, চট্টগ্রাম, বাংলাদেশ । <br> ২. সহকারী পরিচালক, প্রাণীসম্পদ কয়ারেনটাইন স্টেশন, চট্টগ্রাম, বাংলাদেশ । <br> ৩. সভাপতি, আহকাব, সেন্টার পয়েন্ট, ইউনিট -১২ ডি, ১৪/এ, তেজকুনীপাড়া, ফার্মগেট বা/এ, তেজগাঁও, ঢাকা -১২২৫ । <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <!-- start onulipi -->\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==1\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ, চট্টগ্রাম। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, চট্টগ্রাম। <br> ৩. পরিচালক (ভারপ্রাপ্ত), পিআরটিসি, সিভাসু, চট্টগ্রাম। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==2\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, সেনামসজিদ স্থল বন্দর, শিবগঞ্জ, চাঁপাইনবাবগঞ্জ। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, চাঁপাইনবাবগঞ্জ। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==3\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ, বেনাপোল। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, যশোর। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==4\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ, মংলা। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, খুলনা। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==5\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, হিলি স্থল বন্দর, হাকিমপুর, দিনাজপুর। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, দিনাজপুর। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==6\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, দর্শনা স্থল বন্দর, হাকিমপুর, চুয়াডাঙ্গা। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, চুয়াডাঙ্গা। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==7\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. কমিশনার, কাস্টমস হাউজ,হযরত শাহজালাল আন্তর্জাতিক বিমানবন্দর, কুর্মিটোলা, ঢাকা। <br> ২. সহকারী পরিচালক, প্রাণিসম্পদ কোয়ারেন্টাইন স্টেশন,হযরত শাহজালাল আন্তর্জাতিক বিমানবন্দর, কুর্মিটোলা, ঢাকা। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==8\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, কাস্টমস হাউজ,বাংলাবান্ধা স্থলবন্দর, পঞ্চগড়। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, পঞ্চগড়। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==9\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, কাস্টমস হাউজ, বিরল স্থলবন্দর, দিনাজপুর। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, দিনাজপুর। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==10\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, কাস্টমস হাউজ, রোহানপুর স্থলবন্দর, চাঁপাইনবাবগঞ্জ। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, চাঁপাইনবাবগঞ্জ। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==11\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, কাস্টমস হাউজ, ভোমরা স্থলবন্দর, সাতক্ষীরা। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, সাতক্ষীরা। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"onulipiId==12\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div style=\\\"margin-bottom: 5px;\\\">\\r\\n                    <b style=\\\"text-decoration: underline;\\\">অনুলিপি:</b>\\r\\n                </div>\\r\\n                ১. সহকারী কমিশনার, কাস্টমস হাউজ, বুড়িমারী স্থলবন্দর, লালমনিরহাট। <br> ২. জেলা প্রাণিসম্পদ কর্মকর্তা, লালমনিরহাট। <br>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <br>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n     <div class=\\\"col-md-12\\\">\\r\\n       <h3>Access Denied</h3>\\r\\n     </div>\\r\\n   </div>  \\r\\n</div>\"","export default \"<div class=\\\"wrapper\\\">\\r\\n  <header class=\\\"main-header\\\">\\r\\n    <!-- Logo -->\\r\\n    <a [routerLink]=\\\"\\\" class=\\\"logo\\\">\\r\\n      <!-- mini logo for sidebar mini 50x50 pixels -->\\r\\n      <span class=\\\"logo-mini\\\"><b>N</b>MS</span>\\r\\n      <!-- logo for regular state and mobile devices -->\\r\\n      <span class=\\\"logo-lg\\\"><img src=\\\"../../assets/img/logo/logo.png\\\" height=\\\"35px;\\\" alt=\\\"logo\\\"><b> NMS</b></span>\\r\\n    </a>\\r\\n\\r\\n    <!-- Header Navbar: style can be found in header.less -->\\r\\n    <nav class=\\\"navbar navbar-static-top\\\">\\r\\n      <!-- Sidebar toggle button-->\\r\\n      <a href=\\\"javascript:void(0)\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n      </a>\\r\\n      <!-- Navbar Right Menu -->\\r\\n      <div class=\\\"navbar-custom-menu-left\\\">\\r\\n        <p>প্রাণিসম্পদ অধিদপ্তর, বাংলাদেশ\\t</p>\\r\\n      </div>\\r\\n          <div class=\\\"navbar-custom-menu\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <!-- Messages: style can be found in dropdown.less-->\\r\\n\\r\\n          <!-- Notifications: style can be found in dropdown.less -->\\r\\n\\r\\n          <!-- Tasks: style can be found in dropdown.less -->\\r\\n\\r\\n          <!-- User Account: style can be found in dropdown.less -->\\r\\n          <li class=\\\"dropdown user user-menu\\\">\\r\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n              <img src=\\\"assets/img/user-image.jpg\\\" class=\\\"user-image\\\" alt=\\\"User Image\\\" />\\r\\n              <span class=\\\"hidden-xs\\\">{{getUserName()}}</span>\\r\\n            </a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <!-- User image -->\\r\\n              <li class=\\\"user-header\\\">\\r\\n                <img src=\\\"assets/img/user-image.jpg\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\" />\\r\\n\\r\\n                <div style=\\\"color: white;\\\">\\r\\n                  <b>{{getUserName()}}</b> - {{getPosition()}}\\r\\n                  <h4 style=\\\"color: white;margin-top: 5px;;\\\">{{getOrganizationName()}}</h4>\\r\\n                </div>\\r\\n              </li>\\r\\n              <!-- Menu Body -->\\r\\n\\r\\n              <!-- Menu Footer-->\\r\\n              <li class=\\\"user-footer\\\">\\r\\n                <div class=\\\"pull-left\\\">\\r\\n                  <a (click)=\\\"checkPermission()\\\" class=\\\"btn btn-default btn-embossed btn-flat\\\">Profile</a>\\r\\n                </div>\\r\\n                <div class=\\\"pull-right\\\">\\r\\n                  <a (click)=\\\"logout()\\\" class=\\\"btn btn-default btn-embossed btn-flat\\\">Sign out</a>\\r\\n                </div>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <!-- Control Sidebar Toggle Button -->\\r\\n        </ul>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </header>\\r\\n\\r\\n  <aside class=\\\"main-sidebar\\\">\\r\\n    <!-- sidebar: style can be found in sidebar.less -->\\r\\n    <section class=\\\"sidebar\\\" style=\\\"height: auto;\\\">\\r\\n      <!-- Sidebar user panel -->\\r\\n      <!-- <div class=\\\"user-panel\\\">\\r\\n        <div class=\\\"pull-left image\\\">\\r\\n          <img src=\\\"../../assets/dist/img/user2-160x160.jpg\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"pull-left info\\\">\\r\\n          <p>Alexander Pierce</p>\\r\\n          <a href=\\\"#\\\"><i class=\\\"fa fa-circle text-success\\\"></i> Online</a>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <!-- search form -->\\r\\n\\r\\n      <!-- /.search form -->\\r\\n      <!-- sidebar menu: : style can be found in sidebar.less -->\\r\\n      <ul class=\\\"sidebar-menu tree\\\" data-widget=\\\"tree\\\">\\r\\n        <li class=\\\"header\\\">MAIN NAVIGATION</li>\\r\\n        <li class=\\\"active treeview menu-open\\\">\\r\\n          <a>\\r\\n            <i class=\\\"fa fa-th\\\"></i> <span>Navigation Menu</span>\\r\\n            <span class=\\\"pull-right-container\\\">\\r\\n              <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\r\\n            </span>\\r\\n          </a>\\r\\n          <ul class=\\\"treeview-menu\\\">\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Importer'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/importer']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Dashboard</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Admin' || getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/admin']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Dashboard</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Admin' || getUserRole()==='SA'\\\">\\r\\n                <a [routerLink]=\\\"['/portal/proformaapproval']\\\" class=\\\"nav-link\\\">\\r\\n                  <i class=\\\"far fa-circle\\\"></i> Proforma Invoice Approval</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Admin' || getUserRole()==='SA'\\\">\\r\\n                <a [routerLink]=\\\"['/portal/proformainvoiceapprovalreport']\\\" class=\\\"nav-link\\\">\\r\\n                  <i class=\\\"far fa-circle\\\"></i> Proforma Summary Report</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Admin' || getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/nocReport']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> NOC Certificate</a>\\r\\n          </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Admin' || getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/importermanagement']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Importer Management</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Importer' || getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/annualrequirement']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Annual Requirement</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Importer'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/proformainvoice']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Proforma Invoice</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Importer'\\\">\\r\\n                <a [routerLink]=\\\"['/portal/proformainvoicereport']\\\" class=\\\"nav-link\\\">\\r\\n                  <i class=\\\"far fa-circle\\\"></i> Proforma Invoice Report</a>\\r\\n              </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/employee']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Employees</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/rolemanagement']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Role Management</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"getUserRole()==='Admin' || getUserRole()==='SA'\\\">\\r\\n              <a [routerLink]=\\\"['/portal/currencyRate']\\\" class=\\\"nav-link\\\">\\r\\n                <i class=\\\"far fa-circle\\\"></i> Currency Conversion</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </section>\\r\\n    <!-- /.sidebar -->\\r\\n  </aside>\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"min-height: 550px;\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <footer class=\\\"main-footer\\\">\\r\\n    <div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.1</div>\\r\\n    <strong>Powered By © Square InformatiX Ltd. <a href=\\\"http://www.e-home2u.com/\\\"></a> ISO 9001:2015 Certified</strong>\\r\\n   <small> All rights reserved.</small>\\r\\n  </footer>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-success\\\">\\r\\n                <div class=\\\"box-header with-border\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h3 class=\\\"box-title\\\"><strong>Proforma Invoice Summary Report</strong></h3>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-1\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-primary\\\" (click)=\\\"getDateWiseProformaByImporter()\\\" [disabled]=\\\"!proformaInvoiceSearchForm.valid\\\"><i\\r\\nclass=\\\"fa fa-search\\\"></i>Search</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-1\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger\\\" (click)=\\\"resetDateFilter()\\\"><i\\r\\nclass=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" id=\\\"viewBtn\\\" name=\\\"viewBtn\\\" [disabled]=\\\"!proformaInvoiceSearchForm.valid\\\" (click)=\\\"viewCheckRes()\\\">\\r\\n            <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            View Report</button></div>\\r\\n\\r\\n                    </div>\\r\\n                    <!-- (click)=\\\"viewProformaSummaryReport(true)  -->\\r\\n                </div>\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form [formGroup]=\\\"proformaInvoiceSearchForm\\\">\\r\\n                                <div class=\\\"row\\\" style=\\\"padding-left: 40px;\\\">\\r\\n                                    <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                        <label for=\\\"from-date\\\" class=\\\"control-label date-label\\\">From</label>\\r\\n                                        <span style=\\\"color:red;\\\">*</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"from-date\\\" placeholder=\\\"From Date\\\" formControlName=\\\"fromDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                        <label for=\\\"to-date\\\" class=\\\"control-label date-label\\\">To</label>\\r\\n                                        <span style=\\\"color:red;\\\">*</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"to-date\\\" placeholder=\\\"To Date\\\" [bsValue]=\\\"bsValue\\\" formControlName=\\\"toDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\" style=\\\"margin: 5px;\\r\\n                          padding:0;    \\r\\n                          width:90px!important\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                                            <input id=\\\"pending\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"pending\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"pending\\\">&nbsp;&nbsp;&nbsp;&nbsp;Pending</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\" style=\\\"margin:5px;\\r\\n                        padding:0;    \\r\\n                        width:90px!important\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                                            <input id=\\\"approved\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"approved\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"approved\\\">&nbsp;&nbsp;&nbsp;&nbsp;Approved</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\" style=\\\"margin:5px;\\r\\n                          padding:0;    \\r\\n                          width:90px!important\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                                            <input id=\\\"rejected\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"rejected\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"rejected\\\">&nbsp;&nbsp;&nbsp;&nbsp;Rejected</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2\\\" style=\\\"margin:5px;padding:0;\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                                            <input id=\\\"rejected\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"approved/rejected\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"approved/rejected\\\">&nbsp;&nbsp;&nbsp;&nbsp;Approved/Rejected</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                              <label for=\\\"pending-approval\\\" class=\\\"control-label date-label\\\">Pending</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                               <input type=\\\"checkbox\\\" class=\\\"flat-red\\\" id=\\\"pending-approval\\\" formControlName=\\\"isPending\\\" />\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                <label for=\\\"approval-proforma\\\" class=\\\"control-label date-label\\\">Approved</label>\\r\\n                              </div>\\r\\n                              <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                                 <input type=\\\"checkbox\\\" class=\\\"flat-red\\\" id=\\\"approval-proforma\\\" formControlName=\\\"isApproved\\\" />\\r\\n                              </div> -->\\r\\n                                    <!-- <div class=\\\"col-md-1\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-primary\\\" (click)=\\\"getDateWiseProformaByImporter()\\\" [disabled]=\\\"!proformaInvoiceSearchForm.valid\\\"><i\\r\\n                        class=\\\"fa fa-search\\\"></i>Search</button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger\\\" (click)=\\\"resetDateFilter()\\\"><i\\r\\n                        class=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n                                    </div> -->\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- /.box-body -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box\\\" style=\\\"border-top: white;\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"margin: 5px 0px 5px 0px\\\">\\r\\n                        <div class=\\\"col-md-1\\\"></div>\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" (input)=\\\"getSearchFilterValue(searchText)\\\" placeholder=\\\"Search..\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-1\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n                                <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                                    <thead style=\\\"background-color: #3c8dbc;color:white;\\\">\\r\\n                                        <tr>\\r\\n                                            <!-- <th style=\\\"width: 100px;\\\">Action</th> -->\\r\\n                                            <th style=\\\"width: 200px;\\\">\\r\\n                                                Name of<br>the Importer\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 200px;\\\">\\r\\n                                                Name of<br>the Products\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 200px;\\\">\\r\\n                                                PINo.\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 200px;\\\">Submission Date</th>\\r\\n                                            <th style=\\\"width: 200px;\\\">PI <br>Amount<br>(Ton/Unit)</th>\\r\\n                                            <th style=\\\"width: 200px;\\\">Approved <br> Amount<br>(Ton/Unit)</th>\\r\\n                                            <th style=\\\"width: 200px;\\\">Approval<br> Status</th>\\r\\n                                            <th style=\\\"width: 200px;\\\">Country<br>of<br>Origin</th>\\r\\n                                            <th style=\\\"width: 200px;\\\">\\r\\n                                                Pack<br>Size\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 200px;\\\">\\r\\n                                                Type\\r\\n                                            </th>\\r\\n                                            <th style=\\\"width: 200px;\\\">PI<br>Price</th>\\r\\n                                            <th style=\\\"width: 200px;\\\">PI<br>Price(BDT)</th>\\r\\n                                            <th scope=\\\"col\\\">Approval<br>Price(BDT)</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let p of porformaInfos | paginate: { itemsPerPage:8, currentPage: p} | filter: searchText\\\">\\r\\n                                            <!-- <td>\\r\\n                           <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                             <button class=\\\"dropdown-toggle btn btn-sm btn-embossed btn-primary\\\"  dropdownToggle>\\r\\n                                 <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                             </button>\\r\\n                             <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                 <li>\\r\\n                                     <a href=\\\"javascript:;\\\"\\r\\n                                       >Details</a>\\r\\n                                 </li>\\r\\n                             </ul>\\r\\n                         </div>\\r\\n                          </td> -->\\r\\n                                            <td>\\r\\n                                                {{p.importerInfo.orgName}}\\r\\n                                                <br>\\r\\n                                                <small>{{p.importerInfo.address}}</small>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <div>\\r\\n                                                    <ul type=\\\"none\\\">\\r\\n                                                        <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.prodName}}</li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>{{p.proformaInvoiceNo}}</td>\\r\\n                                            <td>{{p.submissionDate | date}}</td>\\r\\n                                            <td>\\r\\n                                                <div>\\r\\n                                                    <ul type=\\\"none\\\">\\r\\n                                                        <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                                                            <span *ngIf=\\\"d.noOfUnits\\\">{{d.noOfUnits}} Unit</span>\\r\\n                                                            <br>\\r\\n                                                            <span *ngIf=\\\"d.totalAmount\\\">{{d.totalAmount}} MT</span>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <div>\\r\\n                                                    <ul type=\\\"none\\\">\\r\\n                                                        <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                                                            <div *ngIf=\\\"d.approvedAmount === null || undefined || '' \\\">\\r\\n                                                                <span>\\r\\n                                  --\\r\\n                                </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"d.approvedAmount == 0 \\\">\\r\\n                                                                <span>\\r\\n                                  --\\r\\n                                </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"d.approvedAmount\\\">\\r\\n                                                                <span *ngIf=\\\"d.noOfUnits>0\\\">{{d.approvedAmount}}\\r\\n                                  Unit</span>\\r\\n                                                                <span *ngIf=\\\"d.totalAmount>0\\\">{{d.approvedAmount}}\\r\\n                                  MT</span>\\r\\n                                                            </div>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <div>\\r\\n                                                    <ul type=\\\"none\\\">\\r\\n                                                        <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                                                            <div *ngIf=\\\"d.approvedAmount === null || undefined || '' \\\">\\r\\n                                                                <span class=\\\"m-badge  m-badge--warning m-badge--wide\\\">\\r\\n                                  Pending&nbsp;\\r\\n                                </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"d.approvedAmount == 0 \\\">\\r\\n                                                                <span class=\\\"m-badge  m-badge--danger m-badge--wide\\\">\\r\\n                                  Rejected&nbsp;\\r\\n                                </span>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"d.approvedAmount\\\">\\r\\n                                                                <span class=\\\"m-badge  m-badge--success m-badge--wide\\\">\\r\\n                                  Approved\\r\\n                                </span>\\r\\n                                                            </div>\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>{{p.countryOfOrigin}}</td>\\r\\n                                            <td>\\r\\n                                                <div>\\r\\n                                                    <ul type=\\\"none\\\">\\r\\n                                                        <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.packSize}}</li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <div>\\r\\n                                                    <ul type=\\\"none\\\">\\r\\n                                                        <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.prodType}}</li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align: right;min-width: 100px;\\\">\\r\\n                                                <ul type=\\\"none\\\">\\r\\n                                                    <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                                                        <div *ngIf=\\\"p.currency === 'Dollar'\\\">\\r\\n                                                            <span><i class=\\\"fas fa-dollar-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"p.currency === 'Pound'\\\">\\r\\n                                                            <span><i class=\\\"fas fa-pound-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"p.currency === 'Euro'\\\">\\r\\n                                                            <span><i class=\\\"fas fa-euro-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align: right;\\\">\\r\\n                                                <ul type=\\\"none\\\">\\r\\n                                                    <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                                                        Tk- {{d.totalPriceInBdt | number}}\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"text-align: right;\\\">\\r\\n                                                <ul type=\\\"none\\\">\\r\\n                                                    <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                                                        <div *ngIf=\\\"d.approvalStatus=== null || undefined || ''\\\">\\r\\n                                                            <span>\\r\\n                                --\\r\\n                              </span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"d.approvalStatus === false\\\">\\r\\n                                                            <span> --</span>\\r\\n                                                        </div>\\r\\n                                                        <div *ngIf=\\\"d.approvalStatus === true\\\">\\r\\n                                                            <span>Tk-\\r\\n                                <span\\r\\n                                  *ngIf=\\\"d.noOfUnits>0\\\">{{((d.approvedAmount * d.totalPriceInBdt) / d.noOfUnits) | number: '1.0-0'}}</span>\\r\\n                                                            <span *ngIf=\\\"d.totalAmount>0\\\">{{((d.approvedAmount * d.totalPriceInBdt) / d.totalAmount) | number: '1.0-0'}}</span>\\r\\n                                                            </span>\\r\\n                                                        </div>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\"","export default \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"box box-primary\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <h3 class=\\\"box-title\\\"><strong>Proforma Invoice Approval</strong></h3>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"box-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"proformaApprovalSearchForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-1\\\"></div>\\r\\n                  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                    <label for=\\\"from-date\\\" class=\\\"control-label date-label\\\">From</label>\\r\\n                    <span style=\\\"color:red;\\\">*</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"from-date\\\" placeholder=\\\"From Date\\\"\\r\\n                        formControlName=\\\"fromDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                    <label for=\\\"to-date\\\" class=\\\"control-label date-label\\\">To</label>\\r\\n                    <span style=\\\"color:red;\\\">*</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"to-date\\\" placeholder=\\\"To Date\\\" [bsValue]=\\\"bsValue\\\"\\r\\n                        formControlName=\\\"toDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                    <label for=\\\"pending-approval\\\" class=\\\"control-label date-label\\\">Pending</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"flat-red\\\" id=\\\"pending-approval\\\" formControlName=\\\"isPending\\\" />\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-embossed btn-primary\\\"\\r\\n                      (click)=\\\"GetDateWiseSubmittedProformaInvoice()\\\" [disabled]=\\\"!proformaApprovalSearchForm.valid\\\"><i\\r\\n                        class=\\\"fa fa-search\\\"></i>Search</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-embossed btn-danger\\\" (click)=\\\"resetDateRange()\\\"><i\\r\\n                        class=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /.box-body -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"box\\\" style=\\\"border-top: white;\\\">\\r\\n        <div class=\\\"box-body\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"margin: 5px 0px 5px 0px\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n              <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\"\\r\\n                placeholder=\\\"Search..\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n                <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                  <thead style=\\\"background-color: #3c8dbc;color:white;\\\">\\r\\n                    <tr>\\r\\n                      <th style=\\\"width: 100px;\\\">Action</th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Name <br>of the <br>Importer\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Name of <br>the Products\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        PINo.\\r\\n                       </th>\\r\\n                      <th style=\\\"width: 200px;\\\">Submission Date</th>\\r\\n                      <th style=\\\"width: 200px;\\\">PI<br> Amount<br>(Ton/Unit)</th>\\r\\n                      <th style=\\\"width: 200px;\\\">Approved <br> Amount<br>(Ton/Unit)</th>\\r\\n                      <th style=\\\"width: 150px;\\\">Approval Status</th>\\r\\n                      <th style=\\\"width: 200px;\\\">Country of <br>Origin</th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Pack <br>Size</th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Type\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 150px;text-align: center;\\\">\\r\\n                        PI <br>Price\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;text-align: center;\\\">\\r\\n                        PI <br>Price(BDT)\\r\\n                      </th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"text-align: center;\\\">\\r\\n                        Approval <br>Price(BDT)\\r\\n                      </th>\\r\\n\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr\\r\\n                      *ngFor=\\\"let p of porformaInfos | paginate: { itemsPerPage:8, currentPage: p} | filter: searchText\\\">\\r\\n                      <td>\\r\\n                        <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                          <button class=\\\"dropdown-toggle btn btn-sm btn-embossed btn-primary\\\" dropdownToggle>\\r\\n                            <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                          </button>\\r\\n                          <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                            <li>\\r\\n                              <a href=\\\"javascript:;\\\" (click)=\\\"showDetails(p)\\\">Details</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                              <a href=\\\"javascript:;\\\" (click)=\\\"proformaApproval(p)\\\">Approval</a>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{p.importerInfo.orgName}}<br>\\r\\n                        <small>{{p.importerInfo.address}}</small>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.prodName}}</li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>{{p.proformaInvoiceNo}}</td>\\r\\n                      <td>{{p.submissionDate | date}}</td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <!-- <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.totalAmount | number}} MT</li> -->\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                              <span *ngIf=\\\"d.noOfUnits\\\">{{d.noOfUnits | number}} Unit</span>\\r\\n                              <br>\\r\\n                              <span *ngIf=\\\"d.totalAmount\\\">{{d.totalAmount | number}} MT</span>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                              <div *ngIf=\\\"d.approvedAmount === null || undefined || '' \\\">\\r\\n                                <span>\\r\\n                                  --\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount == 0 \\\">\\r\\n                                <span>\\r\\n                                  --\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount\\\">\\r\\n                                <span *ngIf=\\\"d.noOfUnits>0\\\">{{d.approvedAmount}}\\r\\n                                  Unit</span>\\r\\n                                <span *ngIf=\\\"d.totalAmount>0\\\">{{d.approvedAmount}}\\r\\n                                  MT</span>\\r\\n                              </div>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                              <div *ngIf=\\\"d.approvedAmount === null || undefined || '' \\\">\\r\\n                                <span class=\\\"m-badge  m-badge--warning m-badge--wide\\\">\\r\\n                                  Pending&nbsp;\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount == 0 \\\">\\r\\n                                <span class=\\\"m-badge  m-badge--danger m-badge--wide\\\">\\r\\n                                  Rejected&nbsp;\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount\\\">\\r\\n                                <span class=\\\"m-badge  m-badge--success m-badge--wide\\\">\\r\\n                                  Approved\\r\\n                                </span>\\r\\n                              </div>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>{{p.countryOfOrigin}}</td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.packSize}}</li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.prodType}}</li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td style=\\\"text-align: right;min-width: 100px;\\\">\\r\\n                        <ul type=\\\"none\\\">\\r\\n                          <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                            <div *ngIf=\\\"p.currency === 'Dollar'\\\">\\r\\n                              <span><i class=\\\"fas fa-dollar-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"p.currency === 'Pound'\\\">\\r\\n                              <span><i class=\\\"fas fa-pound-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"p.currency === 'Euro'\\\">\\r\\n                              <span><i class=\\\"fas fa-euro-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                            </div>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </td>\\r\\n                      <td style=\\\"text-align: right;\\\">\\r\\n                        <ul type=\\\"none\\\">\\r\\n                          <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                            Tk- {{d.totalPriceInBdt | number}}\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </td>\\r\\n                      <td style=\\\"text-align: right;\\\">\\r\\n                        <ul type=\\\"none\\\">\\r\\n                          <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                            <div *ngIf=\\\"d.approvalStatus=== null || undefined || ''\\\">\\r\\n                              <span>\\r\\n                                --\\r\\n                              </span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"d.approvalStatus === false\\\">\\r\\n                              <span> --</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"d.approvalStatus === true\\\">\\r\\n                              <span>Tk-\\r\\n                                <span\\r\\n                                  *ngIf=\\\"d.noOfUnits>0\\\">{{((d.approvedAmount * d.totalPriceInBdt) / d.noOfUnits) | number: '1.0-0'}}</span>\\r\\n                                <span\\r\\n                                  *ngIf=\\\"d.totalAmount>0\\\">{{((d.approvedAmount * d.totalPriceInBdt) / d.totalAmount) | number: '1.0-0'}}</span>\\r\\n                              </span>\\r\\n                            </div>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n              <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #piInfoDetailModal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"modal-title pull-left\\\"><strong>Proforma Invoice Info</strong></h3>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\" style=\\\"padding: 20px 30px 20px 30px;\\\" style=\\\"background-color: #ecf0f5;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span>\\r\\n                  <p><b>Application No:</b> {{proformaInfo.applicationNo}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>PI No:</b> {{proformaInfo.proformaInvoiceNo}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Importer:</b> {{proformaInfo.importerInfo.orgName}},<small>\\r\\n                      {{proformaInfo.importerInfo.address}}</small></p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Submission Date:</b> {{proformaInfo.submissionDate | date}}</p>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span>\\r\\n                  <p><b>Country of Origin:</b> {{proformaInfo.countryOfOrigin}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Currency:</b> {{proformaInfo.currency}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Port of Loading:</b> {{proformaInfo.portOfLoading}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Port of Entry:</b> {{proformaInfo.portOfEntry}}</p>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>PI Scan File: </b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadPiFile(proformaInfo.piScan)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>Literature: </b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadLitFile(proformaInfo.litScan)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>Test Doc:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadTestFile(proformaInfo.testReport)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>Other Doc: </b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadOtherFile(proformaInfo.otherDoc)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n          <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n            <thead style=\\\"background-color: #3c8dbc;color:white;\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">Product Name</th>\\r\\n                <th scope=\\\"col\\\">Type</th>\\r\\n                <th scope=\\\"col\\\">H.S.Code</th>\\r\\n                <th scope=\\\"col\\\">Manufacturer</th>\\r\\n                <th scope=\\\"col\\\">Pack Size</th>\\r\\n                <th scope=\\\"col\\\">No. of Units</th>\\r\\n                <th scope=\\\"col\\\">Unit Price</th>\\r\\n                <th scope=\\\"col\\\">Amount (Ton)</th>\\r\\n                <th scope=\\\"col\\\">Rate (BDT)</th>\\r\\n                <th scope=\\\"col\\\">Total Price</th>\\r\\n                <th scope=\\\"col\\\">Total Price(BDT)</th>\\r\\n                <th scope=\\\"col\\\">Approved Amount</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let a of proformaInfo.proformaInvoiceDtls\\\">\\r\\n                <td>{{a.prodName}}</td>\\r\\n                <td>{{a.prodType}}</td>\\r\\n                <td>{{a.hsCode}}</td>\\r\\n                <td>{{a.manufacturer}}</td>\\r\\n                <td>{{a.packSize}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.noOfUnits | number}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.unitPrice}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.totalAmount | number}} MT</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.exchangeRate | number}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.totalPrice | number}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.totalPriceInBdt | number}}</td>\\r\\n                <td>\\r\\n                  <!-- {{a.approvedAmount === null || undefined || '' \\r\\n                  ? \\\"Pending\\\" \\r\\n                  : ( a.approvedAmount == 0 ? \\\"Rejected\\\" : a.approvedAmount+ \\\" MT\\\" )}} -->\\r\\n                  <span *ngIf=\\\"a.approvedAmount === null || undefined || ''\\\">Pending</span>\\r\\n                  <span *ngIf=\\\"a.approvedAmount == 0 \\\">Rejected</span>\\r\\n                  <span *ngIf=\\\"a.noOfUnits>0 &&  a.approvedAmount!=null\\\">{{a.approvedAmount+ \\\" Unit\\\" }}</span>\\r\\n                  <span *ngIf=\\\"a.totalAmount>0 && a.approvedAmount!=null\\\">{{a.approvedAmount+ \\\" MT\\\" }}</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-template #piApprovalModal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h3 class=\\\"modal-title pull-left\\\"><strong>Proforma Invoice Approval</strong></h3>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"destroyApprovalModal()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\" style=\\\"padding: 20px 30px 20px 30px;\\\" style=\\\"background-color: #ecf0f5;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span>\\r\\n                  <p><b>Application No:</b> {{proformaInfo.applicationNo}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>PI No:</b> {{proformaInfo.proformaInvoiceNo}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Importer:</b> {{proformaInfo.importerInfo.orgName}},<small>\\r\\n                      {{proformaInfo.importerInfo.address}}</small></p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Submission Date:</b> {{proformaInfo.submissionDate | date}}</p>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span>\\r\\n                  <p><b>Country of Origin:</b> {{proformaInfo.countryOfOrigin}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Currency:</b> {{proformaInfo.currency}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Port of Loading:</b> {{proformaInfo.portOfLoading}}</p>\\r\\n                </span>\\r\\n                <span>\\r\\n                  <p><b>Port of Entry:</b> {{proformaInfo.portOfEntry}}</p>\\r\\n                </span>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>DLS License: </b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadPiFile(proformaInfo.piScan)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>Literature: </b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadLitFile(proformaInfo.litScan)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>Test Doc:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadTestFile(proformaInfo.testReport)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <span><b>Other Doc: </b>\\r\\n                  <button class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\"\\r\\n                    (click)=\\\"DownloadOtherFile(proformaInfo.otherDoc)\\\"><i\\r\\n                      class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-1\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n          <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n            <thead style=\\\"background-color: #3c8dbc;color:white;\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">Action</th>\\r\\n                <th scope=\\\"col\\\">Product Name</th>\\r\\n                <th scope=\\\"col\\\">Manufacturer</th>\\r\\n                <th scope=\\\"col\\\">Pack Size</th>\\r\\n                <th scope=\\\"col\\\"> Requested Units</th>\\r\\n                <th scope=\\\"col\\\">Unit Price</th>\\r\\n                <th scope=\\\"col\\\">Requested Amount (Ton)</th>\\r\\n                <th scope=\\\"col\\\">Approval Status</th>\\r\\n                <th scope=\\\"col\\\">Approval Amount (Ton/Unit)</th>\\r\\n                <th scope=\\\"col\\\">Remarks</th>\\r\\n                <th scope=\\\"col\\\">PI Price(BDT)</th>\\r\\n                <th scope=\\\"col\\\">Approval Price(BDT)</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let a of proformaInfo.proformaInvoiceDtls\\\">\\r\\n                <td>\\r\\n                  <button type=\\\"button\\\"\\r\\n                    *ngIf=\\\"(a.approvalStatus === null || undefined || '') || a.approvalStatus === false\\\"\\r\\n                    class=\\\"btn btn-sm btn-embossed btn-primary btn-pro-approval\\\" (click)=\\\"approve(a)\\\">Approve</button>\\r\\n                  <button type=\\\"button\\\" *ngIf=\\\"a.approvalStatus\\\"\\r\\n                    class=\\\"btn btn-sm btn-embossed btn-primary btn-pro-approval\\\" (click)=\\\"approve(a)\\\">Update\\r\\n                    Approve</button>\\r\\n                  <button *ngIf=\\\"a.approvalStatus === null || undefined || '' \\\" type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-embossed btn-danger btn-pro-approval\\\"\\r\\n                    (click)=\\\"reject(a)\\\">&nbsp;&nbsp;Reject&nbsp;&nbsp;</button>\\r\\n                  <button *ngIf=\\\"a.approvalStatus\\\" type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-embossed btn-danger btn-pro-approval\\\" (click)=\\\"reject(a)\\\">Cancel\\r\\n                    Approve&nbsp;</button>\\r\\n                </td>\\r\\n                <td>{{a.prodName}}</td>\\r\\n                <td>{{a.manufacturer}}</td>\\r\\n                <td>{{a.packSize}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.noOfUnits}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.unitPrice}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.totalAmount}} MT</td>\\r\\n                <td style=\\\"text-align: right;\\\">\\r\\n                  <div *ngIf=\\\"a.approvalStatus === null || undefined || '' \\\">\\r\\n                    <span class=\\\"m-badge  m-badge--warning m-badge--wide\\\">\\r\\n                      Pending\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"a.approvalStatus === false \\\">\\r\\n                    <span class=\\\"m-badge  m-badge--danger m-badge--wide\\\">\\r\\n                      Rejected\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"a.approvalStatus\\\">\\r\\n                    <span class=\\\"m-badge  m-badge--success m-badge--wide\\\">\\r\\n                      Approved\\r\\n                    </span>\\r\\n                  </div>\\r\\n\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"a.approvedAmount\\\"\\r\\n                    (input)=\\\"apvAmtValidate(a.approvedAmount,a.noOfUnits,a.totalAmount)\\\" />\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"apvAmtValidationErrorMsg\\\">Approve amount exceeds Requested\\r\\n                    Amount-\\r\\n                    <span *ngIf=\\\"a.noOfUnits>0\\\"> {{a.noOfUnits}}</span>\\r\\n                    <span *ngIf=\\\"a.totalAmount>0\\\"> {{a.totalAmount}}</span>\\r\\n                  </div>\\r\\n\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"a.remarks\\\" />\\r\\n                </td>\\r\\n                <td style=\\\"text-align: right;\\\">{{a.totalPriceInBdt | number}}</td>\\r\\n                <td style=\\\"text-align: right;\\\">\\r\\n                  <span\\r\\n                    *ngIf=\\\"a.noOfUnits>0\\\">{{((a.approvedAmount * a.totalPriceInBdt) / a.noOfUnits) | number: '1.0-0'}}</span>\\r\\n                  <span\\r\\n                    *ngIf=\\\"a.totalAmount>0\\\">{{((a.approvedAmount * a.totalPriceInBdt) / a.totalAmount) | number: '1.0-0'}}</span>\\r\\n\\r\\n                  <!-- <span>Tk-\\r\\n                    </span> -->\\r\\n                  <!-- {{((a.approvedAmount * a.totalPriceInBdt) / a.totalAmount) | number: '1.0-0'}} -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\"","export default \"<div class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"box box-success\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <h3 class=\\\"box-title\\\"><strong>Proforma Invoice Summery Report</strong></h3>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary blue\\\" style=\\\"float: right;\\\"\\r\\n            (click)=\\\"viewProformaSummaryReport()\\\">\\r\\n            <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            View Report</button>\\r\\n        </div>\\r\\n        <div class=\\\"box-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <form [formGroup]=\\\"proformaInvoiceSearchForm\\\">\\r\\n                <div class=\\\"row\\\" style=\\\"padding-left: 40px;\\\">\\r\\n                  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                    <label for=\\\"from-date\\\" class=\\\"control-label date-label\\\">From</label>\\r\\n                    <span style=\\\"color:red;\\\">*</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"from-date\\\" placeholder=\\\"From Date\\\"\\r\\n                        formControlName=\\\"fromDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                    <label for=\\\"to-date\\\" class=\\\"control-label date-label\\\">To</label>\\r\\n                    <span style=\\\"color:red;\\\">*</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"to-date\\\" placeholder=\\\"To Date\\\" [bsValue]=\\\"bsValue\\\"\\r\\n                        formControlName=\\\"toDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" readonly>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\" style=\\\"margin: 5px;\\r\\n                        padding:0;    \\r\\n                        width:90px!important\\\">\\r\\n                    <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                      <input id=\\\"pending\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"pending\\\" name=\\\"status\\\"\\r\\n                        formControlName=\\\"status\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"pending\\\">&nbsp;&nbsp;&nbsp;&nbsp;Pending</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\" style=\\\"margin:5px;\\r\\n                      padding:0;    \\r\\n                      width:90px!important\\\">\\r\\n                    <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                      <input id=\\\"approved\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"approved\\\" name=\\\"status\\\"\\r\\n                        formControlName=\\\"status\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"approved\\\">&nbsp;&nbsp;&nbsp;&nbsp;Approved</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\" style=\\\"margin:5px;\\r\\n                        padding:0;    \\r\\n                        width:90px!important\\\">\\r\\n                    <div class=\\\"custom-control custom-radio\\\" style=\\\"padding-top: 4px;\\\">\\r\\n                      <input id=\\\"rejected\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" value=\\\"rejected\\\" name=\\\"status\\\"\\r\\n                        formControlName=\\\"status\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"rejected\\\">&nbsp;&nbsp;&nbsp;&nbsp;Rejected</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                            <label for=\\\"pending-approval\\\" class=\\\"control-label date-label\\\">Pending</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                             <input type=\\\"checkbox\\\" class=\\\"flat-red\\\" id=\\\"pending-approval\\\" formControlName=\\\"isPending\\\" />\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                              <label for=\\\"approval-proforma\\\" class=\\\"control-label date-label\\\">Approved</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-1\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                               <input type=\\\"checkbox\\\" class=\\\"flat-red\\\" id=\\\"approval-proforma\\\" formControlName=\\\"isApproved\\\" />\\r\\n                            </div> -->\\r\\n                  <div class=\\\"col-md-1\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-success\\\"\\r\\n                      (click)=\\\"getDateWiseProformaByImporter()\\\" [disabled]=\\\"!proformaInvoiceSearchForm.valid\\\"><i\\r\\n                        class=\\\"fa fa-search\\\"></i>Search</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-1\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger\\\" (click)=\\\"resetDateFilter()\\\"><i\\r\\n                        class=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /.box-body -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"box\\\" style=\\\"border-top: white;\\\">\\r\\n        <div class=\\\"box-body\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"margin: 5px 0px 5px 0px\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n              <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\"\\r\\n                placeholder=\\\"Search..\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #dfe4e7; width: 100%;\\\">\\r\\n                <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                  <thead\\r\\n                    style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));\\\">\\r\\n                    <tr>\\r\\n                      <!-- <th style=\\\"width: 100px;\\\">Action</th> -->\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Name<br>of<br>the<br>Importer\\r\\n                       </th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Name <br>of<br>the<br>Products\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        PINo.\\r\\n                       </th>\\r\\n                      <th style=\\\"width: 200px;\\\">Submission <br>Date</th>\\r\\n                      <th style=\\\"width: 200px;\\\">PI <br>Amount<br>(Ton/Unit)</th>\\r\\n                      <th style=\\\"width: 200px;\\\">Approved<br> Amount<br>(Ton/Unit)</th>\\r\\n                      <th style=\\\"width: 200px;\\\">Approval<br> Status</th>\\r\\n                      <th style=\\\"width: 200px;\\\">Country<br>of<br>Origin</th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Pack<br>Size \\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;\\\">\\r\\n                        Type \\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;\\\">PI<br>Price\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 200px;\\\">PI<br>Price(BDT)</th>\\r\\n                      <th scope=\\\"col\\\">Approval<br>Price(BDT)</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr\\r\\n                      *ngFor=\\\"let p of porformaInfos | paginate: { itemsPerPage:8, currentPage: p} | filter: searchText\\\">\\r\\n                      <!-- <td>\\r\\n                        <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                          <button class=\\\"dropdown-toggle btn btn-sm btn-embossed btn-success\\\" dropdownToggle>\\r\\n                            <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                          </button>\\r\\n                          <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                            <li>\\r\\n                              <a href=\\\"javascript:;\\\">Details</a>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td> -->\\r\\n                      <td>\\r\\n                        {{p.importerInfo.orgName}}\\r\\n                        <br>\\r\\n                        <small>{{p.importerInfo.address}}</small>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.prodName}}</li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>{{p.proformaInvoiceNo}}</td>\\r\\n                      <td>{{p.submissionDate | date}}</td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                              <span *ngIf=\\\"d.totalAmount\\\">{{d.totalAmount}} MT </span>\\r\\n                              <br>\\r\\n                              <span *ngIf=\\\"d.noOfUnits\\\">{{d.noOfUnits}} Unit </span>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                              <div *ngIf=\\\"d.approvedAmount === null || undefined || '' \\\">\\r\\n                                <span>\\r\\n                                  --\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount == 0 \\\">\\r\\n                                <span>\\r\\n                                  --\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount\\\">\\r\\n                                <span *ngIf=\\\"d.noOfUnits>0\\\">{{d.approvedAmount}}\\r\\n                                  Unit</span>\\r\\n                                <span *ngIf=\\\"d.totalAmount>0\\\">{{d.approvedAmount}}\\r\\n                                  MT</span>\\r\\n                              </div>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                              <div *ngIf=\\\"d.approvedAmount === null || undefined || '' \\\">\\r\\n                                <span class=\\\"m-badge  m-badge--warning m-badge--wide\\\">\\r\\n                                  Pending&nbsp;\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount == 0 \\\">\\r\\n                                <span class=\\\"m-badge  m-badge--danger m-badge--wide\\\">\\r\\n                                  Rejected&nbsp;\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"d.approvedAmount\\\">\\r\\n                                <span class=\\\"m-badge  m-badge--success m-badge--wide\\\">\\r\\n                                  Approved\\r\\n                                </span>\\r\\n                              </div>\\r\\n                            </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>{{p.countryOfOrigin}}</td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.packSize}}</li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div>\\r\\n                          <ul type=\\\"none\\\">\\r\\n                            <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">{{d.prodType}}</li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                      <td style=\\\"text-align: right;min-width: 100px;\\\">\\r\\n                        <ul type=\\\"none\\\">\\r\\n                          <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                            <div *ngIf=\\\"p.currency === 'Dollar'\\\">\\r\\n                              <span><i class=\\\"fas fa-dollar-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"p.currency === 'Pound'\\\">\\r\\n                              <span><i class=\\\"fas fa-pound-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"p.currency === 'Euro'\\\">\\r\\n                              <span><i class=\\\"fas fa-euro-sign fa-xs\\\"></i> {{d.totalPrice | number}}</span>\\r\\n                            </div>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </td>\\r\\n                      <td style=\\\"text-align: right;\\\">\\r\\n                        <ul type=\\\"none\\\">\\r\\n                          <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                            Tk- {{d.totalPriceInBdt | number}}\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </td>\\r\\n                      <td style=\\\"text-align: right;\\\">\\r\\n                        <ul type=\\\"none\\\">\\r\\n                          <li *ngFor=\\\"let d of p.proformaInvoiceDtls\\\">\\r\\n                            <div *ngIf=\\\"d.approvalStatus=== null || undefined || ''\\\">\\r\\n                              <span>\\r\\n                                --\\r\\n                              </span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"d.approvalStatus === false\\\">\\r\\n                              <span> --</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"d.approvalStatus === true\\\">\\r\\n                              <span>Tk-\\r\\n                                <span\\r\\n                                  *ngIf=\\\"d.noOfUnits>0\\\">{{((d.approvedAmount * d.totalPriceInBdt) / d.noOfUnits) | number: '1.0-0'}}</span>\\r\\n                                <span\\r\\n                                  *ngIf=\\\"d.totalAmount>0\\\">{{((d.approvedAmount * d.totalPriceInBdt) / d.totalAmount) | number: '1.0-0'}}</span>\\r\\n                              </span>\\r\\n                            </div>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n              <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-success\\\">\\r\\n                <div class=\\\"box-header with-border\\\">\\r\\n                    <h3 class=\\\"box-title\\\"><strong>Proforma invoice Submission</strong></h3>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success btn-embossed btn-add-product\\\" style=\\\"float: right;\\\" (click)=\\\"getAllProformaInvoiceMstByUser()\\\"><i class=\\\"fa fa-search\\\" style=\\\"color: white;\\\"></i>Search</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-embossed btn-add-product\\\" style=\\\"float: right;  margin-right: 5px;\\\" (click)=\\\"viewProformaReport()\\\" [disabled]=\\\"piMstId === null || piMstId === undefined\\\"><i class=\\\"fa fa-file-pdf\\\"\\r\\n              style=\\\"color: white;\\\"></i>Print Report</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info btn-embossed btn-add-product\\\" style=\\\"float: right;\\\" (click)=\\\"confirmProformaInvoiceSubmission()\\\" [disabled]=\\\"submitButtonDisable || !proformaNoValidity\\\"><i\\r\\n              class=\\\"fa fa-save\\\"></i> Submit</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-embossed btn-add-product\\\" style=\\\"float: right;\\\" (click)=\\\"confirmProformaInvoiceSaveOrUpdate()\\\" [disabled]=\\\"!proformaInvoiceForm.valid || updateBtnDisable || !proformaNoValidity\\\"><i\\r\\n              class=\\\"fa fa-save\\\"></i> {{saveButtonTitle}}</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger btn-add-product\\\" style=\\\"float: right;\\\" (click)=\\\"resetPage()\\\"><i class=\\\"fa fa-refresh\\\" style=\\\"color: white;\\\"></i>Reset</button>\\r\\n                </div>\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <fieldset class=\\\"scheduler-border\\\">\\r\\n                        <legend class=\\\"scheduler-border\\\">Proforma Information</legend>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <form [formGroup]=\\\"proformaInvoiceForm\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"application-no\\\" class=\\\"control-label required\\\">Application No</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"application-no\\\" placeholder=\\\"auto generated\\\" formControlName=\\\"applicationNo\\\" readonly>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div class=\\\"input-group\\\">\\r\\n                                                    <label for=\\\"proforma-invoice-no\\\" class=\\\"control-label required\\\">Proforma Invoice No.</label>\\r\\n                                                    <span style=\\\"color:red;\\\">*</span>\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"proforma-invoice-no\\\" placeholder=\\\"\\\" (blur)=\\\"isUsernameAvailable()\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('proformaInvoiceNo').errors && proformaInvoiceForm.get('proformaInvoiceNo').touched}\\\" formControlName=\\\"proformaInvoiceNo\\\">\\r\\n                                                    <div class=\\\"input-group-append input-group-text\\\">\\r\\n                                                        <span id=\\\"proformaInvoiceNo-spinner\\\" *ngIf=\\\"proformaNoSpinner && !(proformaInvoiceForm.get('proformaInvoiceNo').hasError('required') || proformaInvoiceForm.get('proformaInvoiceNo').hasError('pattern') || proformaInvoiceForm.get('proformaInvoiceNo').hasError('maxlength'))\\\"\\r\\n                                                            class=\\\"fas fa-1x fa-spinner fa-pulse\\\" style=\\\"color:#54B575;margin-left: 3px;\\\"></span>\\r\\n                                                        <span class=\\\"fa fa-check proformaInvoiceNo-unique-check-success\\\" *ngIf=\\\"proformaNoOk && !(proformaInvoiceForm.get('proformaInvoiceNo').hasError('required') || proformaInvoiceForm.get('proformaInvoiceNo').hasError('pattern') || proformaInvoiceForm.get('proformaInvoiceNo').hasError('maxlength'))\\\"\\r\\n                                                            id=\\\"proformaInvoiceNo-unique-check-success\\\" style=\\\"color:green;margin-left: 3px;\\\"></span>\\r\\n                                                        <span class=\\\"fa fa-times proformaInvoiceNo-unique-check-error\\\" *ngIf=\\\"proformaNoNotOk && !(proformaInvoiceForm.get('proformaInvoiceNo').hasError('required') || proformaInvoiceForm.get('proformaInvoiceNo').hasError('pattern') || proformaInvoiceForm.get('proformaInvoiceNo').hasError('maxlength'))\\\"\\r\\n                                                            id=\\\"proformaInvoiceNo-unique-check-success\\\" style=\\\"color:red;margin-left: 3px;\\\"></span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('proformaInvoiceNo').hasError('required')\\r\\n                              && proformaInvoiceForm.get('proformaInvoiceNo').touched\\\">Proforma Invoice No. required\\r\\n                                                </div>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"(!proformaInvoiceForm.get('proformaInvoiceNo').hasError('required')\\r\\n                        && proformaInvoiceForm.get('proformaInvoiceNo').touched) && !proformaNoValidity\\\">Proforma Invoice no. not available</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"proforma-date\\\" class=\\\"control-label required\\\">Proforma Date</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"proforma-date\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('proformaDate').errors && proformaInvoiceForm.get('proformaDate').touched}\\\" formControlName=\\\"proformaDate\\\">\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('proformaDate').hasError('required')\\r\\n                          && proformaInvoiceForm.get('proformaDate').touched\\\">Proforma Date is required </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"submission-date\\\" class=\\\"control-label required\\\">Submission Date</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"submission-date\\\" placeholder=\\\"auto generated\\\" formControlName=\\\"submissionDate\\\" readonly>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Country of Origin</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"countryOfOrigin\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('countryOfOrigin').errors && proformaInvoiceForm.get('countryOfOrigin').touched}\\\" formControlName=\\\"countryOfOrigin\\\">\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('countryOfOrigin').hasError('required')\\r\\n                              && proformaInvoiceForm.get('countryOfOrigin').touched\\\">Country of Origin required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"currency\\\">Select Currency</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <select id=\\\"currency\\\" class=\\\"form-control\\\" formControlName=\\\"currency\\\" (change)=\\\"currencySelectChange()\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('currency').errors && proformaInvoiceForm.get('currency').touched}\\\">\\r\\n                          <option value=\\\"\\\" selected>select</option>\\r\\n                          <option *ngFor=\\\"let u of currencies\\\" [value]=\\\"u.currency\\\">{{u.currency}}</option>\\r\\n                        </select>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('currency').hasError('required')\\r\\n                           && proformaInvoiceForm.get('currency').touched\\\">Currency required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"port-of-loading\\\" class=\\\"control-label required\\\">Port of Loading</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"port-of-loading\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('portOfLoading').errors && proformaInvoiceForm.get('portOfLoading').touched}\\\" formControlName=\\\"portOfLoading\\\">\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('portOfLoading').hasError('required')\\r\\n                              && proformaInvoiceForm.get('portOfLoading').touched\\\">Port of Loading required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"port-of-entry\\\" class=\\\"control-label required\\\">Port of Entry</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <ng-select [items]=\\\"portOfEntrys\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\" placeholder=\\\"Select Port of Entry\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('portOfEntry').errors && proformaInvoiceForm.get('portOfEntry').touched}\\\" formControlName=\\\"portOfEntry\\\">\\r\\n                                                </ng-select>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('portOfEntry').hasError('required')\\r\\n                              && proformaInvoiceForm.get('portOfEntry').touched\\\">Port of Entry required</div>\\r\\n                                                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"port-of-entry\\\" \\r\\n                              [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('portOfEntry').errors && proformaInvoiceForm.get('portOfEntry').touched}\\\"\\r\\n                              formControlName= \\\"portOfEntry\\\">\\r\\n                              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('portOfEntry').hasError('required')\\r\\n                              && proformaInvoiceForm.get('portOfEntry').touched\\\">Port of Entry required</div>       -->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"irc-license-scan-copy\\\">Scan Copy of PI</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"irc-license-scan-copy\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('piScan').errors && proformaInvoiceForm.get('piScan').touched}\\\" (change)=\\\"onSelectedPiFile($event)\\\" formControlName=\\\"piScan\\\">\\r\\n                                                <small class=\\\"help-block\\\" style=\\\"color: #888889\\\">File size (Max 1MB) in PDF Format </small>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('piScan').hasError('required')\\r\\n                           && proformaInvoiceForm.get('piScan').touched\\\">PI Scan Copy required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"lit-scan-copy\\\">Scan Copy of Lit/Brochure</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"lit-scan-copy\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('litScan').errors && proformaInvoiceForm.get('litScan').touched}\\\" (change)=\\\"onSelectedLitFile($event)\\\" formControlName=\\\"litScan\\\">\\r\\n                                                <small class=\\\"help-block\\\" style=\\\"color: #888889\\\">File size (Max 1MB) in PDF Format </small>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('litScan').hasError('required')\\r\\n                           && proformaInvoiceForm.get('litScan').touched\\\">Literature Scan required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"irc-license-scan-copy\\\">Test Report</label>\\r\\n                                                <!-- <span style=\\\"color:red;\\\">*</span> -->\\r\\n                                                <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"irc-license-scan-copy\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('testReport').errors && proformaInvoiceForm.get('testReport').touched}\\\" (change)=\\\"onSelectedTestFile($event)\\\" formControlName=\\\"testReport\\\">\\r\\n                                                <small class=\\\"help-block\\\" style=\\\"color: #888889\\\">File size (Max 1MB) in PDF Format </small>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('testReport').hasError('required')\\r\\n                           && proformaInvoiceForm.get('testReport').touched\\\">Test Report required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"other-doc\\\">Other Document</label>\\r\\n                                                <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"other-doc\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceForm.get('otherDoc').errors && proformaInvoiceForm.get('otherDoc').touched}\\\" (change)=\\\"onSelectedOtherDocFile($event)\\\" formControlName=\\\"otherDoc\\\">\\r\\n                                                <small class=\\\"help-block\\\" style=\\\"color: #888889\\\">File size (Max 1MB) in PDF Format </small>\\r\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceForm.get('otherDoc').hasError('required')\\r\\n                           && proformaInvoiceForm.get('otherDoc').touched\\\">Other Doc required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box\\\" style=\\\"border-top: white;\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <div style=\\\"margin: 5px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-success btn-add-product\\\" [disabled]=\\\"!proformaInvoiceForm.valid\\\" (click)=\\\"openProformaDtlModal('add')\\\">\\r\\n              <i class=\\\"fa fa-plus\\\"></i> Add Product</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #bed2c9\\\">\\r\\n                        <table class=\\\"table table-bordered table-hover table-striped\\\">\\r\\n                            <thead style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));\\\">\\r\\n                                <tr>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 11%\\\">Action</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Product<br>Name</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 6%\\\">Type</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 7%\\\">H.S.Code</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Manufacturer</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 6%\\\">Pack<br>Size</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 7%\\\">No<br>Of Units</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Amount(Ton)</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 6%\\\">Unit<br>Price</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\">Rate(BDT)</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Total<br>Price</th>\\r\\n                                    <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Total<br>Price(BDT)</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let a of proformaInvoiceDtls | paginate: { itemsPerPage:10, currentPage: pd}\\\">\\r\\n                                    <td>\\r\\n                                        <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-success\\\" dropdownToggle>\\r\\n                        <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                      </button>\\r\\n                                            <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" (click)=\\\"editProduct(a)\\\">Edit</a>\\r\\n                                                </li>\\r\\n                                                <li>\\r\\n                                                    <a href=\\\"javascript:;\\\" (click)=\\\"removeProduct(a)\\\">Delete</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>{{a.prodName}}</td>\\r\\n                                    <td>{{a.prodType}}</td>\\r\\n                                    <td>{{a.hsCode}}</td>\\r\\n                                    <td>{{a.manufacturer}}</td>\\r\\n                                    <td>{{a.packSize}}</td>\\r\\n                                    <td style=\\\"text-align: right;\\\">{{a.noOfUnits | number}}</td>\\r\\n                                    <td style=\\\"text-align: right;\\\">{{a.totalAmount}} <span *ngIf=\\\"a.totalAmount >=0\\\">MT</span></td>\\r\\n                                    <td style=\\\"text-align: right;\\\">{{a.unitPrice}}</td>\\r\\n                                    <td style=\\\"text-align: right;\\\">{{a.exchangeRate}}</td>\\r\\n                                    <td style=\\\"text-align: right;\\\">{{a.totalPrice | number}}</td>\\r\\n                                    <td style=\\\"text-align: right;\\\">{{a.totalPriceInBdt | number}}</td>\\r\\n\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <pagination-controls (pageChange)=\\\"pd = $event\\\"></pagination-controls>\\r\\n                </div>\\r\\n                <!-- /.box-body -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #proformaInvDtlModal>\\r\\n    <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">{{proformaInvDtlModalTitle}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"proformaInvoiceDtlModalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"padding: 20px 30px 20px 30px;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <fieldset class=\\\"scheduler-border\\\">\\r\\n                    <legend class=\\\"scheduler-border\\\">Product Information</legend>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form [formGroup]=\\\"proformaInvoiceDtlForm\\\" (submit)=\\\"addUpdateProduct()\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"input-group\\\">\\r\\n                                                <!-- <select id=\\\"currency\\\" class=\\\"form-control\\\" formControlName=\\\"prodName\\\" (change)=\\\"prodNameSelectChng()\\\"\\r\\n                                        [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('prodName').errors && proformaInvoiceDtlForm.get('prodName').touched}\\\" >\\r\\n                                           <option value=\\\"\\\" selected>select</option>\\r\\n                                            <option *ngFor=\\\"let a of annProds\\\" [value]=\\\"a.prodName\\\">{{a.prodName}}</option>\\r\\n                                         </select> -->\\r\\n                                                <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Product</label>\\r\\n                                                <span style=\\\"color:red;\\\">*</span>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prodName\\\" placeholder=\\\"search\\\" readonly [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('prodName').errors && proformaInvoiceDtlForm.get('prodName').touched}\\\">\\r\\n                                                <div class=\\\"input-group-append input-group-text\\\">\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-embossed\\\" (click)=\\\"getProductListFromAnnualReq()\\\"><i class=\\\"fa fa-search\\\" style=\\\"color: white;\\\"></i>Search</button>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('prodName').hasError('required')\\r\\n                                         && proformaInvoiceDtlForm.get('prodName').touched\\\">Product name required</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- <div class=\\\"col-md-1\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-embossed\\\"><i class=\\\"fa fa-search\\\" style=\\\"color: white;\\\"></i>Search</button>\\r\\n                                  </div> -->\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Product Type</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product-name\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('prodType').errors && proformaInvoiceDtlForm.get('prodType').touched}\\\" formControlName=\\\"prodType\\\" readonly>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('prodType').hasError('required')\\r\\n                                        && proformaInvoiceDtlForm.get('prodType').touched\\\">Product type required</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('prodType').hasError('maxlength')\\r\\n                                           && proformaInvoiceDtlForm.get('prodType').touched\\\"> Product type can be max 500 Character long</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"product-name\\\" class=\\\"control-label required\\\">H.S. Code</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product-name\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('hsCode').errors && proformaInvoiceDtlForm.get('hsCode').touched}\\\" formControlName=\\\"hsCode\\\" readonly>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('prodName').hasError('required')\\r\\n                                        && proformaInvoiceDtlForm.get('hsCode').touched\\\">H.S. code required</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('hsCode').hasError('maxlength')\\r\\n                                           && proformaInvoiceDtlForm.get('hsCode').touched\\\">H.S. code can be max 50 Character long</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Manufacturer</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"manufacturer\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('manufacturer').errors && proformaInvoiceDtlForm.get('manufacturer').touched}\\\" formControlName=\\\"manufacturer\\\">\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('manufacturer').hasError('required')\\r\\n                                        && proformaInvoiceDtlForm.get('manufacturer').touched\\\">Manufacturer name required\\r\\n                                            </div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('manufacturer').hasError('maxlength')\\r\\n                                           && proformaInvoiceDtlForm.get('manufacturer').touched\\\"> Manufacturer name can be max 100 Character long</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"product-name\\\" class=\\\"control-label required\\\">Pack Size</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"manufacturer\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('packSize').errors && proformaInvoiceDtlForm.get('packSize').touched}\\\" formControlName=\\\"packSize\\\" readonly>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('packSize').hasError('required')\\r\\n                                    && proformaInvoiceDtlForm.get('packSize').touched\\\">Pack size required</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('packSize').hasError('maxlength')\\r\\n                                       && proformaInvoiceDtlForm.get('packSize').touched\\\">Pack size can be max 100 Character long</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"product-name\\\" class=\\\"control-label required\\\">No of Unit (Units)</label>\\r\\n                                            <small style=\\\"color:red;\\\"> *</small>\\r\\n                                            <small style=\\\"color:#888889;\\\"> numeric value</small>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"manufacturer\\\" autocomplete=\\\"off\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('noOfUnits').errors && proformaInvoiceDtlForm.get('noOfUnits').touched}\\\" (keyup)=\\\"calculateTotalPrice()\\\" formControlName=\\\"noOfUnits\\\"\\r\\n                                                (input)=\\\"noOfUnitsValidation()\\\">\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('noOfUnits').hasError('required')\\r\\n                                    && proformaInvoiceDtlForm.get('noOfUnits').touched\\\">No of units required</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('noOfUnits').hasError('maxlength')\\r\\n                                       && proformaInvoiceDtlForm.get('noOfUnits').touched\\\">No of units can be max 8 Character long</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('noOfUnits').hasError('pattern')\\r\\n                                       && proformaInvoiceDtlForm.get('noOfUnits').touched\\\">Only numeric value</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"noOfUnitValidationErrorMsg\\\">No of Unit exceeds Annual Requirements. Remaining Amount {{remainingAmountUnit| number : '1.2-2'}} Units.</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"total-quantity\\\" class=\\\"control-label required\\\">Total Amount (Tons)</label>\\r\\n                                            <small style=\\\"color:red;\\\"> *</small>\\r\\n                                            <small style=\\\"color:#888889;\\\"> numeric value</small>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"total-quantity\\\" autocomplete=\\\"off\\\" (input)=\\\"totalAmountTonValidation()\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('totalAmount').errors && proformaInvoiceDtlForm.get('totalAmount').touched}\\\" formControlName=\\\"totalAmount\\\">\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('totalAmount').hasError('required')\\r\\n                                            && proformaInvoiceDtlForm.get('totalAmount').touched\\\">Total Amount required\\r\\n                                            </div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('totalAmount').hasError('maxlength')\\r\\n                                              && proformaInvoiceDtlForm.get('totalAmount').touched\\\">Total Amount can be max 20 Character long</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('totalAmount').hasError('maxlength') &&\\r\\n                                            proformaInvoiceDtlForm.get('totalAmount').touched\\\">Unit Price can be max 8 Character long</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('totalAmount').hasError('pattern')\\r\\n                                              && proformaInvoiceDtlForm.get('totalAmount').touched\\\">Only numeric value\\r\\n                                            </div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"totalAmountValidationErrorMsg\\\">Total amount exceeds Annual Requirements. Remaining Amount {{remainingAmountTon| number : '1.2-2'}} Tons.</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"unit-price\\\" class=\\\"control-label required\\\">Unit Price in Foreign Currency</label>\\r\\n                                            <small style=\\\"color:red;\\\"> *</small>\\r\\n                                            <small style=\\\"color:#888889;\\\"> numeric value</small>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"unit-price\\\" autocomplete=\\\"off\\\" (keyup)=\\\"calculateTotalPrice()\\\" [ngClass]=\\\"{'is-invalid': proformaInvoiceDtlForm.get('unitPrice').errors && proformaInvoiceDtlForm.get('unitPrice').touched}\\\" formControlName=\\\"unitPrice\\\">\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('unitPrice').hasError('required') &&\\r\\n                                  proformaInvoiceDtlForm.get('unitPrice').touched\\\">Unit Price required</div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('unitPrice').hasError('maxlength') &&\\r\\n                                  proformaInvoiceDtlForm.get('unitPrice').touched\\\">Unit Price can be max 6 Character long\\r\\n                                            </div>\\r\\n                                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"proformaInvoiceDtlForm.get('unitPrice').hasError('pattern')\\r\\n                                  && proformaInvoiceDtlForm.get('unitPrice').touched\\\">Only numeric value</div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"exchange-rate\\\" class=\\\"control-label required\\\"> &nbsp;&nbsp; Exchange Rate in\\r\\n                        BDT</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exchange-rate\\\" formControlName=\\\"exchangeRate\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"total-price\\\" class=\\\"control-label required\\\">Total Price in Foreign Currency</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"total-price\\\" placeholder=\\\"auto generated\\\" formControlName=\\\"totalPrice\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"total-price\\\" class=\\\"control-label required\\\">Total Price in BDT(Tk)</label>\\r\\n                                            <span style=\\\"color:red;\\\">*</span>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"total-price\\\" placeholder=\\\"auto generated\\\" formControlName=\\\"totalPriceInBdt\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"addMode\\\" class=\\\"btn btn-success btn-md\\\" style=\\\"width: 100px;\\\" [disabled]=\\\"!proformaInvoiceDtlForm.valid || totalAmountValidationErrorMsg\\\">Add</button>\\r\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"editMode\\\" class=\\\"btn btn-success btn-md\\\" style=\\\"width: 100px;\\\" [disabled]=\\\"!proformaInvoiceDtlForm.valid || totalAmountValidationErrorMsg\\\">Update</button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-md\\\" (click)=\\\"proformaInvoiceDtlModalRef.hide()\\\" style=\\\"margin-right:20px;width: 100px; \\\">Cancel</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #annualReqProdModal>\\r\\n    <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">Annual Requirement Product Details</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"annualReqProdModalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"padding: 20px 30px 20px 30px;\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"margin-bottom:5px ;\\\">\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <input name=\\\"filterText\\\" class=\\\"form-control m-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search..\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-embossed btn-danger\\\" (click)=\\\"resetFilter()\\\"><i\\r\\n            class=\\\"fa fa-refresh\\\"></i>&nbsp; Reset</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #bed2c9; width: 100%;\\\">\\r\\n                    <table class=\\\"table table-bordered table-responsive table-hover table-striped\\\">\\r\\n                        <thead style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));\\\">\\r\\n                            <tr>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Action</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 0;display:none;\\\">ProductId</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 9%\\\">\\r\\n                                    Product\\r\\n                                </th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">Pack Size</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 9%\\\">Annual<br> Requirement<br> Units</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Annual<br> Requirement <br> Amount (Ton)</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Remaining <br>Amount <br>(Ton/Unit)</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let a of annProds | paginate: { itemsPerPage:10, currentPage: pa} | filter: searchText\\\">\\r\\n                                <td>\\r\\n                                    <button class=\\\"btn btn-sm btn-embossed btn-success\\\" (click)=\\\"reqProdNameSelect(a)\\\">Select</button>\\r\\n                                </td>\\r\\n                                <td style=\\\"display:none;\\\">{{a.productId}}</td>\\r\\n                                <td>{{a.prodName}}</td>\\r\\n                                <td>{{a.packSize}}</td>\\r\\n                                <td style=\\\"text-align: right;\\\">{{a.tentativeUnits | number}} unit</td>\\r\\n                                <td style=\\\"text-align: right;\\\">{{a.totalAmount}} TN</td>\\r\\n                                <td style=\\\"text-align: right;\\\">{{a.remainingAmount | number : '1.2-2'}} </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <pagination-controls (pageChange)=\\\"pa = $event\\\"></pagination-controls>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #proformaInvMstSearchModal>\\r\\n    <div class=\\\"modal-header\\\" style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));color: black;\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">Proforma Invoice Lists</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"proformaInvMstSearchModalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" style=\\\"padding: 20px 30px 20px 30px;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"table-responsive\\\" style=\\\"border: 1px solid #bed2c9; width: 100%;\\\">\\r\\n                    <table class=\\\"table table-bordered table-responsive table-hover table-striped\\\">\\r\\n                        <thead style=\\\"background: -webkit-gradient(linear, left bottom, left top, color-stop(0, #289e68), color-stop(1, #f9fafc));\\\">\\r\\n                            <tr>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 7%\\\">Action</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 0;display:none;\\\">Id</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 9%\\\">Application<br>No</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 8%\\\">PI<br>No</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Proforma<br>Date</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Submission<br>Date</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 9%\\\">Prot<br>of<br>Loding</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 9%\\\">Port<br>of<br>Entry</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Status</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 0; display: none;\\\">Currency</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 7%;\\\">PI<br>Scan</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 7%;\\\">Literature</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 7%;\\\">Test<br>Doc</th>\\r\\n                                <th scope=\\\"col\\\" style=\\\"width: 7%;\\\">Other<br>Doc</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let a of proformaInvoiceMsts | paginate: { itemsPerPage:8, currentPage: p}\\\">\\r\\n                                <td>\\r\\n                                    <button class=\\\"btn btn-sm btn-embossed btn-success\\\" (click)=\\\"selectProforma(a)\\\">View/Edit</button>\\r\\n                                    <!-- <button  class=\\\"btn btn-sm btn-embossed btn-success btn-grid-pdf\\\" (click)=\\\"selectProforma(a)\\\">\\r\\n                          <i class=\\\"fas fa-check fa-sm icon-pdf\\\"></i></button>  -->\\r\\n                                </td>\\r\\n                                <td style=\\\"display:none;\\\">{{a.id}}</td>\\r\\n                                <td>{{a.applicationNo}}</td>\\r\\n                                <td>{{a.proformaInvoiceNo}}</td>\\r\\n                                <td>{{a.proformaDate | date}}</td>\\r\\n                                <td>\\r\\n                                    <div *ngIf=\\\"a.submissionDate == null\\\" style=\\\"background-color: #ffb822;\\\">\\r\\n                                        Not Submitted\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"a.submissionDate\\\">\\r\\n                                        {{a.submissionDate | date}}\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                <td>{{a.portOfLoading}}</td>\\r\\n                                <td>{{a.portOfEntry}}</td>\\r\\n                                <td>\\r\\n                                    <div *ngIf=\\\"a.confirmation == true\\\" style=\\\"background-color: #0fab64; color: white;padding: 3px; border-radius: 4px;\\\">\\r\\n                                        Submitted\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"a.confirmation == false\\\" style=\\\"background-color: #ffb822; padding: 3px; border-radius: 4px;\\\">\\r\\n                                        Not Submitted\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                <td style=\\\"display: none;\\\">{{a.currency}}</td>\\r\\n                                <td><button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\" (click)=\\\"DownloadPiFile(a.piScan)\\\"><i class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button></td>\\r\\n                                <td><button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\" (click)=\\\"DownloadLitFile(a.litScan)\\\"><i class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button></td>\\r\\n                                <td><button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\" (click)=\\\"DownloadTestFile(a.testReport)\\\"><i class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button>\\r\\n                                </td>\\r\\n                                <td><button class=\\\"btn btn-sm btn-embossed btn-primary btn-grid-pdf\\\" (click)=\\\"DownloadOtherFile(a.otherDoc)\\\"><i class=\\\"fas fa-file-pdf fa-lg icon-pdf\\\"></i></button></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-template #proformaConfirmModal>\\r\\n    <div class=\\\"modal-body text-center\\\">\\r\\n        <div>\\r\\n            <h4>আপনি কি প্রোফর্মা ইনভয়েসটি {{saveUpdateMsg}} করতে চান ?</h4><small>( বিঃ দ্রঃ প্রোফর্মা ইনভয়েসটি\\r\\n        {{saveUpdateMsg}} করে পরবর্তী প্রসেসের জন্য অবশ্যই সাবমিট করতে হবে )</small>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #proformaSubmissionConfirmModal>\\r\\n    <div class=\\\"modal-body text-center\\\">\\r\\n        <div>\\r\\n            <h4>আপনি কি প্রোফর্মা ইনভয়েসটি সাবমিট করতে চান ?</h4><small>( বিঃ দ্রঃ প্রোফর্মা ইনভয়েসটি একবার সাবমিট করলে\\r\\n        পরবর্তীতে অপরিবর্তনযোগ্য )</small>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirmSubmit()\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"declineSubmit()\\\">No</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '0',fullScreenBackdrop:true }\\\"></ngx-loading>\"","export default \"<div class=\\\"container\\\" style=\\\"background-color:#ffffff;padding: 0;font-size: 17px;border-radius: 4px;\\\">\\r\\n    <nav class=\\\"navbar navbar-default\\\" style=\\\"background-color: #45A845;padding: 10px;\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <div class=\\\"navbar-header\\\">\\r\\n              <img src=\\\"../../assets/img/logo/govt-logo.png\\\" style=\\\"float: left\\\">\\r\\n          </div>\\r\\n          <ul class=\\\"nav navbar-nav\\\">\\r\\n            <li><a class=\\\"active\\\" style=\\\"color:#ffffff;font-size: 22px;font-weight: 600; margin-top: 1%;\\\">অনলাইনে আবেদনের মাধ্যমে পশু খাদ্য ও পুষ্টি উপকরণ আমদানির অনাপত্তিপত্রের জন্য রেজিস্ট্রেশন করুন </a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </nav>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-1\\\"></div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n          <button type=\\\"button\\\" style=\\\"float: right;\\\" class=\\\"btn btn-sm btn-embossed btn-success\\\" (click)=\\\"backToLogin()\\\">Back to Login</button>\\r\\n        </div>\\r\\n      </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-1\\\"></div>\\r\\n    <div class=\\\"col-md-10\\\">\\r\\n       <div class=\\\"row\\\">\\r\\n          <fieldset class=\\\"scheduler-border\\\">\\r\\n              <legend class=\\\"scheduler-border\\\">রেজিস্ট্রেশন ফরম</legend>\\r\\n          <form [formGroup]=\\\"registrationForm\\\" (submit)=\\\"register()\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                       <label for=\\\"org-name\\\" class=\\\"control-label required\\\">Organization Name<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">প্রতিষ্ঠানের নাম</span></label>\\r\\n                     \\r\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"org-name\\\" \\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('orgName').errors && registrationForm.get('orgName').touched}\\\" \\r\\n                       formControlName= \\\"orgName\\\">\\r\\n                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('orgName').hasError('required')\\r\\n                       && registrationForm.get('orgName').touched\\\">Organization name required</div>\\r\\n                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('orgName').hasError('maxlength')\\r\\n                          && registrationForm.get('orgName').touched\\\"> Organization name can be maximum 200 Character long</div>                    \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\"></div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                       <label for=\\\"contact-person\\\">Contact Person<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">প্রতিনিধি</span> </label>\\r\\n                      \\r\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact-person\\\" \\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('contactName').errors && registrationForm.get('contactName').touched}\\\" \\r\\n                       formControlName= \\\"contactName\\\">\\r\\n                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('contactName').hasError('required')\\r\\n                       && registrationForm.get('contactName').touched\\\">Contact person required</div>\\r\\n                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('contactName').hasError('maxlength')\\r\\n                          && registrationForm.get('contactName').touched\\\"> Contact person can be maximum 50 Character long</div>                 \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                       <label for=\\\"position\\\">Position<span style=\\\"color:red;\\\">*</span> <br><span class=\\\"lvl-bangla-font\\\">পজিশন</span> </label>\\r\\n                       \\r\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"position\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('position').errors && registrationForm.get('position').touched}\\\" \\r\\n                        formControlName= \\\"position\\\">\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('position').hasError('required')\\r\\n                        && registrationForm.get('position').touched\\\">Position required</div>\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('position').hasError('maxlength')\\r\\n                           && registrationForm.get('position').touched\\\"> Position can be maximum 20 Character long</div> \\r\\n                   </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-md-5\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"contact-no\\\">Mobile No.<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\"> মোবাইল নম্বর </span> </label>\\r\\n                        \\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact-no\\\" \\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('contactNo').errors && registrationForm.get('contactNo').touched}\\\" \\r\\n                       formControlName= \\\"contactNo\\\">\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('contactNo').hasError('required')\\r\\n                        && registrationForm.get('contactNo').touched\\\">Contact No required</div>\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('contactNo').hasError('maxlength')\\r\\n                           && registrationForm.get('contactNo').touched\\\">Mobile No. can be maximum 20 Character long</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-md-7\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                         <label for=\\\"email\\\">Email<span style=\\\"color:red;\\\">*</span><br> <span class=\\\"lvl-bangla-font\\\">ই-মেইল</span></label>\\r\\n                       \\r\\n                         <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" \\r\\n                         [ngClass]=\\\"{'is-invalid': registrationForm.get('email').errors && registrationForm.get('email').touched}\\\" \\r\\n                        formControlName= \\\"email\\\">\\r\\n                         <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('email').hasError('required')\\r\\n                         && registrationForm.get('email').touched\\\">Email No required</div>\\r\\n                         <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('email').hasError('maxlength')\\r\\n                            && registrationForm.get('email').touched\\\">Email can be maximum 50 Character long</div>\\r\\n                            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('email').hasError('email')\\r\\n                            && registrationForm.get('email').touched\\\">Invalid email format</div>\\r\\n                       </div>\\r\\n                 </div>\\r\\n             </div>\\r\\n               <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                         <label for=\\\"division\\\">Select Division<span style=\\\"color:red;\\\">*</span> <br><span class=\\\"lvl-bangla-font\\\">বিভাগ</span></label>                         \\r\\n                         <select id=\\\"division\\\" class=\\\"form-control\\\" (change)=\\\"onDivisionChange()\\\"\\r\\n                         [ngClass]=\\\"{'is-invalid': registrationForm.get('division').errors && registrationForm.get('division').touched}\\\" \\r\\n                          formControlName=\\\"division\\\" required>\\r\\n                           <option value=\\\"\\\" selected>select</option>\\r\\n                           <option *ngFor=\\\"let d of divisions\\\" [value]=\\\"d.division\\\">{{d.division}}</option>\\r\\n                         </select>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('division').hasError('required')\\r\\n                      && registrationForm.get('division').touched\\\">Division required</div>\\r\\n                     </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                         <label for=\\\"district\\\">Select District<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">জেলা</span></label>\\r\\n                         \\r\\n                         <select id=\\\"district\\\" class=\\\"form-control\\\" \\r\\n                         [ngClass]=\\\"{'is-invalid': registrationForm.get('district').errors && registrationForm.get('district').touched}\\\" \\r\\n                         (change)=\\\"onDistrictChange()\\\" formControlName=\\\"district\\\" required>\\r\\n                           <option value=\\\"\\\" selected>select</option>\\r\\n                           <option *ngFor=\\\"let d of ds\\\" [value]=\\\"d.district\\\">{{d.district}}</option>\\r\\n                         </select>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('district').hasError('required')\\r\\n                      && registrationForm.get('district').touched\\\">District required</div>\\r\\n                     </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                         <label for=\\\"upazila\\\">Select Upazila <span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">উপজেলা</span></label>                         \\r\\n                         <select id=\\\"upazila\\\" class=\\\"form-control\\\" formControlName=\\\"upazila\\\"\\r\\n                         [ngClass]=\\\"{'is-invalid': registrationForm.get('upazila').errors && registrationForm.get('upazila').touched}\\\">\\r\\n                           <option value=\\\"\\\" selected>select</option>\\r\\n                           <option *ngFor=\\\"let u of up\\\" [value]=\\\"u.upazila\\\">{{u.upazila}}</option>\\r\\n                         </select>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('upazila').hasError('required')\\r\\n                      && registrationForm.get('upazila').touched\\\">Upazila required</div>\\r\\n                     </div>\\r\\n                 </div>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-12\\\">\\r\\n                 <div class=\\\"form-group\\\">\\r\\n                     <label for=\\\"address\\\">Address<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">প্রতিষ্ঠানের ঠিকানা</span></label>\\r\\n                     \\r\\n                     <textarea id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" \\r\\n                     [ngClass]=\\\"{'is-invalid': registrationForm.get('address').errors && registrationForm.get('address').touched}\\\"></textarea>\\r\\n                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('address').hasError('required')\\r\\n                      && registrationForm.get('address').touched\\\">Address required</div>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('address').hasError('maxlength')\\r\\n                      && registrationForm.get('address').touched\\\">Address can be maximum 20 Character long</div>\\r\\n                 </div>\\r\\n               </div>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                       <label for=\\\"dls-license-type\\\">Select DLS License Type<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">ডিএলএস লাইসেন্স টাইপ</span></label>\\r\\n                       \\r\\n                       <select id=\\\"dls-license-type\\\" class=\\\"form-control\\\" \\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('dlsLicenseType').errors && registrationForm.get('dlsLicenseType').touched}\\\" \\r\\n                       formControlName=\\\"dlsLicenseType\\\">\\r\\n                         <option value=\\\"\\\" selected>select</option>\\r\\n                         <option value=\\\"Feed Mill\\\">Category 1-Feed Mill</option>\\r\\n                         <option value=\\\"Category 1\\\">Category 1-Pre Mix</option>\\r\\n                         <option value=\\\"Category 2\\\">Category 2</option>\\r\\n                         <option value=\\\"Farm\\\">Farm</option>\\r\\n                       </select>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('dlsLicenseType').hasError('maxlength')\\r\\n                      && registrationForm.get('dlsLicenseType').touched\\\">DLS license type required</div>\\r\\n                    </div>\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <div class=\\\"form-group\\\">\\r\\n                     <label for=\\\"dls-license-no\\\">DLS License/Reg No.<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">ডিএলএস লাইসেন্স/রেজিঃ নম্বর</span></label>\\r\\n                    \\r\\n                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dls-license-no\\\"  \\r\\n                     [ngClass]=\\\"{'is-invalid': registrationForm.get('dlsLicenseNo').errors && registrationForm.get('dlsLicenseNo').touched}\\\" \\r\\n                     formControlName= \\\"dlsLicenseNo\\\">\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('dlsLicenseNo').hasError('required')\\r\\n                      && registrationForm.get('dlsLicenseNo').touched\\\">DLS license or registration required</div>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('dlsLicenseNo').hasError('maxlength')\\r\\n                      && registrationForm.get('dlsLicenseNo').touched\\\">DLS license or registration can be maximum 20 Character long</div>\\r\\n                    </div>\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <div class=\\\"form-group\\\">\\r\\n                     <label for=\\\"dls-license-scan-copy\\\">DLS License Scan Copy<span style=\\\"color:red;\\\">*</span> <br><span class=\\\"lvl-bangla-font\\\">ডিএলএস লাইসেন্স স্ক্যান কপি</span></label>\\r\\n                                        \\r\\n                      <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"dls-license-scan-copy\\\" (change)=\\\"onSelectedDlsFile($event)\\\"\\r\\n                      placeholder=\\\"DLS license scan copy\\\"\\r\\n                     [ngClass]=\\\"{'is-invalid': registrationForm.get('dlsLicenseScan').errors && registrationForm.get('dlsLicenseScan').touched}\\\" \\r\\n                     formControlName= \\\"dlsLicenseScan\\\">\\r\\n                     <small class=\\\"help-block\\\" style=\\\"color: #888889;font-size: 11px;\\\">File size should be(Max 1MB) in PDF Format </small>\\r\\n                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('dlsLicenseScan').hasError('required')\\r\\n                     && registrationForm.get('dlsLicenseScan').touched\\\">DLS license scan copy required</div>\\r\\n                  </div>\\r\\n               </div>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                         <label for=\\\"nid-no\\\">NID No<span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">এনআইডি নম্বর</span></label>\\r\\n                         \\r\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nid-no\\\" \\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('nidNo').errors && registrationForm.get('nidNo').touched}\\\" \\r\\n                       formControlName= \\\"nidNo\\\">\\r\\n                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('nidNo').hasError('required')\\r\\n                      && registrationForm.get('nidNo').touched\\\">NID No required</div>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('nidNo').hasError('maxlength')\\r\\n                      && registrationForm.get('nidNo').touched\\\">NID No can be maximum 20 Character long</div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                       <label for=\\\"nid-scan-copy\\\">NID Scan Copy <span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">এনআইডি স্ক্যান কপি</span> </label>\\r\\n                       \\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"nid-scan-copy\\\" (change)=\\\"onSelectedNidFile($event)\\\"\\r\\n                        placeholder=\\\"NID scan copy\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('nidScan').errors && registrationForm.get('nidScan').touched}\\\" \\r\\n                       formControlName= \\\"nidScan\\\">\\r\\n                     <small class=\\\"help-block\\\" style=\\\"color: #888889;font-size: 11px;\\\">File size should be(Max 1MB) in PDF Format </small>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('nidScan').hasError('required')\\r\\n                      && registrationForm.get('nidScan').touched\\\">NID scan copy required</div>\\r\\n                       </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                       <label for=\\\"irc-license-scan-copy\\\">IRC Scan Copy <span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\">আইআরসি স্ক্যান কপি</span> </label>\\r\\n                       \\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"irc-license-scan-copy\\\" (change)=\\\"onSelectedIrcFile($event)\\\"\\r\\n                        placeholder=\\\"IRC scan copy\\\"\\r\\n                       [ngClass]=\\\"{'is-invalid': registrationForm.get('ircScan').errors && registrationForm.get('ircScan').touched}\\\" \\r\\n                       formControlName= \\\"ircScan\\\">\\r\\n                     <small class=\\\"help-block\\\" style=\\\"color: #888889;font-size: 11px;\\\">File size should be(Max 1MB) in PDF Format </small>\\r\\n                      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('ircScan').hasError('required')\\r\\n                      && registrationForm.get('ircScan').touched\\\">IRC Scan Copy required</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <div class=\\\"input-group\\\">\\r\\n                        <label for=\\\"user-name\\\">Username <span style=\\\"color:red;\\\">*</span> <br><span class=\\\"lvl-bangla-font\\\">ইউজারনেম</span></label>\\r\\n                       \\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-name\\\" \\r\\n                        [ngClass]=\\\"{'is-invalid': registrationForm.get('username').errors && registrationForm.get('username').touched}\\\" \\r\\n                         formControlName= \\\"username\\\" autocomplete=\\\"off\\\" (keyup)=\\\"isUsernameAvailable()\\\">\\r\\n                        <div class=\\\"input-group-append input-group-text\\\">\\r\\n                            <span id=\\\"username-spinner\\\" *ngIf=\\\"regSpinner && !(registrationForm.get('username').hasError('required') || registrationForm.get('username').hasError('pattern') || registrationForm.get('username').hasError('maxlength'))\\\" class=\\\"fas fa-1x fa-spinner fa-pulse\\\" style=\\\"color:#54B575;margin-left: 3px;\\\"></span>\\r\\n                            <span class=\\\"fa fa-check username-unique-check-success\\\" *ngIf=\\\"regOk && !(registrationForm.get('username').hasError('required') || registrationForm.get('username').hasError('pattern') || registrationForm.get('username').hasError('maxlength'))\\\" id=\\\"username-unique-check-success\\\" style=\\\"color:green;margin-left: 3px;\\\"></span>\\r\\n                            <span class=\\\"fa fa-times username-unique-check-error\\\" *ngIf=\\\"regNotOk && !(registrationForm.get('username').hasError('required') || registrationForm.get('username').hasError('pattern') || registrationForm.get('username').hasError('maxlength'))\\\" id=\\\"username-unique-check-success\\\" style=\\\"color:red;margin-left: 3px;\\\"></span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('username').hasError('required')\\r\\n                        && registrationForm.get('username').touched\\\">Username required</div>\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"(!registrationForm.get('username').hasError('required')\\r\\n                        && registrationForm.get('username').touched) && !usernameValidity\\\">Username not available</div>\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('username').hasError('maxlength')\\r\\n                        && registrationForm.get('username').touched\\\">Username can be maximum 20 Character long</div>\\r\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('username').hasError('pattern')\\r\\n                        && registrationForm.get('username').touched && !registrationForm.get('username').hasError('maxlength')\\\">Username must have atleast one character</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"password\\\">Password<span style=\\\"color:red;\\\">*</span> <br><span class=\\\"lvl-bangla-font\\\">পাসওয়ার্ড  </span></label>\\r\\n                        \\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\r\\n                        [ngClass]=\\\"{'is-invalid': registrationForm.get('password').errors && registrationForm.get('password').touched}\\\" \\r\\n                         formControlName= \\\"password\\\" autocomplete=\\\"new-password\\\">\\r\\n                        <div class=\\\"invalid-feedback\\\"\\r\\n                        *ngIf=\\\"registrationForm.get('password').hasError('required')\\r\\n                        && registrationForm.get('password').touched\\\">Password required</div>\\r\\n                         <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('password').hasError('minlength')\\r\\n                          && registrationForm.get('password').touched\\\"> Password must be atleast 5 character long</div>\\r\\n                       <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registrationForm.get('password').hasError('maxlength') \\r\\n                       && registrationForm.get('password').touched\\\">Password should not more than 10 character long</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-md-4\\\">\\r\\n                     <div class=\\\"form-group\\\">\\r\\n                         <label for=\\\"confirm-password\\\">Confirm Password <span style=\\\"color:red;\\\">*</span><br><span class=\\\"lvl-bangla-font\\\"> কনফার্ম পাসওয়ার্ড</span></label>\\r\\n                         \\r\\n                         <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirm-password\\\"  autocomplete=\\\"new-password\\\"\\r\\n                         [ngClass]=\\\"{'is-invalid': registrationForm.get('confirmPassword').errors &&\\r\\n                         registrationForm.get('confirmPassword').touched\\r\\n                         || registrationForm.get('confirmPassword').touched && registrationForm.hasError('mismatch')}\\\" \\r\\n                          formControlName= \\\"confirmPassword\\\">\\r\\n                      <div *ngIf=\\\"registrationForm.get('confirmPassword').hasError('required')\\r\\n                       && registrationForm.get('confirmPassword').touched\\\" class=\\\"invalid-feedback\\\">Confirm Password required</div>\\r\\n                      <div *ngIf=\\\"registrationForm.hasError('mismatch') && registrationForm.get('confirmPassword').touched\\\"\\r\\n                       class=\\\"invalid-feedback\\\">Confirm password not matched</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n               <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-md-12\\\">\\r\\n                   <div class=\\\"form-group\\\">\\r\\n                    <button class=\\\"form-control btn-success\\\" [ngClass]=\\\"{'btn-registration-disabled': registrationForm.invalid}\\\" \\r\\n                    [disabled]=\\\"registrationForm.invalid || !usernameValidity\\\"\\r\\n                    style=\\\"padding: 0; color: white;font-size:large; font-weight: 500;\\\">Register</button>\\r\\n                   </div>\\r\\n                 </div>\\r\\n               </div>\\r\\n            </div>\\r\\n           </form>\\r\\n           </fieldset>\\r\\n       </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-1\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px', fullScreenBackdrop:true}\\\"></ngx-loading>\\r\\n\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>Role Management</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"m-content\\\">\\r\\n                <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n                    <div class=\\\"m-portlet__body\\\">\\r\\n                        <tabset class=\\\"tab-container tabbable-line tab-dashboard\\\">\\r\\n                            <tab heading=\\\"Roles\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                               <Roles></Roles>\\r\\n                            </tab>\\r\\n                            <tab heading=\\\"Assign Roles\\\" customClass=\\\"m-tabs__item\\\">\\r\\n                                <UserRoleAssign></UserRoleAssign>\\r\\n                                <!-- <salesCampaignProspects *ngIf=\\\"salesCampaignId\\\" [salesCampaignIdFilter]=\\\"salesCampaignId\\\"\\r\\n                            [isContact]=\\\"true\\\"></salesCampaignProspects> -->\\r\\n                            </tab>\\r\\n                        </tabset>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"role.id\\\">Edit Role</span>\\r\\n                        <span *ngIf=\\\"!role.id\\\">Create New Role</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <label for=\\\"RoleName\\\">Role <span style=\\\"color:red;\\\">*</span> </label>\\r\\n                                <!-- <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"role.name\\\"\\r\\n                                    name=\\\"name\\\" #name=\\\"ngModel\\\"\\r\\n                                    [ngClass]=\\\"{ 'is-invalid': name.touched && name.invalid }\\\" required />\\r\\n                                <div *ngIf=\\\"name.touched && name.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                     <div *ngIf=\\\"name.errors.required\\\">Role is required</div> \\r\\n                                </div> -->\\r\\n                                 <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"role.name\\\"\\r\\n                                 name=\\\"name\\\" #rname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': rname.touched && rname.invalid }\\\" required />\\r\\n                                    <div *ngIf=\\\"rname.touched && rname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"rname.errors.required\\\">Role is required</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group m-form__group\\\">\\r\\n                                <label for=\\\"fullName\\\">Role Name <span style=\\\"color:red;\\\">*</span> </label>\\r\\n                                <!-- <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"role.name\\\"\\r\\n                                    name=\\\"name\\\" #name=\\\"ngModel\\\"\\r\\n                                    [ngClass]=\\\"{ 'is-invalid': name.touched && name.invalid }\\\" required />\\r\\n                                <div *ngIf=\\\"name.touched && name.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                     <div *ngIf=\\\"name.errors.required\\\">Role is required</div> \\r\\n                                </div> -->\\r\\n                                 <input type=\\\"text\\\" id=\\\"fullName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"role.fullName\\\"\\r\\n                                 name=\\\"fullName\\\" #fname=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': fname.touched && fname.invalid }\\\" required />\\r\\n                                    <div *ngIf=\\\"fname.touched && fname.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                    <div *ngIf=\\\"fname.errors.required\\\">Full Name is required</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n                    <button *ngIf=\\\"!role.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"!roleForm.form.valid\\\"><i class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Save</span></button>\\r\\n                    <button *ngIf=\\\"role.id\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\" (click)=\\\"update(role)\\\"><i\\r\\n                            class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Update</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>Roles</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"createRole()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Create New Role</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"filterText\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getRoles()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                                    class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"primeng-datatable-container\\\">\\r\\n                            <p-table #dataTable (onLazyLoad)=\\\"getRoles($event)\\\" [value]=\\\"primengTableHelper.records\\\"\\r\\n                                rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" [paginator]=\\\"false\\\"\\r\\n                                [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                <ng-template pTemplate=\\\"header\\\">\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 40px\\\">\\r\\n                                            Actions</th>\\r\\n                                        <th style=\\\"width: 160px\\\" pSortableColumn=\\\"name\\\">\\r\\n                                            Role\\r\\n                                            <p-sortIcon field=\\\"name\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 160px\\\" pSortableColumn=\\\"fullName\\\">\\r\\n                                            Role Name\\r\\n                                            <p-sortIcon field=\\\"fullName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width: 40px\\\">\\r\\n                                            <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                                <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                                                </button>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"createOrEditRoleModal.show(record.id)\\\">\\r\\n                                                            Edit</a>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\" (click)=\\\"deleteRole(record)\\\">Delete</a>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:160px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Role</span>\\r\\n                                            {{record.name}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:160px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\"> Role Name</span>\\r\\n                                            {{record.fullName}}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                            </p-table>\\r\\n                            <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                NoData\\r\\n                            </div>\\r\\n                            <div class=\\\"primeng-paging-container\\\">\\r\\n                                <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                                    (onPageChange)=\\\"getRoles($event)\\\"\\r\\n                                    [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                    [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                </p-paginator>\\r\\n                                <span class=\\\"total-records-count\\\">\\r\\n                                    <b>Total: </b> {{ primengTableHelper.totalRecordsCount}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditRoleModal #createOrEditRoleModal (modalSave)=\\\"getRoles()\\\"></createOrEditRoleModal>\\r\\n</div>\"","export default \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form *ngIf=\\\"active\\\" #userRoleAssignForm=\\\"ngForm\\\" novalidate novalidate autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"userRoleAssign.id\\\">Edit User Role Assign</span>\\r\\n                        <span *ngIf=\\\"!userRoleAssign.id\\\">Create New User Role Assign</span>\\r\\n                    </h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\" [disabled]=\\\"saving\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"UserName\\\">User</label>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-10 role-text\\\">\\r\\n                                        <input class=\\\"form-control\\\" id=\\\"UserName\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"userName\\\"\\r\\n                                            type=\\\"text\\\" disabled>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2 role-pick\\\">\\r\\n                                        <button class=\\\"btn btn-primary blue\\\" (click)=\\\"openSelectUserModal()\\\"\\r\\n                                            type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i>Pick</button>\\r\\n                                        <button class=\\\"btn btn-danger role-clear\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"setUserIdNull()\\\"><i class=\\\"fa fa-close\\\"></i></button>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <input type=\\\"hidden\\\" class=\\\"form-control\\\" name=\\\"userRoleAssign.userId\\\"\\r\\n                                [(ngModel)]=\\\"userRoleAssign.userId\\\" required>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"RoleName\\\">Role</label>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-10 role-text\\\">\\r\\n                                        <input class=\\\"form-control\\\" id=\\\"RoleName\\\" name=\\\"RoleName\\\" [(ngModel)]=\\\"roleName\\\"\\r\\n                                            type=\\\"text\\\" disabled>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-2 role-pick\\\">\\r\\n                                        <button class=\\\"btn btn-primary blue\\\" (click)=\\\"openSelectRoleModal()\\\"\\r\\n                                            type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i>Pick</button>\\r\\n                                        <button class=\\\"btn btn-danger role-clear\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"setRoleIdNull()\\\"><i class=\\\"fa fa-close\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <input type=\\\"hidden\\\" class=\\\"form-control\\\" name=\\\"userRoleAssign.roleId\\\"\\r\\n                                [(ngModel)]=\\\"userRoleAssign.roleId\\\" required>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n                    <button *ngIf=\\\"!userRoleAssign.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"!userRoleAssignForm.form.valid\\\"><i class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Save</span></button>\\r\\n                    <button *ngIf=\\\"userRoleAssign.id\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\"\\r\\n                        (click)=\\\"update(userRoleAssign)\\\"><i class=\\\"fa fa-save\\\"></i>\\r\\n                        <span>Update</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <userLookupTableModal #userLookupTableModal (modalSave)=\\\"getNewUserId()\\\"></userLookupTableModal>\\r\\n    <roleLookupTableModal #roleLookupTableModal (modalSave)=\\\"getNewRoleId()\\\"></roleLookupTableModal>\\r\\n</div>\"","export default \"<div class=\\\"content\\\">\\r\\n    <div class=\\\"m-subheader\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"mr-auto col-md-6\\\">\\r\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n                    <span>Assign Roles</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n                <button (click)=\\\"createUserRole()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Create New Assign User Role </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-content\\\">\\r\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n            <div class=\\\"m-portlet__body\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\r\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"filterText\\\">\\r\\n                                        <span class=\\\"input-group-btn\\\">\\r\\n                                            <button (click)=\\\"getUserRoles()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i\\r\\n                                                    class=\\\"flaticon-search-1\\\"></i></button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"primeng-datatable-container\\\">\\r\\n                            <p-table #dataTable (onLazyLoad)=\\\"getUserRoles($event)\\\" [value]=\\\"primengTableHelper.records\\\"\\r\\n                                rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" [paginator]=\\\"false\\\"\\r\\n                                [lazy]=\\\"true\\\" [scrollable]=\\\"true\\\" ScrollWidth=\\\"100%\\\"\\r\\n                                [responsive]=\\\"primengTableHelper.isResponsive\\\"\\r\\n                                [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\r\\n                                <ng-template pTemplate=\\\"header\\\">\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 40px\\\">\\r\\n                                            Actions</th>\\r\\n                                        <th style=\\\"width: 160px\\\" pSortableColumn=\\\"userName\\\">\\r\\n                                            Username\\r\\n                                            <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                        <th style=\\\"width: 160px\\\" pSortableColumn=\\\"roleName\\\">\\r\\n                                            Role\\r\\n                                            <p-sortIcon field=\\\"roleName\\\"></p-sortIcon>\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\r\\n                                    <tr>\\r\\n                                        <td style=\\\"width: 40px\\\">\\r\\n                                            <div class=\\\"btn-group dropdown\\\" dropdown container=\\\"body\\\">\\r\\n                                                <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\" dropdownToggle>\\r\\n                                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> Actions\\r\\n                                                </button>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"createEditUserRoleAssignModal.show(record.id)\\\">\\r\\n                                                            Edit</a>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <a href=\\\"javascript:;\\\"\\r\\n                                                            (click)=\\\"deleteUserRole(record)\\\">Delete</a>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:160px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">Username</span>\\r\\n                                            {{record.userName}}\\r\\n                                        </td>\\r\\n                                        <td style=\\\"width:160px\\\">\\r\\n                                            <span class=\\\"ui-column-title\\\">Role</span>\\r\\n                                            {{record.roleName}}\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </ng-template>\\r\\n                            </p-table>\\r\\n                            <div class=\\\"primeng-no-data\\\" *ngIf=\\\"primengTableHelper.totalRecordsCount == 0\\\">\\r\\n                                NoData\\r\\n                            </div>\\r\\n                            <div class=\\\"primeng-paging-container\\\">\\r\\n                                <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\" #paginator\\r\\n                                    (onPageChange)=\\\"getUserRoles($event)\\\"\\r\\n                                    [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\r\\n                                    [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                                </p-paginator>\\r\\n                                <span class=\\\"total-records-count\\\">\\r\\n                                    <b>Total: </b> {{ primengTableHelper.totalRecordsCount}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <createEditUserRoleAssignModal #createEditUserRoleAssignModal (modalSave)=\\\"getUserRoles()\\\">\\r\\n    </createEditUserRoleAssignModal>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminRoleGuard implements CanActivate {\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private alertfy: AlertifyService) {}\r\n  canActivate(): boolean {\r\n    if (!this.loginService.loggedIn()) {\r\n        this.alertfy.error('UnAuthorized Access!!!');\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n    if (this.loginService.getUserRole() === 'Admin' || this.loginService.getUserRole() === 'SA') {\r\n      //  console.log(this.loginService.getUserRole());\r\n        return true;\r\n    }\r\n    this.alertfy.error('UnAuthorized Access!!!');\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImporterRoleGuard implements CanActivate {\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private alertfy: AlertifyService) {}\r\n  canActivate(): boolean {\r\n    if (!this.loginService.loggedIn()) {\r\n        this.alertfy.error('UnAuthorized Access!!!');\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n    if (this.loginService.getUserRole() === 'Importer' || this.loginService.getUserRole() === 'SA') {\r\n      //  console.log(this.loginService.getUserRole());\r\n        return true;\r\n    }\r\n    this.alertfy.error('UnAuthorized Access!!!');\r\n    this.router.navigate(['pagenotfound']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SuperAdminRoleGuard implements CanActivate {\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private alertfy: AlertifyService) {}\r\n  canActivate(): boolean {\r\n    if (!this.loginService.loggedIn()) {\r\n        this.alertfy.error('UnAuthorized Access!!!');\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n    if (this.loginService.getUserRole() === 'SA') {\r\n        // console.log(this.loginService.getUserRole());\r\n        return true;\r\n    }\r\n    this.alertfy.error('UnAuthorized Access!!!');\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n// import { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminDashboardService {\r\n\r\n  baseUrl = environment.apiUrl + 'Dashboard/';\r\n  constructor(private http: HttpClient) { }\r\n  getDashboardInfo() {\r\n    return this.http.get(this.baseUrl + 'GetAdminDashboardInfo');\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ok } from 'assert';\r\ndeclare let alertify: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\n  constructor() { }\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm( message, function(e) {\r\n      if (e) {\r\n        okCallback();\r\n      } else {}\r\n    });\r\n  }\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport {map} from 'rxjs/operators';\r\n// import { environment } from 'src/environments/environment.prod';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnnualRequirementService {\r\n  baseUrl = environment.apiUrl + 'AnnualRequirement/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  constructor(private http: HttpClient) { }\r\n  saveAnnualRequirementMst(model: any) {\r\n    return this.http.post(this.baseUrl + 'SaveAnnualRequirementMst', model);\r\n  }\r\n  updateAnnualRequirementMst(model: any) {\r\n    return this.http.post(this.baseUrl + 'UpdateAnnualRequirementMst', model);\r\n  }\r\n  submitAnnualRequirement(model: any) {\r\n    return this.http.post(this.baseUrl + 'SubmitAnnualRequirement', model);\r\n  }\r\n  saveAnnualRequirementDtl(model: any) {\r\n      return this.http.post(this.baseUrl + 'SaveAnnualRequirementDtl', model);\r\n  }\r\n  searchAnnualRequirements(model: any) {\r\n    return this.http.post(this.baseUrl + 'GetAnnualRequirementsByImporter', model);\r\n  }\r\n  getAllAnnualRequirementsNew(fltr: any){\r\n    return this.http.post(this.baseUrl + 'GetAllAnnualRequirements', fltr);\r\n  }\r\n  getAllAnnualRequirements(){\r\n    return this.http.get(this.baseUrl + 'GetAllAnnualRequirements');\r\n  }\r\n  getAnnualReqDtlByMstAndImporterId(mst: any) {\r\n    return this.http.post(this.baseUrl + 'GetAnnualReqDtlByMstAndImporterId', mst);\r\n  }\r\n  getImporterInfoByAnnualReq(mst: any) {\r\n    return this.http.post(this.baseUrl + 'GetImporterInfoByAnnualReq', mst);\r\n  }\r\n  IsAnnualRequirementAlreadySubmittedThisYear(model: any) {\r\n    return this.http.post(this.baseUrl + 'IsAnnualRequirementAlreadySubmittedThisYear', model);\r\n  }\r\n  IsAnnualRequirementExist(model: any) {\r\n    return this.http.post(this.baseUrl + 'IsAnnualRequirementExist', model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\n// import { environment } from 'src/environments/environment.prod';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencyService {\r\n  baseUrl1 = environment.apiUrl + 'currency/';\r\n  baseUrl = environment.apiUrl + 'CurrencyRate/';\r\n\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  constructor(private http: HttpClient) { }\r\n  getCurrency() {\r\n    return this.http.get(this.baseUrl1 + 'getcurrency');\r\n  }\r\n\r\n  createCurrencyRate(model: any) {\r\n    return this.http.post(this.baseUrl + 'CreateCurrencyRate', model);\r\n  }\r\n\r\n  getAllCurrencyRates(fltr: any) {\r\n    return this.http.post(this.baseUrl + 'GetAllCurrencyRates', fltr);\r\n  }\r\n\r\n  getCurrencyRateById(id: number) {\r\n    return this.http.get(this.baseUrl + 'GetCurrencyRate/' + id);\r\n  }\r\n  editCurrencyRate(model: any, id: number) {\r\n    return this.http.put(this.baseUrl + 'EditCurrencyRate/' + id, model);\r\n  }\r\n  deleteCurrencyRate(id: number) {\r\n    return this.http.delete(this.baseUrl + 'DeleteCurrencyRate/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n// import { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  baseUrl = environment.apiUrl + 'EmployeeInfoes/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveEmployeeInfoes(model: any) {\r\n    return this.http.post(this.baseUrl + 'PostEmployeeInfo', model);\r\n  }\r\n\r\n  getEmployeeInfoes(fltr: any) {\r\n    return this.http.post(this.baseUrl + 'GetEmployeeInfos',fltr);\r\n  }\r\n\r\n  \r\n  getEmployeeInfoById(id: number) {\r\n    return this.http.get(this.baseUrl + id);\r\n  }\r\n  updateEmployeeInfoes(model: any, id: number) {\r\n    return this.http.put(this.baseUrl + id, model);\r\n  }\r\n  deleteEmployeeInfoes(id: number) {\r\n    return this.http.delete(this.baseUrl + id);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n// import { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImporterDashBoardService {\r\n\r\n  baseUrl = environment.apiUrl + 'Dashboard/';\r\n  constructor(private http: HttpClient) { }\r\n  getDashboardInfo(model: any) {\r\n    return this.http.post(this.baseUrl + 'GetImporterDashboardInfo', model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// import { environment } from 'src/environments/environment.prod';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImporterInfoService {\r\n\r\n  baseUrl = environment.apiUrl + 'ImporterInfo/';\r\n  decodedToken: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllImporterInfos(fltr: any) {\r\n    return this.http.post(this.baseUrl + 'GetAllImporterInfos', fltr);\r\n  }\r\n  getAllImporterInfosPdf() {\r\n    return this.http.get(this.baseUrl + 'GetAllImporterInfosPdf');\r\n  }\r\n  getImportersToExcel() {\r\n    return this.http.get(this.baseUrl + 'GetImportersToExcel');\r\n  }\r\n  getImporterInfoById(model: any) {\r\n    return this.http.post(this.baseUrl + 'getImporterInfoById', model);\r\n  }\r\n  getdeleteImporter(importerId: any){\r\n    return this.http.delete(this.baseUrl + 'DeleteImporter/'+ importerId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport {map} from 'rxjs/operators';\r\n// import { environment } from 'src/environments/environment.prod';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  constructor(private http: HttpClient) { }\r\n    login(model: any) {\r\n      return this.http.post(this.baseUrl + 'login', model)\r\n      .pipe(\r\n        map((response: any) => {\r\n            const user = response;\r\n            if (user) {\r\n              localStorage.setItem('token', user.token);\r\n              this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n            }\r\n        })\r\n      );\r\n    }\r\n    loggedIn() {\r\n      const token = localStorage.getItem('token');\r\n      return !this.jwtHelper.isTokenExpired(token);\r\n    }\r\n    getUserId() {\r\n      const token = localStorage.getItem('token');\r\n      const r =  this.jwtHelper.decodeToken(token);\r\n      return r.nameid;\r\n    }\r\n    getUserRole() {\r\n      const token = localStorage.getItem('token');\r\n      const r =  this.jwtHelper.decodeToken(token);\r\n      return r.role;\r\n    }\r\n    getUserName() {\r\n      const token = localStorage.getItem('token');\r\n      const m =  this.jwtHelper.decodeToken(token);\r\n      return m.unique_name;\r\n    }\r\n    getOrganizationName() {\r\n      const token = localStorage.getItem('token');\r\n      const r =  this.jwtHelper.decodeToken(token);\r\n      return r.family_name;\r\n    }\r\n    getPosition() {\r\n      const token = localStorage.getItem('token');\r\n      const r =  this.jwtHelper.decodeToken(token);\r\n      return r.email;\r\n    }\r\n    getEmpOrImpName() {\r\n      const token = localStorage.getItem('token');\r\n      const r =  this.jwtHelper.decodeToken(token);\r\n      return r.certserialnumber;\r\n    }\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoginService } from './login.service';\r\n// import { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProformaInvoiceApprovalService {\r\n  baseUrl = environment.apiUrl + 'ProformaInvoiceApproval/';\r\n  baseUrl2 = environment.apiUrl + 'ProformaInvoiceReport/';\r\n  constructor(\r\n      private http: HttpClient,\r\n      private loginService: LoginService\r\n    ) { }\r\n    GetDateWiseSubmittedProformaInvoice(dateRange: any) {\r\n        return this.http.post(this.baseUrl + 'GetDateWiseSubmittedProformaInvoice', dateRange);\r\n    }\r\n    GetAllPendingPorformaInvoices() {\r\n      return this.http.get(this.baseUrl + 'GetAllPendingPorformaInvoices');\r\n    }\r\n    ApproveProformaInvoice(dtls: any) {\r\n      return this.http.post(this.baseUrl + 'ApproveProformaInvoice', dtls);\r\n    }\r\n    RejectProformaInvoice(dtls: any) {\r\n      return this.http.post(this.baseUrl + 'RejectProformaInvoice', dtls);\r\n    }\r\n    //Ashiq added\r\n    getDateWiseApprovalProformaInvoice(dateRange: any){\r\n      return this.http.post(this.baseUrl + 'GetDateWiseApprovalProformaInvoice', dateRange);\r\n    }\r\n    getDateWiseProformaByImporter(model: any) {\r\n      return this.http.post(this.baseUrl2 + 'GetDateWiseProformaByImporter', model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Alert } from 'selenium-webdriver';\r\n// import { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProformaInvoiceReportService {\r\n  baseUrl = environment.apiUrl + 'ProformaReport/';\r\n  constructor(\r\n      private http: HttpClient\r\n    ) { }\r\n\r\n    getDateWiseProformaByImporter(model: any) {\r\n      return this.http.post(this.baseUrl + 'GetDateWiseProformaByImporter', model);\r\n    }\r\n    getImporterWiseCurrentYearProforma(model: any) {\r\n      return this.http.post(this.baseUrl + 'GetImporterWiseCurrentYearProforma', model);\r\n    }\r\n    getCurrentYearProformaInfo(model: any) {\r\n      return this.http.post(this.baseUrl + 'GetCurrentYearProformaInfo', model);\r\n    }\r\n    getDateWiseProformaInfos(model: any) {\r\n      return this.http.post(this.baseUrl + 'GetDateWiseProformaInfos', model);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoginService } from './login.service';\r\n// import { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProformaInvoiceService {\r\n  baseUrl = environment.apiUrl + 'AnnualRequirement/';\r\n  baseUrl2 = environment.apiUrl + 'ProformaInvoice/';\r\n  constructor(\r\n      private http: HttpClient,\r\n      private loginService: LoginService) { }\r\n  getProductListFromAnnualReq(importerDto: any) {\r\n    return this.http.post(this.baseUrl2 + 'GetAnnReqProdDtlsByImp', importerDto);\r\n  }\r\n  getAnnReqProdDtlsByImpEditMode(remainingAmountforPIProductDto: any) {\r\n    return this.http.post(this.baseUrl2 + 'GetAnnReqProdDtlsByImpEditMode', remainingAmountforPIProductDto);\r\n  }\r\n  getCrntYearTotlProformaInvAmtByProd(proformaInvProdTotalAmtDto: any) {\r\n    return this.http.post(this.baseUrl2 + 'GetCrntYearTotlProformaInvAmtByProd', proformaInvProdTotalAmtDto);\r\n  }\r\n  saveProformaInvoiceMst(proMst: any) {\r\n    return this.http.post(this.baseUrl2 + 'SaveProformaInvoiceMst', proMst);\r\n  }\r\n  saveProformaInvoiceDtl(model: any) {\r\n    return this.http.post(this.baseUrl2 + 'SaveProformaInvoiceDtl', model);\r\n  }\r\n  UploadProformaFiles(formData: FormData, id: number) {\r\n    return this.http.post(this.baseUrl2 + 'UploadProformaFiles/' + id, formData);\r\n  }\r\n  getAllProformaInvoiceMstByUser(importer: any) {\r\n    return this.http.post(this.baseUrl2 + 'getAllProformaInvoiceMstByUser', importer);\r\n  }\r\n  getProformaDtlsByProformaMst(proformaMstIdDto: any) {\r\n    return this.http.post(this.baseUrl2 + 'getProformaDtlsByProformaMst', proformaMstIdDto);\r\n  }\r\n  updatePiFile(formData: FormData, poMstId: number) {\r\n    return this.http.post(this.baseUrl2 + 'UpdatePiFile/' + poMstId, formData);\r\n  }\r\n  updateLitFile(formData: FormData, poMstId: number) {\r\n    return this.http.post(this.baseUrl2 + 'UpdateLitFile/' + poMstId, formData);\r\n  }\r\n  updateTestFile(formData: FormData, poMstId: number) {\r\n    return this.http.post(this.baseUrl2 + 'UpdateTestFile/' + poMstId, formData);\r\n  }\r\n  updateOtherFile(formData: FormData, poMstId: number) {\r\n    return this.http.post(this.baseUrl2 + 'UpdateOtherFile/' + poMstId, formData);\r\n  }\r\n  updateProformaInvoiceMst(proMstUpdtDto: any) {\r\n    return this.http.post(this.baseUrl2 + 'UpdateProformaInvoiceMst', proMstUpdtDto);\r\n  }\r\n  updateProformaInvoiceDtl(proforInDtlUpdtDto: any, mstId: number) {\r\n    return this.http.post(this.baseUrl2 + 'UpdateProformaInvoiceDtl/' + mstId, proforInDtlUpdtDto);\r\n  }\r\n  submitProformaInvoice(porMstId: any) {\r\n    return this.http.post(this.baseUrl2 + 'SubmitProformaInvoice', porMstId);\r\n  }\r\n  IsProformaSubmitted(porMst: any) {\r\n    return this.http.post(this.baseUrl2 + 'IsProformaSubmitted', porMst);\r\n  }\r\n  ProformaInvoiceMstReport(poMst: any) {\r\n    return this.http.post(this.baseUrl2 + 'ProformaInvoiceMstReport', poMst);\r\n  }\r\n  proformaInvoiceNoAvailable(model: any) {\r\n    return this.http.post(this.baseUrl2 + 'IsProformaInvoiceNoExist', model);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// import { environment } from 'src/environments/environment.prod';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n    baseUrl = environment.apiUrl + 'Auth/';\r\n    constructor( private http: HttpClient) {}\r\n    register(model) {\r\n        return this.http.post(this.baseUrl + 'RegisterImporter', model, {\r\n            headers: new HttpHeaders({\r\n                Accept : '*/*'\r\n              })\r\n        });\r\n    }\r\n    UploadImporterFile(formData: FormData, id: number) {\r\n        console.log(formData);\r\n        return this.http.post(this.baseUrl + 'UploadImporterFile/' + id, formData);\r\n    }\r\n    isUsernameAvailable(model: any) {\r\n        return this.http.post(this.baseUrl + 'IsUsernameAvailable', model);\r\n    }\r\n    updateInfo(model: any) {\r\n        return this.http.post(this.baseUrl + 'UpdateImporterInfo', model);\r\n    }\r\n    updateNidFile(formData: FormData, id: number) {\r\n        return this.http.post(this.baseUrl + 'UpdateNidFile/' + id, formData);\r\n    }\r\n    verifyCurrentPassword(model: any) {\r\n        return this.http.post(this.baseUrl + 'VerifyCurrentPassword', model);\r\n    }\r\n    verifyCurrentPasswordEmployee(model: any) {\r\n        return this.http.post(this.baseUrl + 'VerifyCurrentPasswordEmployee', model);\r\n    }\r\n    changePassword(model: any) {\r\n        return this.http.post(this.baseUrl + 'ChangePassword', model);\r\n    }\r\n    changePasswordEmployee(model: any) {\r\n        return this.http.post(this.baseUrl + 'ChangePasswordEmployee', model);\r\n    }\r\n    changePasswordAdminSide(model: any) {\r\n        \r\n        return this.http.post(this.baseUrl + 'ChangePasswordAdminSide', model);\r\n    }\r\n    changePasswordAdminSideEmployee(model: any) {\r\n        \r\n        return this.http.post(this.baseUrl + 'ChangePasswordAdminSideEmployee', model);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  baseUrl = environment.apiUrl + 'RoleInfo/';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  createRoleInfo(model: any) {\r\n    return this.http.post(this.baseUrl + 'CreateRoleInfo', model);\r\n  }\r\n\r\n  getAllRoleInfos(fltr: any) {\r\n    return this.http.post(this.baseUrl + 'GetAllRoleInfos', fltr);\r\n  }\r\n\r\n  getRoleInfoById(id: number) {\r\n    return this.http.get(this.baseUrl  + 'GetRoleInfo/'+ id);\r\n  }\r\n  editRoleInfo(model: any, id: number) {\r\n    return this.http.put(this.baseUrl + 'EditRoleInfo/' + id, model);\r\n  }\r\n  deleteRoleInfo(id: number) {\r\n    return this.http.delete(this.baseUrl + 'DeleteRoleInfo/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedDataService {\r\n\r\n  constructor() { }\r\n  record:any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserRoleAssignService {\r\n\r\n  baseUrl = environment.apiUrl + 'UserRoleConf/';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  createUserRoleConf(model: any) {\r\n    return this.http.post(this.baseUrl + 'CreateUserRoleConf', model);\r\n  }\r\n\r\n  getAllUserRoleConfs(fltr: any) {\r\n    return this.http.post(this.baseUrl + 'GetAllUserRoleConfs', fltr);\r\n  }\r\n\r\n  getUserRoleConfById(id: number) {\r\n    return this.http.get(this.baseUrl  + 'GetUserRoleConf/'+ id);\r\n  }\r\n  editUserRoleConf(model: any, id: number) {\r\n    return this.http.put(this.baseUrl + 'EditUserRoleConf/' + id, model);\r\n  }\r\n  deleteUserRoleConf(id: number) {\r\n    return this.http.delete(this.baseUrl + 'DeleteUserRoleConf/' + id);\r\n  }\r\n  getAllUserForLookupTable(fltr:any){\r\n    return this.http.post(this.baseUrl + 'GetAllUserForLookupTable', fltr);\r\n  }\r\n  getAllRoleForLookupTable(fltr:any){\r\n    return this.http.post(this.baseUrl + 'GetAllRoleForLookupTable', fltr);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWRhc2hib2FyZC9hZG1pbi1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminDashboardService } from '../_services/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n  adminDashboardInfo: IAdminDashboardInfo;\r\n  constructor(\r\n    private adminDashboardService: AdminDashboardService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this. getDashboardInfo();\r\n    this.adminDashboardInfo = {\r\n      pendingProformaApproval: 0,\r\n      approvedProforma: 0,\r\n      rejectedProforma: 0,\r\n      totalProforma: 0,\r\n      partialApprovedProforma: 0,\r\n      totalImporter: 0,\r\n      totalEmployee: 0\r\n    };\r\n  }\r\n  getDashboardInfo() {\r\n    this.adminDashboardService.getDashboardInfo().subscribe(resp => {\r\n      this.adminDashboardInfo = resp as IAdminDashboardInfo;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\ninterface IAdminDashboardInfo {\r\n  pendingProformaApproval: number | undefined | null;\r\n  totalProforma: number | undefined | null;\r\n  approvedProforma: number  | undefined | null;\r\n  rejectedProforma: number | undefined | null;\r\n  partialApprovedProforma: number | undefined | null;\r\n  totalImporter: number | undefined | null;\r\n  totalEmployee: number | undefined | null;\r\n}\r\n","export default \".btn-add-product{\\r\\n    font-weight: bolder !important;\\r\\n}\\r\\nform{\\r\\n    width: 100%;\\r\\n    padding: 2% 1% 1% 1%;\\r\\n}\\r\\nfieldset.scheduler-border {\\r\\n    border: 1px solid #45A845 !important;\\r\\n    padding: 0 5px 5px 5px !important;\\r\\n    margin: 0px 0 0 0 !important;\\r\\n    box-shadow:  0px 0px 0px 0px #000;\\r\\n}\\r\\nlegend.scheduler-border {\\r\\n        font-size: 1.2em !important;\\r\\n        font-weight: bold !important;\\r\\n        text-align: left !important;\\r\\n        width:auto;\\r\\n        padding:0 10px;\\r\\n        border-bottom:none;\\r\\n        margin-bottom: 0;\\r\\n    }\\r\\n.form-control{\\r\\n        background-image: none;\\r\\n        border: 1px solid green !important;\\r\\n        border-radius: none;\\r\\n    }\\r\\n.is-invalid {\\r\\n        border: 1px solid red !important;\\r\\n    }\\r\\n.invalid-feedback{\\r\\n        font-weight: 600;\\r\\n    }\\r\\n.table>thead>tr>th{\\r\\n        vertical-align: top !important;\\r\\n    }\\r\\nul {\\r\\n        padding-left: 5px !important;\\r\\n        margin-bottom: 1px !important;\\r\\n        border-bottom: 1px solid lightgrey !important;\\r\\n    }\\r\\n.icon-action\\r\\n    {\\r\\n       margin-right: -2px; ;\\r\\n   }\\r\\n.btn-grid-action{\\r\\n     margin-left:22% !important;\\r\\n }\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #ffffff;\\r\\n}\\r\\n.table>tbody>tr>td{\\r\\n    vertical-align: middle !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n}\\r\\n.table>thead>tr{\\r\\n    border-bottom: 2px solid #c8c8c8;\\r\\n}\\r\\n.btn.disabled, .btn[disabled], fieldset[disabled] .btn{\\r\\n    opacity: .50 !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5udWFsLXJlcXVpcmVtZW50L2FubnVhbC1yZXF1aXJlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0FBQ2xDO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxvQ0FBb0M7SUFDcEMsaUNBQWlDO0lBQ2pDLDRCQUE0QjtJQUVwQixpQ0FBaUM7QUFDN0M7QUFFSTtRQUNJLDJCQUEyQjtRQUMzQiw0QkFBNEI7UUFDNUIsMkJBQTJCO1FBQzNCLFVBQVU7UUFDVixjQUFjO1FBQ2Qsa0JBQWtCO1FBQ2xCLGdCQUFnQjtJQUNwQjtBQUNBO1FBQ0ksc0JBQXNCO1FBQ3RCLGtDQUFrQztRQUNsQyxtQkFBbUI7SUFDdkI7QUFDQTtRQUNJLGdDQUFnQztJQUNwQztBQUNBO1FBQ0ksZ0JBQWdCO0lBQ3BCO0FBQ0E7UUFDSSw4QkFBOEI7SUFDbEM7QUFFQTtRQUNJLDRCQUE0QjtRQUM1Qiw2QkFBNkI7UUFDN0IsNkNBQTZDO0lBQ2pEO0FBQ0E7O09BRUcsa0JBQWtCO0dBQ3RCO0FBQ0Y7S0FDSSwwQkFBMEI7Q0FDOUI7QUFDQTtJQUNHLDhCQUE4QjtJQUM5Qix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGlDQUFpQztJQUNqQyx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksdUJBQXVCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvYW5udWFsLXJlcXVpcmVtZW50L2FubnVhbC1yZXF1aXJlbWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1hZGQtcHJvZHVjdHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXIgIWltcG9ydGFudDtcclxufVxyXG5mb3Jte1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAyJSAxJSAxJSAxJTtcclxufVxyXG5maWVsZHNldC5zY2hlZHVsZXItYm9yZGVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0NUE4NDUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgNXB4IDVweCA1cHggIWltcG9ydGFudDtcclxuICAgIG1hcmdpbjogMHB4IDAgMCAwICFpbXBvcnRhbnQ7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6ICAwcHggMHB4IDBweCAwcHggIzAwMDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogIDBweCAwcHggMHB4IDBweCAjMDAwO1xyXG59XHJcblxyXG4gICAgbGVnZW5kLnNjaGVkdWxlci1ib3JkZXIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yZW0gIWltcG9ydGFudDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDtcclxuICAgICAgICB3aWR0aDphdXRvO1xyXG4gICAgICAgIHBhZGRpbmc6MCAxMHB4O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206bm9uZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgLmZvcm0tY29udHJvbHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZWVuICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogbm9uZTtcclxuICAgIH1cclxuICAgIC5pcy1pbnZhbGlkIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5pbnZhbGlkLWZlZWRiYWNre1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB9XHJcbiAgICAudGFibGU+dGhlYWQ+dHI+dGh7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIHVsIHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGdyZXkgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5pY29uLWFjdGlvblxyXG4gICAge1xyXG4gICAgICAgbWFyZ2luLXJpZ2h0OiAtMnB4OyA7XHJcbiAgIH1cclxuIC5idG4tZ3JpZC1hY3Rpb257XHJcbiAgICAgbWFyZ2luLWxlZnQ6MjIlICFpbXBvcnRhbnQ7XHJcbiB9XHJcbiAudGFibGU+dGhlYWQ+dHI+dGh7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xyXG59XHJcbi50YWJsZT50Ym9keT50cj50ZHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjOGM4Yzg7XHJcbn1cclxuLnRhYmxlPnRoZWFkPnRye1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjOGM4Yzg7XHJcbn1cclxuLmJ0bi5kaXNhYmxlZCwgLmJ0bltkaXNhYmxlZF0sIGZpZWxkc2V0W2Rpc2FibGVkXSAuYnRue1xyXG4gICAgb3BhY2l0eTogLjUwICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { BsModalService, BsModalRef, ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CurrencyService } from '../_services/currency.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { AnnualRequirementService } from '../_services/annual-requirement.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from '../common/app-pagedResult';\r\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\r\nimport { Table } from 'primeng/table';\r\nimport { PrimengTableHelper } from '../helpers/PrimengTableHelper';\r\nimport 'jspdf-autotable';\r\nimport * as jsPDF from 'jspdf';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IGetImporterForViewDto } from '../importer/importer-management/importer-management.component';\r\n@Component({\r\n  selector: 'app-annual-requirement',\r\n  templateUrl: './annual-requirement.component.html',\r\n  styleUrls: ['./annual-requirement.component.css']\r\n})\r\nexport class AnnualRequirementComponent implements OnInit {\r\n  @ViewChild('annualReqsModal', { static: false }) annualReqsModal: TemplateRef<any>;\r\n  @ViewChild('taskmodal', { static: false }) requirementmodal: TemplateRef<any>;\r\n  @ViewChild('confirmModal', { static: false }) confirmModal: TemplateRef<any>;\r\n  @ViewChild('annualReqSubmissionConfirmModal', { static: false }) annualReqSubmissionConfirmModal: TemplateRef<any>;\r\n  //\r\n  @ViewChild('annualReqsModalNew', { static: true }) annualReqsModalNew: ModalDirective;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static: true }) paginator: Paginator;\r\n\r\n  filterText = '';\r\n  primengTableHelper: PrimengTableHelper;\r\n  active = false;\r\n  //\r\n  modalRef: BsModalRef;\r\n  annualReqSubmissionConfirmRef: BsModalRef;\r\n  annualRequirementsForm: FormGroup;\r\n  annualRequirementMstForm: FormGroup;\r\n  annualReqNo: any;\r\n  mstNo: number;\r\n  currencies: ICurrency[];\r\n  annualRequirements: IAnnualRequirementDtl[] = [];\r\n  modalTitle = '';\r\n  addMode = false;\r\n  editMode = false;\r\n  updateProd: IAnnualRequirementDtl;\r\n  annReqs: IAllAnnualRequirements[] = [];\r\n  updateProdType = '';\r\n  public loading = false;\r\n  searchText = '';\r\n  p: any = 1;\r\n  currentDateString = new Date();\r\n  annReqUpdateMode = false;\r\n  userRole: any;\r\n  checkImporterId: any;\r\n  submissionDateReport: string;\r\n  submitButtonDisable = true;\r\n  saveUpdateMsg = '';\r\n  isSubmitted = false;\r\n  updateBtnDisable = false;\r\n  saveButtonTitle = 'Save';\r\n  importerInfo: IGetImporterForViewDto;\r\n  orgName='';\r\n  //Product Type\r\n  productTypes = [\r\n    { id: 1, name: 'Acidifier/mold inhibitory Meal' },\r\n    { id: 2, name: 'Active Yeasts' },\r\n    { id: 3, name: 'Ammonia gas reducer' },\r\n    { id: 4, name: 'Anticaking agent' },\r\n    { id: 5, name: 'Antioxidants' },\r\n    { id: 6, name: 'Appetizer' },\r\n    { id: 7, name: 'Betaine' },\r\n    { id: 8, name: 'Bolus (Vit/min/prebiotics/probiotics)' },\r\n    { id: 9, name: 'Choline Chloride' },\r\n    { id: 10, name: 'Coccidiostat' },\r\n    { id: 11, name: 'Copper Sulphate' },\r\n    { id: 12, name: 'Corn Gluten Meal' },\r\n    { id: 13, name: 'Corn Proein Concentrate' },\r\n    { id: 14, name: 'Corn/Maize' },\r\n    { id: 15, name: 'Cottonseed Extraction' },\r\n    { id: 16, name: 'Customised premix' },\r\n    { id: 17, name: 'DDGS' },\r\n    { id: 18, name: 'De Oil Rice Bran' },\r\n    { id: 19, name: 'Di-calcium Phosphate (DCP)' },\r\n    { id: 20, name: 'Disinfectants' },\r\n    { id: 21, name: 'Disodium Sulphate' },\r\n    { id: 22, name: 'Emulsifier' },\r\n    { id: 23, name: 'Enzymes' },\r\n    { id: 24, name: 'Ferrous Sulphate' },\r\n    { id: 25, name: 'Fish Meal' },\r\n    { id: 26, name: 'Fish Oil (feed grade)' },\r\n    { id: 27, name: 'Flavoring agent/Sweetner' },\r\n    { id: 28, name: 'Flours & Meals of Soyabeans' },\r\n    { id: 29, name: 'Hypochlorous acid' },\r\n    { id: 30, name: 'Immune enhancer' },\r\n    { id: 31, name: 'Inactive yeast/single cell microbes (dead)' },\r\n    { id: 32, name: 'Kidney protector' },\r\n    { id: 33, name: 'L-Agrinine' },\r\n    { id: 34, name: 'L-Threonine' },\r\n    { id: 35, name: 'L-Tryptophan' },\r\n    { id: 36, name: 'L-Valine' },\r\n    { id: 37, name: 'Lecithins & other Phosphoaminolipids' },\r\n    { id: 38, name: 'Lice Controller' },\r\n    { id: 39, name: 'Limestone' },\r\n    { id: 40, name: 'Liver protector' },\r\n    { id: 41, name: 'Lysine' },\r\n    { id: 42, name: 'Methionine' },\r\n    { id: 43, name: 'Mono/Tricalcium Phosphate' },\r\n    { id: 44, name: 'Nucleic acids & their salts' },\r\n    { id: 45, name: 'Oil cake & other solid residue of soybean oil' },\r\n    { id: 46, name: 'Organic acids' },\r\n    { id: 47, name: 'Others' },\r\n    { id: 48, name: 'Palm Kernal Cake' },\r\n    { id: 49, name: 'Pellet binder' },\r\n    { id: 50, name: 'Phytogenic essential oils' },\r\n    { id: 51, name: 'Pigmenter' },\r\n    { id: 52, name: 'Plant extracts (feed grade)' },\r\n    { id: 53, name: 'Poultry Meal' },\r\n    { id: 54, name: 'Poultry/Dairy Supplement & Additives' },\r\n    { id: 55, name: 'Preservatives' },\r\n    { id: 56, name: 'Probiotics/Prebiotics/combination' },\r\n    { id: 57, name: 'Rapeseed Extraction' },\r\n    { id: 58, name: 'Raw milk preservatives' },\r\n    { id: 59, name: 'Sea Weeds & Algae' },\r\n    { id: 60, name: 'Sodium Hydrogen Sulphate' },\r\n    { id: 61, name: 'Sodium/Calcium butyrate' },\r\n    { id: 62, name: 'Stabilizer/indicator' },\r\n    { id: 63, name: 'Toxin binder & deactivator' },\r\n    { id: 64, name: 'Vegetable fats' },\r\n    { id: 65, name: 'Veterinary Medicine (Antibiotics)' },\r\n    { id: 66, name: 'Veterinary Medicine (Hormones)' },\r\n    { id: 67, name: 'Veterinary Medicine (Other products)' },\r\n    { id: 68, name: 'Vit or Min or Aminoacids premix or their combination (feed grade)' },\r\n    { id: 69, name: 'Vit/Min/Aminoacids Premix or Combination' },\r\n    { id: 70, name: 'Wheat Bran' },\r\n    { id: 71, name: 'Veterinary Medicine (Vaccine)' },\r\n  ];\r\n  //selectedProductType=1;\r\n  //prodType='Acidifier/mold inhibitory Meal';\r\n  selectedProductId: number;\r\n  //\r\n\r\n\r\n  todayDate = this.currentDateString.getDate() + '/' + (this.currentDateString.getMonth() + 1) + '/' + this.currentDateString.getFullYear();\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private currencyService: CurrencyService,\r\n    private alertify: AlertifyService,\r\n    private loginService: LoginService,\r\n    private annualRequirementService: AnnualRequirementService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createAnnualRequirementForm();\r\n    //this.getCurrencies();\r\n    this.createAnnualRequirementMstForm();\r\n    this.checkUserRole();\r\n  }\r\n  //\r\n  getAll(event?: LazyLoadEvent) {\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n\r\n    const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting: this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n\r\n    if (this.userRole == \"SA\") {\r\n      this.annualRequirementService.getAllAnnualRequirementsNew(fltr).subscribe(result => {\r\n        const a = result as IPagedResultDto;\r\n        console.log(a);\r\n        this.primengTableHelper.totalRecordsCount = a.totalCount;\r\n        this.primengTableHelper.records = a.items;\r\n        this.primengTableHelper.hideLoadingIndicator();\r\n        // this.loading = false;\r\n      }, err => {\r\n        // this.loading = false;\r\n        this.alertify.warning('No data found');\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n  getAllAnnualRequirements2(event?: LazyLoadEvent) {\r\n    // if (this.primengTableHelper.shouldResetPaging(event)) {\r\n    //   this.paginator.changePage(0);\r\n    //   return;\r\n    // }\r\n\r\n    // this.primengTableHelper.showLoadingIndicator();\r\n\r\n    // const fltr: IGetAllInputFilterDto = {\r\n    //   filter: this.filterText,\r\n    //   sorting: this.primengTableHelper.getSorting(this.dataTable),\r\n    //   skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\r\n    //   maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    // }\r\n    this.loading = true;\r\n    this.annualRequirementService.getAllAnnualRequirements().subscribe(resp => {\r\n      this.annReqs = resp as IAllAnnualRequirements[];\r\n      this.openModal(this.annualReqsModal);\r\n      this.loading = false;\r\n    }, err => {\r\n      this.loading = false;\r\n      this.alertify.warning('No data found');\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n  //\r\n  checkUserRole() {\r\n    this.userRole = this.loginService.getUserRole();\r\n    if (this.userRole == \"SA\") {\r\n      this.annReqUpdateMode = true;\r\n    }\r\n  }\r\n  createAnnualRequirementMstForm() {\r\n    this.annualRequirementMstForm = new FormGroup({\r\n      annualReqNo: new FormControl(''),\r\n      submissionDate: new FormControl('')\r\n    });\r\n  }\r\n  createAnnualRequirementForm() {\r\n    this.annualRequirementsForm = new FormGroup({\r\n      prodName: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(50)\r\n      ]),\r\n      // prodType: new FormControl('', [\r\n      //   Validators.required,\r\n      //   Validators.maxLength(500)\r\n      // ]),\r\n      prodType: new FormControl('Acidifier/mold inhibitory Meal', [Validators.required]),\r\n      hsCode: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(20)\r\n      ]),\r\n      // manufacturer: new FormControl('', [\r\n      //   Validators.required,\r\n      //   Validators.maxLength(100)\r\n      // ]),\r\n      // countryOfOrigin: new FormControl('', [\r\n      //   Validators.required,\r\n      //   Validators.maxLength(20)\r\n      // ]),\r\n      packSize: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(100)\r\n      ]),\r\n      // tentativeUnits: new FormControl('', [\r\n      //   Validators.required,\r\n      //   Validators.maxLength(8),\r\n      //   Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      // ]),\r\n      tentativeUnits: new FormControl('', [\r\n        //  Validators.required,\r\n        //   Validators.maxLength(8),\r\n        Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      ]),\r\n\r\n      totalAmount: new FormControl('', [\r\n        //   Validators.required,\r\n        //   Validators.maxLength(6),\r\n        Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      ]),\r\n      // unitPrice: new FormControl('', [\r\n      //   Validators.required,\r\n      //   Validators.maxLength(8),\r\n      //   Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      // ]),\r\n      // currency: new FormControl('', [Validators.required]),\r\n      // exchangeRate: new FormControl('', [Validators.required]),\r\n      // totalPrice: new FormControl('', Validators.required),\r\n      // totalPriceInBdt: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-lg',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  openConfirmModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-md',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  openRequireModal(mode: string) {\r\n    if (mode === 'add') {\r\n      this.modalTitle = 'Add Product';\r\n      this.annualRequirementsForm.reset();\r\n      //this.annualRequirementsForm.get('currency').setValue('');\r\n    }\r\n    if (mode === 'update') {\r\n      this.modalTitle = 'Update Product';\r\n    }\r\n    this.editMode = false;\r\n    this.addMode = true;\r\n    this.openModal(this.requirementmodal);\r\n  }\r\n  // getCurrencies() {\r\n  //   this.currencyService.getCurrency().subscribe(\r\n  //     resp => {\r\n  //       this.currencies = resp as ICurrency[];\r\n  //     },\r\n  //     error => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // }\r\n  resetFilter() {\r\n    this.searchText = '';\r\n    this.p = 1;\r\n  }\r\n  // onCUrrencyChange() {\r\n  //   const curren = this.annualRequirementsForm.value.currency;\r\n  //   let exchRate = 0;\r\n  //   // tslint:disable-next-line: only-arrow-functions\r\n  //   this.currencies.forEach(function (item, index) {\r\n  //     if (item.currency === curren) {\r\n  //       exchRate = item.exchangeRate;\r\n  //     }\r\n  //   });\r\n  //   const unitPrice = this.annualRequirementsForm.value.unitPrice;\r\n  //   const tentaUnit = this.annualRequirementsForm.value.tentativeUnits;\r\n  //   const totalAmount = this.annualRequirementsForm.value.totalAmount;\r\n  //   if (tentaUnit > 0) {\r\n  //     const totalPriceInForeignCurrency = unitPrice * tentaUnit;\r\n  //     const totPriceInBdt = totalPriceInForeignCurrency * exchRate;\r\n  //     this.annualRequirementsForm.get('exchangeRate').setValue(exchRate);\r\n  //     this.annualRequirementsForm.get('totalPrice').setValue(totalPriceInForeignCurrency);\r\n  //     this.annualRequirementsForm.get('totalPriceInBdt').setValue(totPriceInBdt);\r\n  //   }\r\n  //   else {\r\n  //     const totalPriceInForeignCurrency = unitPrice * totalAmount;\r\n  //     const totPriceInBdt = totalPriceInForeignCurrency * exchRate;\r\n  //     this.annualRequirementsForm.get('exchangeRate').setValue(exchRate);\r\n  //     this.annualRequirementsForm.get('totalPrice').setValue(totalPriceInForeignCurrency);\r\n  //     this.annualRequirementsForm.get('totalPriceInBdt').setValue(totPriceInBdt);\r\n  //   }\r\n\r\n  // }\r\n  // resetCurrency() {\r\n  //   this.annualRequirementsForm.get('currency').setValue('');\r\n  // }\r\n  //Ashiq created\r\n  isDisableTon() {\r\n    let isDisableTon = this.annualRequirementsForm.value.tentativeUnits;\r\n    if (isDisableTon) {\r\n      this.annualRequirementsForm.controls['totalAmount'].disable();\r\n    }\r\n    else {\r\n      this.annualRequirementsForm.controls['totalAmount'].enable();\r\n    }\r\n  }\r\n  isDisableUnit() {\r\n    let isDisableUnit = this.annualRequirementsForm.value.totalAmount;\r\n    if (isDisableUnit) {\r\n      this.annualRequirementsForm.controls['tentativeUnits'].disable();\r\n    }\r\n    else {\r\n      this.annualRequirementsForm.controls['tentativeUnits'].enable();\r\n    }\r\n  }\r\n  //\r\n  addUpdateProduct() {\r\n\r\n    if (this.addMode === true) {\r\n      const a: IAnnualRequirementDtl = {\r\n        id: 0,\r\n        annReqMstId: 0,\r\n        prodName: this.annualRequirementsForm.value.prodName,\r\n        prodType: this.annualRequirementsForm.value.prodType,\r\n        hsCode: this.annualRequirementsForm.value.hsCode,\r\n        packSize: this.annualRequirementsForm.value.packSize,\r\n        //manufacturer: this.annualRequirementsForm.value.manufacturer,\r\n        // countryOfOrigin: this.annualRequirementsForm.value.countryOfOrigin,\r\n        tentativeUnits: this.annualRequirementsForm.value.tentativeUnits,\r\n        // unitPrice: this.annualRequirementsForm.value.unitPrice,\r\n        // totalPrice: this.annualRequirementsForm.value.totalPrice,\r\n        // totalPriceInBdt: this.annualRequirementsForm.value.totalPriceInBdt,\r\n        //currency: this.annualRequirementsForm.value.currency,\r\n        //exchangeRate: this.annualRequirementsForm.value.exchangeRate,\r\n        totalAmount: this.annualRequirementsForm.value.totalAmount\r\n      };\r\n      for (const i of this.annualRequirements) {\r\n        if (i.prodName === a.prodName && i.packSize == a.packSize) {\r\n          this.alertify.warning('duplicate product');\r\n          return false;\r\n        }\r\n      }\r\n      this.annualRequirements.push(a);\r\n      this.modalRef.hide();\r\n      this.annualRequirementsForm.reset();\r\n    }\r\n    if (this.editMode === true) {\r\n      const a: IAnnualRequirementDtl = {\r\n        id: 0,\r\n        annReqMstId: 0,\r\n        prodName: this.annualRequirementsForm.value.prodName,\r\n        prodType: this.annualRequirementsForm.value.prodType,\r\n        hsCode: this.annualRequirementsForm.value.hsCode,\r\n        packSize: this.annualRequirementsForm.value.packSize,\r\n        // manufacturer: this.annualRequirementsForm.value.manufacturer,\r\n        // countryOfOrigin: this.annualRequirementsForm.value.countryOfOrigin,\r\n        tentativeUnits: this.annualRequirementsForm.value.tentativeUnits,\r\n        // unitPrice: this.annualRequirementsForm.value.unitPrice,\r\n        // totalPrice: this.annualRequirementsForm.value.totalPrice,\r\n        // totalPriceInBdt: this.annualRequirementsForm.value.totalPriceInBdt,\r\n        // currency: this.annualRequirementsForm.value.currency,\r\n        // exchangeRate: this.annualRequirementsForm.value.exchangeRate,\r\n        totalAmount: this.annualRequirementsForm.value.totalAmount\r\n      };\r\n      this.annualRequirements.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).prodType = a.prodType;\r\n      this.annualRequirements.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).hsCode = a.hsCode;\r\n      this.annualRequirements.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).packSize = a.packSize;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).manufacturer = a.manufacturer;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).countryOfOrigin = a.countryOfOrigin;\r\n      this.annualRequirements.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).tentativeUnits = a.tentativeUnits;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).unitPrice = a.unitPrice;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).totalPrice = a.totalPrice;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).totalPriceInBdt = a.totalPriceInBdt;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).currency = a.currency;\r\n      // this.annualRequirements.find(\r\n      //   item => item.prodName === this.updateProd.prodName\r\n      // ).exchangeRate = a.exchangeRate;\r\n      this.annualRequirements.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).totalAmount = a.totalAmount;\r\n      this.annualRequirements.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).prodName = a.prodName;\r\n      this.modalRef.hide();\r\n      this.annualRequirementsForm.reset();\r\n    }\r\n  }\r\n  removeProduct(p: IAnnualRequirementDtl) {\r\n    debugger;\r\n    if (this.annReqUpdateMode === true) {\r\n      this.alertify.warning('Delete option disabled for old annual requirements');\r\n      return false;\r\n    }\r\n    const result = confirm('Are you sure want to delete?');\r\n    if (result === true) {\r\n      for (let i = 0; i < this.annualRequirements.length; i++) {\r\n        if (this.annualRequirements[i].prodName === p.prodName) {\r\n          this.annualRequirements.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  editProduct(p: IAnnualRequirementDtl) {\r\n\r\n    if (this.annReqUpdateMode === true) {\r\n      this.alertify.warning('Edit option disabled for old annual requirements');\r\n      return false;\r\n    }\r\n    this.updateProd = p;\r\n    this.annualRequirementsForm.setValue({\r\n      prodName: p.prodName,\r\n      prodType: p.prodType,\r\n      hsCode: p.hsCode,\r\n      packSize: p.packSize,\r\n      // manufacturer: p.manufacturer,\r\n      // countryOfOrigin: p.countryOfOrigin,\r\n      tentativeUnits: p.tentativeUnits || undefined || null,\r\n      // unitPrice: p.unitPrice,\r\n      // totalPrice: p.totalPrice,\r\n      // totalPriceInBdt: p.totalPriceInBdt,\r\n      // currency: p.currency,\r\n      // exchangeRate: p.exchangeRate,\r\n      totalAmount: p.totalAmount || undefined || null\r\n    });\r\n    this.openRequireModal('update');\r\n    this.editMode = true;\r\n    this.addMode = false;\r\n  }\r\n  confirm(): void {\r\n    this.modalRef.hide();\r\n    if (this.userRole == \"SA\") {\r\n      this.updateAnnualRequirement();\r\n    }\r\n    else {\r\n      if (this.annualReqNo) {\r\n        this.updateAnnualRequirement()\r\n      }\r\n      else {\r\n        this.saveAnnualRequirement();\r\n      }\r\n    }\r\n  }\r\n  decline(): void {\r\n    this.modalRef.hide();\r\n  }\r\n  confirmAnnualReqSubmission() {\r\n\r\n    if (this.annualRequirements.length < 1) {\r\n      this.loading = false;\r\n      this.alertify.warning('No Product to save');\r\n      return;\r\n    }\r\n    if (!this.annualReqNo) {\r\n      this.saveUpdateMsg = 'সেভ';\r\n    } else {\r\n      this.saveUpdateMsg = 'আপডেট';\r\n    }\r\n    this.openConfirmModal(this.confirmModal);\r\n  }\r\n  saveAnnualRequirement() {\r\n    this.loading = true;\r\n    if (!this.checkImporterId) {\r\n      this.checkImporterId = this.loginService.getEmpOrImpName();;\r\n    }\r\n\r\n    const today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    const yyyy = today.getFullYear();\r\n\r\n    const currentDate = mm + '-' + dd + '-' + yyyy;\r\n    const annReqMst: IAnnualRequirementMst = {\r\n      id: 0,\r\n      annualReqNo: null,\r\n      importerId: this.checkImporterId,\r\n      submissionDate: new Date(),\r\n      confirmation: false\r\n    };\r\n    const importer: IImporterForAnnReqDto = {\r\n      importerId: this.checkImporterId\r\n    };\r\n    let res: any;\r\n    let exist: any;\r\n    this.annualRequirementService.IsAnnualRequirementAlreadySubmittedThisYear(importer).subscribe(response => {\r\n      res = response;\r\n\r\n      if (!res) {\r\n        this.annualRequirementService.IsAnnualRequirementExist(importer).subscribe(response => {\r\n          exist = response;\r\n          if (!exist) {\r\n            this.annualRequirementService.saveAnnualRequirementMst(annReqMst).subscribe(\r\n              resp => {\r\n                const annualReqMst = resp as IAnnualRequirementMst;\r\n                let annReqDtls: IAnnualRequirementDtl[] = [];\r\n                // tslint:disable-next-line: prefer-for-of\r\n                for (let i = 0; i < this.annualRequirements.length; i++) {\r\n                  const obj: IAnnualRequirementDtl = {\r\n                    id: 0,\r\n                    annReqMstId: annualReqMst.id,\r\n                    prodName: this.annualRequirements[i].prodName,\r\n                    prodType: this.annualRequirements[i].prodType,\r\n                    hsCode: this.annualRequirements[i].hsCode,\r\n                    // manufacturer: this.annualRequirements[i].manufacturer,\r\n                    //  countryOfOrigin: this.annualRequirements[i].countryOfOrigin,\r\n                    packSize: this.annualRequirements[i].packSize,\r\n                    tentativeUnits: this.annualRequirements[i].tentativeUnits,\r\n                    // unitPrice: this.annualRequirements[i].unitPrice,\r\n                    // totalPrice: this.annualRequirements[i].totalPrice,\r\n                    // totalPriceInBdt: this.annualRequirements[i].totalPriceInBdt,\r\n                    // currency: this.annualRequirements[i].currency,\r\n                    // exchangeRate: this.annualRequirements[i].exchangeRate,\r\n                    totalAmount: this.annualRequirements[i].totalAmount\r\n                  };\r\n                  annReqDtls.push(obj);\r\n                }\r\n                this.annualRequirementService\r\n                  .saveAnnualRequirementDtl(annReqDtls)\r\n                  .subscribe(\r\n                    respon => {\r\n                      const annualReqDtl = respon as IAnnualRequirementDtl[];\r\n                      this.loading = false;\r\n                      this.alertify.success('Annual Requirement Save successful');\r\n                      this.annualRequirements = [];\r\n                      annReqDtls = [];\r\n                      this.submitButtonDisable = false;\r\n                    },\r\n                    err => {\r\n                      this.alertify.error('Annual Requirement Save Failed');\r\n                      console.log(err);\r\n                    }\r\n                  );\r\n              },\r\n              error => {\r\n                this.alertify.error('Annual Requirement Save Failed');\r\n                console.log(error);\r\n              });\r\n          }\r\n          else {\r\n            this.loading = false;\r\n            this.submitButtonDisable = true;\r\n            this.alertify.warning('Annual Requirement already created for current year');\r\n            this.resetPage();\r\n          }\r\n        },\r\n        error => {\r\n          this.alertify.error('Exist Annual Requirement load Failed');\r\n          console.log(error);\r\n        });\r\n\r\n      } else {\r\n        this.loading = false;\r\n        this.submitButtonDisable = true;\r\n        this.alertify.warning('Annual Requirement already submitted for current year');\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  updateAnnualRequirement() {\r\n    this.loading = true;\r\n    if (!this.checkImporterId) {\r\n      this.checkImporterId = this.loginService.getEmpOrImpName();;\r\n    }\r\n\r\n    const today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    const yyyy = today.getFullYear();\r\n\r\n    const currentDate = mm + '-' + dd + '-' + yyyy;\r\n    const annReqMst: IAnnualRequirementMst = {\r\n      id: this.mstNo,\r\n      annualReqNo: this.annualReqNo,\r\n      importerId: this.checkImporterId,\r\n      submissionDate: new Date(),\r\n      confirmation: false\r\n    };\r\n    const importer: IImporterForAnnReqDto = {\r\n      importerId: this.checkImporterId\r\n    };\r\n    this.annualRequirementService.updateAnnualRequirementMst(annReqMst).subscribe(\r\n      resp => {\r\n        const annualReqMst = resp as IAnnualRequirementMst;\r\n        let annReqDtls: IAnnualRequirementDtl[] = [];\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < this.annualRequirements.length; i++) {\r\n          const obj: IAnnualRequirementDtl = {\r\n            id: this.annualRequirements[i].id,\r\n            annReqMstId: annualReqMst.id,\r\n            prodName: this.annualRequirements[i].prodName,\r\n            prodType: this.annualRequirements[i].prodType,\r\n            hsCode: this.annualRequirements[i].hsCode,\r\n            //manufacturer: this.annualRequirements[i].manufacturer,\r\n            // countryOfOrigin: this.annualRequirements[i].countryOfOrigin,\r\n            packSize: this.annualRequirements[i].packSize,\r\n            tentativeUnits: this.annualRequirements[i].tentativeUnits,\r\n            // unitPrice: this.annualRequirements[i].unitPrice,\r\n            // totalPrice: this.annualRequirements[i].totalPrice,\r\n            // totalPriceInBdt: this.annualRequirements[i].totalPriceInBdt,\r\n            // currency: this.annualRequirements[i].currency,\r\n            // exchangeRate: this.annualRequirements[i].exchangeRate,\r\n            totalAmount: this.annualRequirements[i].totalAmount\r\n          };\r\n          annReqDtls.push(obj);\r\n        }\r\n        this.annualRequirementService\r\n          .saveAnnualRequirementDtl(annReqDtls)\r\n          .subscribe(\r\n            respon => {\r\n              const annualReqDtl = respon as IAnnualRequirementDtl[];\r\n              this.loading = false;\r\n              this.alertify.success('Annual Requirement Update successful');\r\n              this.annualRequirements = [];\r\n              annReqDtls = [];\r\n              this.submitButtonDisable = false;\r\n            },\r\n            err => {\r\n              this.alertify.error('Annual Requirement Update Failed');\r\n              console.log(err);\r\n            }\r\n          );\r\n      },\r\n    );\r\n\r\n  }\r\n  //annual Req save submit work-Ashiq-18-11-2020\r\n  confirmAnnualRequirementSubmission() {\r\n    this.openAnnualRequirementSubmissionConfirmModal(this.annualReqSubmissionConfirmModal);\r\n  }\r\n  openAnnualRequirementSubmissionConfirmModal(template: TemplateRef<any>) {\r\n    this.annualReqSubmissionConfirmRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-md',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  confirmSubmit() {\r\n    this.annualReqSubmissionConfirmRef.hide();\r\n    this.submitAnnualRequirement();\r\n  }\r\n  declineSubmit() {\r\n    this.annualReqSubmissionConfirmRef.hide();\r\n  }\r\n  submitAnnualRequirement() {\r\n    if (!this.checkImporterId) {\r\n      this.checkImporterId = this.loginService.getEmpOrImpName();\r\n    }\r\n    const today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    const yyyy = today.getFullYear();\r\n\r\n    const currentDate = mm + '-' + dd + '-' + yyyy;\r\n    const annReqMst: IAnnualRequirementMst = {\r\n      id: this.mstNo,\r\n      importerId: this.checkImporterId,\r\n      annualReqNo: this.annualReqNo,\r\n      submissionDate: new Date(),\r\n      confirmation: true\r\n    };\r\n    this.annualRequirementService.submitAnnualRequirement(annReqMst).subscribe(\r\n      resp => {\r\n        const annualReqMst = resp as IAnnualRequirementMst;\r\n        this.resetPage();\r\n        this.alertify.success('Annual Requirement submitted successfully');\r\n      }, err => {\r\n        this.alertify.error('Annual Requirement submission failed');\r\n      });\r\n  }\r\n  //\r\n  searchAnnualRequirements() {\r\n    this.loading = true;\r\n    const imp = this.loginService.getEmpOrImpName();\r\n    const importer: IImporterForAnnReqDto = {\r\n      importerId: imp\r\n    };\r\n\r\n    this.annualRequirementService.searchAnnualRequirements(importer).subscribe(resp => {\r\n      this.annReqs = resp as IAllAnnualRequirements[];\r\n      this.openModal(this.annualReqsModal);\r\n      this.loading = false;\r\n    }, err => {\r\n      this.loading = false;\r\n      this.alertify.warning('No data found');\r\n      console.log(err);\r\n    });\r\n  }\r\n  show(): void {\r\n    this.active = true;\r\n    this.paginator.rows = 5;\r\n    this.annualReqsModalNew.show();\r\n  }\r\n  close(): void {\r\n    this.active = false;\r\n    this.annualReqsModalNew.hide();\r\n    //this.annualReqsModal.emit(null);\r\n  }\r\n  getAllAnnualRequirements() {\r\n    //this.show();\r\n    this.getAllAnnualRequirements2();\r\n    //this.openModal(this.annualReqsModal);\r\n    // this.loading = true;\r\n    // this.annualRequirementService.getAllAnnualRequirements().subscribe(resp => {\r\n    //   this.annReqs = resp as IAllAnnualRequirements[];\r\n    //   this.openModal(this.annualReqsModal);\r\n    //   this.loading = false;\r\n    // }, err => {\r\n    //   this.loading = false;\r\n    //   this.alertify.warning('No data found');\r\n    //   console.log(err);\r\n    // });\r\n  }\r\n\r\n  selectAnnualReq(a: IAllAnnualRequirements) {\r\n    // console.log(a);\r\n    const mstNew: IAnnualReqByMstAndImpDto = {\r\n      mstId: a.id,\r\n      // importerId: impId,\r\n      importerId: a.importerId,\r\n      annualReqNo: a.annualReqNo\r\n    };\r\n    this.annualRequirementService.getImporterInfoByAnnualReq(mstNew).subscribe(resp => {\r\n      this.importerInfo = resp as IGetImporterForViewDto;\r\n      this.orgName=this.importerInfo.orgName;\r\n    });\r\n    const sDate = new Date(a.submissionDate);\r\n    let formattedSubmissionDate: any;\r\n    if (a.submissionDate === undefined || a.submissionDate === null) {\r\n      formattedSubmissionDate = a.submissionDate;\r\n    } else {\r\n      formattedSubmissionDate = sDate.getDate() + '/' + (sDate.getMonth() + 1) + '/' + sDate.getFullYear();\r\n    }\r\n    if (a.confirmation === false) {\r\n      this.isSubmitted = false;\r\n      this.updateBtnDisable = false;\r\n      this.submitButtonDisable = false;\r\n      this.annReqUpdateMode = false;\r\n    } else if (a.confirmation === true) {\r\n      this.isSubmitted = true;\r\n      this.submitButtonDisable = true;\r\n      this.updateBtnDisable = true;\r\n      this.annReqUpdateMode = true;\r\n    }\r\n    this.saveButtonTitle = 'Update';\r\n    this.annualRequirementMstForm.get('annualReqNo').setValue(a.annualReqNo);\r\n    this.annualReqNo = a.annualReqNo;\r\n    this.mstNo = a.id;\r\n    this.submissionDateReport = formattedSubmissionDate;\r\n    this.annualRequirementMstForm.get('submissionDate').setValue(formattedSubmissionDate);\r\n    //paramMstForm.get('annualReqNo').setValue(a.annualReqNo);\r\n    //paramMstForm.get('submissionDate').setValue(formattedSubmissionDate);\r\n\r\n    this.checkImporterId = a.importerId;\r\n    if (!this.checkImporterId) {\r\n      this.checkImporterId = this.loginService.getEmpOrImpName();\r\n    }\r\n    this.mstNo = a.id;\r\n    this.annualReqNo = a.annualReqNo;\r\n    const mst: IAnnualReqByMstAndImpDto = {\r\n      mstId: a.id,\r\n      // importerId: impId,\r\n      importerId: a.importerId,\r\n      annualReqNo: a.annualReqNo\r\n    };\r\n    this.getAnnualReqDtlByMstAndImporterId(mst);\r\n    if (this.userRole == \"SA\" && a.confirmation === true) {\r\n      this.annReqUpdateMode = false;\r\n      this.active = false;\r\n      this.annualReqsModalNew.hide();\r\n      this.isSubmitted = false;\r\n      this.updateBtnDisable = false;\r\n      this.submitButtonDisable = false;\r\n    }\r\n    else {\r\n      // this.annReqUpdateMode = true;\r\n      // //\r\n      // this.updateBtnDisable = false;\r\n      // this.submitButtonDisable = false;\r\n      //\r\n      this.modalRef.hide();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  getAnnualReqDtlByMstAndImporterId(mst: IAnnualReqByMstAndImpDto) {\r\n    this.annualRequirementService.getAnnualReqDtlByMstAndImporterId(mst).subscribe(resp => {\r\n      this.annualRequirements = resp as IAnnualRequirementDtl[];\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  IsAnnualRequirementAlreadySubmittedThisYear(): boolean {\r\n    if (!this.checkImporterId) {\r\n      this.checkImporterId = this.loginService.getEmpOrImpName();\r\n    }\r\n    const importer: IImporterForAnnReqDto = {\r\n      importerId: this.checkImporterId\r\n    };\r\n    let res: any;\r\n    this.annualRequirementService.IsAnnualRequirementAlreadySubmittedThisYear(importer).subscribe(resp => {\r\n      res = resp;\r\n    }, error => {\r\n      console.log(error);\r\n    }, () => {\r\n      if (res) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return false;\r\n  }\r\n  viewAnnualReqReport(): void {\r\n    this.loading = true;\r\n\r\n    const mst: IAnnualReqByMstAndImpDto = {\r\n      mstId: this.mstNo,\r\n      annualReqNo: this.annualReqNo,\r\n      importerId: this.checkImporterId,\r\n    };\r\n   \r\n    let row: any[] = [];\r\n    const rowD: any[] = [];\r\n    const col = ['SL \\nNO.', 'Product Name', 'Product Type', 'H.S. Code', 'Pack Size',\r\n      'Total \\nAmount(Tons)', 'Total\\nUnits\\n(Kg/Ltr/Unit)'];\r\n    const title = 'Annual Requirement Summary Report';\r\n    let slNO = 0;\r\n    this.annualRequirementService.getAnnualReqDtlByMstAndImporterId(mst).subscribe(resp => {\r\n      this.annualRequirements = resp as IAnnualRequirementDtl[];\r\n\r\n      // row.push(this.annualReqNo);\r\n      // if(this.submissionDateReport ==null || undefined || ''){\r\n      //   this.submissionDateReport='Not Submitted';\r\n      // }\r\n\r\n      // row.push(this.submissionDateReport);\r\n      for (const a of this.annualRequirements) {\r\n        row.push(++slNO);\r\n        row.push(a.prodName);\r\n        row.push(a.prodType);\r\n        row.push(a.hsCode);\r\n        row.push(a.packSize);\r\n        if (a.totalAmount === null || undefined || '' || 0) {\r\n          row.push(0 + \" MT\");\r\n        }\r\n        else {\r\n          row.push(a.totalAmount + \" MT\");\r\n        }\r\n        if (a.tentativeUnits === null || undefined || '' || 0) {\r\n          row.push(0 + \" Unit\");\r\n        }\r\n        else {\r\n          row.push(a.tentativeUnits + \" Unit\");\r\n        }\r\n        rowD.push(row);\r\n        row = [];\r\n      }\r\n      this.submissionDateReport = this.formatReportDate(this.submissionDateReport);\r\n     \r\n      this.getReport(col, rowD, title, this.annualReqNo,this.orgName, this.submissionDateReport);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  formatReportDate(d: any) {\r\n    if ((d === undefined) || (d === null) || (d === \"Not Submitted\")) {\r\n      return 'Not Submitted';\r\n    }\r\n    else {\r\n      return d;\r\n     // const convertedDate = new Date(d);\r\n     // return convertedDate.getDate() + '/' + (convertedDate.getMonth() + 1) + '/' + convertedDate.getFullYear();\r\n    }\r\n  }\r\n  getReport(col: any[], rowD: any[], title: any, annualReqNo: any,orgName:any, submissionDateReport: any) {\r\n    const totalPagesExp = \"{total_pages_count_string}\";\r\n    const pdf = new jsPDF('l', 'pt', 'a4');\r\n    pdf.setTextColor(0, 0, 0);\r\n    pdf.setFontSize(11);\r\n\r\n    pdf.setFontType('bold');\r\n    pdf.text('Report Name:', 40, 60);\r\n    pdf.setFontType('normal');\r\n    pdf.text(title, 120, 60);\r\n\r\n    pdf.setFontType('bold');\r\n    pdf.text('Importer Name: ', 40, 80);\r\n    pdf.setFontType('normal');\r\n    pdf.text(orgName, 130, 80);\r\n\r\n    pdf.setFontType('bold');\r\n    pdf.text('Annual Requirement No. :', 40, 100);\r\n    pdf.setFontType('normal');\r\n    pdf.text(annualReqNo, 180, 100);\r\n\r\n    pdf.setFontType('bold');\r\n    pdf.text('Submission Date:', 240, 100);\r\n    pdf.setFontType('normal');\r\n    pdf.text(submissionDateReport === undefined || null ?\r\n      'Not Submitted' : submissionDateReport, 340, 100);\r\n    //pdf.text(submissionDateReport, 340, 80);\r\n\r\n    const pDate = this.datePipe.transform(new Date, \"dd/MM/yyyy\");\r\n    pdf.text('Printing Date: ' + pDate, 680, 100);\r\n    var pageContent = function (data) {\r\n      // HEADER\r\n\r\n      // FOOTER\r\n      var str = \"Page \" + data.pageCount;\r\n      // Total page number plugin only available in jspdf v1.0+\r\n      if (typeof pdf.putTotalPages === 'function') {\r\n        str = str + \" of \" + totalPagesExp;\r\n      }\r\n      pdf.setFontSize(9);\r\n      var pageHeight = pdf.internal.pageSize.height || pdf.internal.pageSize.getHeight();\r\n      pdf.text(str, data.settings.margin.left, pageHeight - 10); // showing current page number\r\n    };\r\n    pdf.autoTable(col, rowD,\r\n      {\r\n        theme: \"grid\",\r\n        // table: { fillColor: 255, textColor: 0, fontStyle: 'normal', lineWidth: 0.1 },\r\n        //head: { textColor: 0, fillColor: [211,211,211], fontStyle: 'bold', lineWidth: 0 },\r\n        // body: {},\r\n        // foot: { textColor: 255, fillColor: [26, 188, 156], fontStyle: 'bold', lineWidth: 0 },\r\n        // alternateRow: {},\r\n        headStyles: { fillColor: [192, 192, 192] },\r\n\r\n\r\n        didDrawPage: pageContent,\r\n        margin: { top: 120 },\r\n        bodyStyles: { valign: 'middle', lineColor: [153, 153, 153] },\r\n\r\n        styles: { overflow: 'linebreak', cellWidth: 'wrap', fontSize: 9, textColor: 0 },\r\n\r\n      });\r\n\r\n    //for adding total number of pages // i.e 10 etc\r\n    if (typeof pdf.putTotalPages === 'function') {\r\n      pdf.putTotalPages(totalPagesExp);\r\n    }\r\n\r\n    // pdf.save(title + '.pdf');\r\n    pdf.setProperties({\r\n      title: title + \".pdf\"\r\n    });\r\n\r\n    var blob = pdf.output(\"blob\");\r\n    window.open(URL.createObjectURL(blob));\r\n    this.loading = false;\r\n  }\r\n\r\n\r\n  resetPage() {\r\n    this.createAnnualRequirementMstForm();\r\n    this.createAnnualRequirementForm();\r\n    this.annualRequirements = [];\r\n    this.modalTitle = '';\r\n    this.addMode = false;\r\n    this.editMode = false;\r\n    this.updateProdType = '';\r\n    this.loading = false;\r\n    this.annReqUpdateMode = false;\r\n    this.searchText = '';\r\n    this.p = 1;\r\n    this.mstNo = null;\r\n    this.annualReqNo = '';\r\n    this.submitButtonDisable = true;\r\n    this.saveUpdateMsg = '';\r\n    this.saveButtonTitle = 'Save';\r\n    this.updateBtnDisable = false;\r\n  }\r\n}\r\n\r\ninterface ICurrency {\r\n  id: number;\r\n  currency: string;\r\n  exchangeRate: number;\r\n  currencyDate: Date;\r\n}\r\ninterface IAnnualRequirementDtl {\r\n  id: number;\r\n  annReqMstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  //manufacturer: string;\r\n  //countryOfOrigin: string;\r\n  packSize: string;\r\n  tentativeUnits: number;\r\n  // unitPrice: number;\r\n  // totalPrice: number;\r\n  // totalPriceInBdt: number;\r\n  // currency: string;\r\n  // exchangeRate: number;\r\n  totalAmount: number;\r\n}\r\ninterface IAnnualRequirementMst {\r\n  id: number;\r\n  annualReqNo: string;\r\n  importerId: number;\r\n  submissionDate: Date;\r\n  confirmation: boolean;\r\n}\r\ninterface IAllAnnualRequirements {\r\n  id: number;\r\n  annualReqNo: string;\r\n  importerId: number;\r\n  submissionDate: Date;\r\n  confirmation: boolean;\r\n  annualRequirementDtls: IAnnualRequirementDtl[];\r\n}\r\ninterface IImporterForAnnReqDto {\r\n  importerId: number;\r\n}\r\ninterface IAnnualReqByMstAndImpDto {\r\n  mstId: number;\r\n  importerId: number;\r\n  annualReqNo: string;\r\n}\r\n\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', component: LoginComponent},\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'pagenotfound', component: PageNotFoundComponent},\r\n    // {path: '**', redirectTo: '', pathMatch: 'full'},\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'NMS';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { LoginModule } from './login/login.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RegisterService } from './_services/register.service';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { PortalModule } from './portal/portal.module';\r\nimport { ImporterRoleGuard } from './_guard/importerRole.guard';\r\nimport { AdminRoleGuard } from './_guard/adminRole.guard';\r\nimport { SuperAdminRoleGuard } from './_guard/superAdminRole.guard';\r\nimport { PortalRoutingModule } from './portal/portal-routing.module';\r\nimport { LoginService } from './_services/login.service';\r\nimport { LoginRoutingModule } from './login/login-routing.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PaginatorModule } from 'primeng/primeng';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CurrencyService } from './_services/currency.service';\r\nimport { AnnualRequirementService } from './_services/annual-requirement.service';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { ServiceProxyModule } from './shared/service-proxies/service-proxy.module';\r\nimport { InternationalPhoneNumberModule } from 'ngx-international-phone-number';\r\nimport { ImporterDashBoardService } from './_services/importer-dashboard.service';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { AdminDashboardService } from './_services/admin-dashboard.service';\r\nimport { ProformaInvoiceReportService } from './_services/proforma-invoice-report.service';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n}\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      NgxLoadingModule.forRoot({}),\r\n      RouterModule,\r\n      HttpClientModule,\r\n      AppRoutingModule,\r\n      //Ashiq -added\r\n      FormsModule,\r\n      NgSelectModule,\r\n      ModalModule.forRoot(),\r\n      TabsModule.forRoot(),\r\n      TooltipModule,\r\n      BsDropdownModule.forRoot(),\r\n      TableModule,\r\n      PaginatorModule,\r\n      AutoCompleteModule,\r\n      ServiceProxyModule,\r\n      //\r\n      InternationalPhoneNumberModule,\r\n      NgMultiSelectDropDownModule.forRoot(),\r\n      PortalRoutingModule,\r\n      LoginModule,\r\n      PortalModule,\r\n      LoginRoutingModule,\r\n      PortalRoutingModule,\r\n      ModalModule.forRoot(),\r\n      JwtModule.forRoot({\r\n          config: {\r\n             tokenGetter,\r\n             whitelistedDomains: ['localhost:5000', 'localhost:41682', 'localhost:2930',\r\n             'localhost:49815', 'localhost:8416', 'localhost:86', 'localhost:3451',\r\n             'localhost:20396', 'localhost:82', 'localhost:29312'],\r\n             blacklistedRoutes: ['localhost:5000/api/auth', 'localhost:41682/api/auth', 'localhost:3451/api/auth',\r\n             'localhost:2930/api/auth', 'localhost:49815/api/auth', 'localhost:49815/api/auth',\r\n             'localhost:86/api/auth', 'localhost:82/api/auth', 'localhost:20396/api/auth', 'localhost:29312/api/auth']\r\n         }\r\n      })\r\n   ],\r\n   providers: [RegisterService, ImporterRoleGuard, AdminRoleGuard, SuperAdminRoleGuard, LoginService, CurrencyService,\r\n      AnnualRequirementService, ImporterDashBoardService, AdminDashboardService, ProformaInvoiceReportService],\r\n   bootstrap: [\r\n      AppComponent\r\n   ],\r\n   exports: [\r\n    ]\r\n})\r\nexport class AppModule { }\r\n","import { PrimengTableHelper } from '../helpers/PrimengTableHelper';\r\n\r\nexport abstract class AppComponentBase{\r\n    primengTableHelper: PrimengTableHelper;\r\n    \r\n    constructor() {\r\n        this.primengTableHelper = new PrimengTableHelper();\r\n    }\r\n}","export default \"\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVuY3ktcmF0ZS9jcmVhdGUtb3ItZWRpdC1jdXJyZW5jeS1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY3VycmVuY3ktcmF0ZS9jcmVhdGUtb3ItZWRpdC1jdXJyZW5jeS1tb2RhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5pcy1pbnZhbGlkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG59XHJcbi5pbnZhbGlkLWZlZWRiYWNre1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { CurrencyService } from '../_services/currency.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { finalize } from 'rxjs/internal/operators/finalize';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'createOrEditCurrencyModal',\r\n  templateUrl: './create-or-edit-currency-modal.component.html',\r\n  styleUrls: ['./create-or-edit-currency-modal.component.css']\r\n})\r\nexport class CreateOrEditCurrencyModalComponent implements OnInit {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  active = false;\r\n  saving = false;\r\n  currencyRate: CurrencyRateDto = new CurrencyRateDto();\r\n\r\n  constructor(\r\n    private _currencyService: CurrencyService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  save(): void {\r\n    this.saving = true;\r\n    this._currencyService.createCurrencyRate(this.currencyRate)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      }, error => {\r\n        console.log(error);\r\n        this._alertifyService.error(error.error);\r\n      });\r\n  }\r\n  update(currencyRate: CurrencyRateDto): void {\r\n    this.saving = true;\r\n    this._currencyService.editCurrencyRate(currencyRate, currencyRate.id)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      }, error => {\r\n        console.log(error);\r\n        this._alertifyService.error(error.error);\r\n      });\r\n  }\r\n\r\n  show(currencyRateId?: number): void {\r\n    if (!currencyRateId) {\r\n      this.currencyRate = new CurrencyRateDto();\r\n      this.currencyRate.id = currencyRateId;\r\n\r\n      this.active = true;\r\n      this.modal.show();\r\n    }\r\n    else {\r\n      this._currencyService.getCurrencyRateById(currencyRateId).subscribe(result => {\r\n        const e = result as ICurrencyRateDto\r\n        e.id = currencyRateId;\r\n        this.currencyRate = e;\r\n        console.log(\"Currency\");\r\n        console.log(this.currencyRate);\r\n      });\r\n      this.active = true;\r\n      this.modal.show();\r\n    }\r\n  }\r\n  close(): void {\r\n\r\n    this.active = false;\r\n    this.modal.hide();\r\n  }\r\n\r\n}\r\nexport interface ICurrencyRateDto {\r\n  creationTime: moment.Moment | undefined;\r\n  lastModificationTime: moment.Moment | undefined;\r\n  lastModifierUserId: number | undefined;\r\n  creatorUserId: number | undefined;\r\n  exchangeRate: number | undefined;\r\n  tickerIcon: string | undefined;\r\n  currency: string | undefined;\r\n  id: number | undefined;\r\n}\r\nexport class CurrencyRateDto implements ICurrencyRateDto {\r\n  // \r\n  // this.creationTime = data[\"creationTime\"] ? moment(data[\"creationTime\"].toString()) : <any>undefined;\r\n  // this.lastModificationTime = data[\"lastModificationTime\"] ? moment(data[\"lastModificationTime\"].toString()) : <any>undefined;\r\n  // this.lastModifierUserId = data[\"lastModifierUserId\"];\r\n  // this.creatorUserId = data[\"creatorUserId\"];\r\n  // \r\n  creationTime!: moment.Moment | undefined;\r\n  lastModificationTime!: moment.Moment | undefined;\r\n  lastModifierUserId!: number | undefined;\r\n  creatorUserId!: number | undefined;\r\n  exchangeRate: number | undefined;\r\n  tickerIcon: string | undefined;\r\n  currency: string | undefined;\r\n  id: number | undefined;\r\n\r\n  constructor(data?: ICurrencyRateDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbmN5LXJhdGUvY3VycmVuY3ktcmF0ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CreateOrEditCurrencyModalComponent } from './create-or-edit-currency-modal.component';\r\nimport { Table } from 'primeng/table';\r\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\r\nimport { PrimengTableHelper } from '../helpers/PrimengTableHelper';\r\nimport { CurrencyService } from '../_services/currency.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from '../common/app-pagedResult';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-currency-rate',\r\n  templateUrl: './currency-rate.component.html',\r\n  styleUrls: ['./currency-rate.component.css']\r\n})\r\nexport class CurrencyRateComponent {\r\n\r\n  @ViewChild('createOrEditCurrencyModal', { static: true }) createOrEditCurrencyModal: CreateOrEditCurrencyModalComponent;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static: true }) paginator: Paginator;\r\n  filterText = '';\r\n\r\n  primengTableHelper: PrimengTableHelper;\r\n\r\n  constructor(\r\n    private _currencyService: CurrencyService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n\r\n  getAllCurrency(event?: LazyLoadEvent) {\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n    \r\n    const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting: this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n    this._currencyService.getAllCurrencyRates(fltr).subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n      \r\n      console.log(r);\r\n      this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n      this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n\r\n  createCurrency(): void {\r\n    this.createOrEditCurrencyModal.show();\r\n  }\r\n\r\n  deleteCurrency(currency: ICurrencyRateDto): void {\r\n    const result = confirm('are you sure want to remove?');\r\n    if (result) {\r\n      this._currencyService.deleteCurrencyRate(currency.id)\r\n        .subscribe(() => {\r\n          this.reloadPage();\r\n          this._alertifyService.error('Successfully Deleted');\r\n        });\r\n    }\r\n  }\r\n}\r\nexport interface ICurrencyRateDto {\r\n  creationTime: moment.Moment | undefined;\r\n  lastModificationTime: moment.Moment | undefined;\r\n  lastModifierUserId: number | undefined;\r\n  creatorUserId: number | undefined;\r\n  exchangeRate: number | undefined;\r\n  tickerIcon: string | undefined;\r\n  currency: string | undefined;\r\n  id: number | undefined;\r\n}\r\nexport class CurrencyRateDto implements ICurrencyRateDto {\r\n  // \r\n  // this.creationTime = data[\"creationTime\"] ? moment(data[\"creationTime\"].toString()) : <any>undefined;\r\n  // this.lastModificationTime = data[\"lastModificationTime\"] ? moment(data[\"lastModificationTime\"].toString()) : <any>undefined;\r\n  // this.lastModifierUserId = data[\"lastModifierUserId\"];\r\n  // this.creatorUserId = data[\"creatorUserId\"];\r\n  // \r\n  creationTime!: moment.Moment | undefined;\r\n  lastModificationTime!: moment.Moment | undefined;\r\n  lastModifierUserId!: number | undefined;\r\n  creatorUserId!: number | undefined;\r\n  exchangeRate: number | undefined;\r\n  tickerIcon: string | undefined;\r\n  currency: string | undefined;\r\n  id: number | undefined;\r\n\r\n  constructor(data?: ICurrencyRateDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlL2NyZWF0ZS1lZGl0LWVtcGxveWVlLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llZS9jcmVhdGUtZW1wbG95ZWUvY3JlYXRlLWVkaXQtZW1wbG95ZWUtbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uaXMtaW52YWxpZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQgIWltcG9ydGFudDtcclxufVxyXG4uaW52YWxpZC1mZWVkYmFja3tcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { EmployeeService } from 'src/app/_services/employee.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'createOrEditEmployeeModal',\r\n  templateUrl: './create-edit-employee-modal.component.html',\r\n  styleUrls: ['./create-edit-employee-modal.component.css']\r\n})\r\nexport class CreateEditEmployeeModalComponent implements OnInit {\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  active = false;\r\n  saving = false;\r\n  employeeForm: FormGroup;\r\n  employee:CreateOrEditEmployeeDto= new CreateOrEditEmployeeDto();\r\n  passwordMatch:boolean=false;\r\n\r\n  constructor(\r\n    private _employeeService: EmployeeService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  save(): void {\r\n    this.saving = true;\r\n    this._employeeService.saveEmployeeInfoes(this.employee)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      });\r\n  }\r\n  update(employee:CreateOrEditEmployeeDto): void {\r\n    this.saving = true;\r\n    this._employeeService.updateEmployeeInfoes(employee,employee.id)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      });\r\n  }\r\n\r\n  show(employeeId?: number): void {\r\n    if (!employeeId) {\r\n      this.employee = new CreateOrEditEmployeeDto();\r\n      this.employee.id = employeeId;\r\n\r\n        this.active = true;\r\n        this.modal.show();\r\n      } \r\n      else {\r\n        this._employeeService.getEmployeeInfoById(employeeId).subscribe(result=>{\r\n          const e = result as ICreateOrEditEmployeeDto\r\n          e.id=employeeId;\r\n          this.employee=e;\r\n          console.log(\"Test\");\r\n          console.log(this.employee);\r\n        });\r\n        this.active = true;\r\n        this.modal.show();\r\n      }\r\n  }\r\n  passwordMatchValidator(password:any, confirmPassword:any) {\r\n    if(password === confirmPassword){\r\n     this.passwordMatch=true;\r\n    }\r\n    else{this.passwordMatch=false;}\r\n  }\r\n\r\n\r\n  close(): void {\r\n\r\n    this.active = false;\r\n    this.modal.hide();\r\n  }\r\n}\r\n\r\nexport interface ICreateOrEditEmployeeDto {\r\n  empCode: string | undefined;\r\n  empName: string | undefined;\r\n  designation: string | undefined;\r\n  email: string | undefined;\r\n  contactNo: string | undefined;\r\n  userId: number | undefined;\r\n  username: string | undefined;\r\n  password: string | undefined;\r\n  confirmPassword: string | undefined;\r\n  id: number | undefined;\r\n}\r\n\r\nexport class CreateOrEditEmployeeDto implements ICreateOrEditEmployeeDto {\r\n  empCode: string | undefined;\r\n  empName: string | undefined;\r\n  designation: string | undefined;\r\n  email: string | undefined;\r\n  contactNo: string | undefined;\r\n  userId: number | undefined;\r\n  username: string | undefined;\r\n  password: string | undefined;\r\n  confirmPassword: string | undefined;\r\n  id: number | undefined;\r\n\r\n  constructor(data?: ICreateOrEditEmployeeDto) {\r\n      if (data) {\r\n          for (var property in data) {\r\n              if (data.hasOwnProperty(property))\r\n                  (<any>this)[property] = (<any>data)[property];\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n\r\n","export default \".update-btn{\\r\\n    padding: 10px 100px;\\r\\n    text-align: center;\\r\\n    font-size: 15px;\\r\\n    margin: 4px 410px;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n    background-image: none;\\r\\n    /* border: 1px solid green; */\\r\\n}\\r\\n\\r\\n.form-control:focus{\\r\\n    border: 1px solid #45A845 !important;\\r\\n}\\r\\n\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n\\r\\n.btn-registration-disabled{\\r\\n    cursor: no-drop;\\r\\n    color: #000 !important;\\r\\n    font-weight: bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlL2VkaXQtZW1wbG95ZWUtaW5mby9lZGl0LWVtcGxveWVlLWluZm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0Qiw2QkFBNkI7QUFDakM7O0FBQ0E7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBQ0E7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBQ0E7SUFDSSxlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS9lZGl0LWVtcGxveWVlLWluZm8vZWRpdC1lbXBsb3llZS1pbmZvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBkYXRlLWJ0bntcclxuICAgIHBhZGRpbmc6IDEwcHggMTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBtYXJnaW46IDRweCA0MTBweDtcclxufVxyXG5cclxuLmZvcm0tY29udHJvbHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsgKi9cclxufVxyXG4uZm9ybS1jb250cm9sOmZvY3Vze1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ1QTg0NSAhaW1wb3J0YW50O1xyXG59XHJcbi5pcy1pbnZhbGlkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4tcmVnaXN0cmF0aW9uLWRpc2FibGVke1xyXG4gICAgY3Vyc29yOiBuby1kcm9wO1xyXG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/_services/login.service';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/_services/employee.service';\nimport { ICreateOrEditEmployeeDto, CreateOrEditEmployeeDto } from '../create-edit-employee-modal.component';\nimport { finalize } from 'rxjs/operators';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RegisterService } from 'src/app/_services/register.service';\n@Component({\n  selector: 'app-edit-employee-info',\n  templateUrl: './edit-employee-info.component.html',\n  styleUrls: ['./edit-employee-info.component.css']\n})\nexport class EditEmployeeInfoComponent implements OnInit {\n  saving = false;\n\n  employeeInfo:CreateOrEditEmployeeDto= new CreateOrEditEmployeeDto();\n  changeViewId=0;\n\n  //changePassword form\n  loading = false;\n  changePasswordForm: FormGroup;\n  verifyCrntPass = false;\n  //\n  constructor(\n    private _employeeService: EmployeeService,\n    private loginService: LoginService,\n    private router: Router,\n    private _alertifyService: AlertifyService,\n    private registerService: RegisterService,\n  ) { }\n\n  ngOnInit() {\n    this.getEmployeeInfoById();\n    this.createChangePasswordForm();\n    this.changePasswordForm.get('newPassword').disable();\n    this.changePasswordForm.get('confirmPassword').disable();\n  }\n  getEmployeeInfoById() {\n    const empId = this.loginService.getEmpOrImpName();\n    this._employeeService.getEmployeeInfoById(empId).subscribe(result=>{\n      const e = result as ICreateOrEditEmployeeDto\n      e.id=empId;\n      this.employeeInfo=e;\n      console.log(\"Test\");\n      console.log(this.employeeInfo);\n    });\n  }\n  changePasswordBtn() {\n    this.changeViewId=2;\n  }\n  editEmployeeInfo() {\n    this.changeViewId=1;\n  //  this.router.navigate(['portal/editinfo']);\n  }\n  backToEmployeeInfo(){\n    this.changeViewId=0;\n  }\n  update( employeeInfo:CreateOrEditEmployeeDto): void {\n    this.saving = true;\n    this._employeeService.updateEmployeeInfoes(employeeInfo,employeeInfo.id)\n      .pipe(finalize(() => { this.saving = false; }))\n      .subscribe(() => {\n        this._alertifyService.success('Update Successfully');\n      });\n  }\n// change Password start\ncreateChangePasswordForm() {\n  this.changePasswordForm = new FormGroup({\n    currentPassword: new FormControl('', [Validators.required]),\n    newPassword: new FormControl('',  [Validators.required, Validators.minLength(5), Validators.maxLength(10)]),\n    confirmPassword : new FormControl('', [Validators.required])\n  }, this.passwordMatchValidator);\n}\npasswordMatchValidator(g: FormGroup) {\n  return g.get('newPassword').value === g.get('confirmPassword').value ? null : {mismatch: true };\n}\n\nverifyCurrentPassword() {\n  const empId = this.loginService.getEmpOrImpName();\n  const employee: IVerifyCrntPassDto = {\n    employeeId: empId,\n    currentPassword: this.changePasswordForm.get('currentPassword').value\n  };\n  this.registerService.verifyCurrentPasswordEmployee(employee).subscribe(resp => {\n    if (resp) {\n      this.changePasswordForm.get('newPassword').enable();\n      this.changePasswordForm.get('confirmPassword').enable();\n      this.verifyCrntPass = false;\n    } else {\n      this.changePasswordForm.get('newPassword').disable();\n      this.changePasswordForm.get('confirmPassword').disable();\n      this.verifyCrntPass = true;\n    }\n  }, err => {\n    console.log(err);\n  });\n}\nchangePassword() {\n  this.loading = true;\n  const empId = this.loginService.getEmpOrImpName();\n  const employee: IChangePassDto = {\n    employeeId: empId,\n    newPassword: this.changePasswordForm.get('newPassword').value\n  };\n  this.registerService.changePasswordEmployee(employee).subscribe(resp => {\n    this.loading = false;\n    if (resp) {\n      this._alertifyService.success('Password Updated Successful');\n    }\n  }, err => {\n    this.loading = false;\n    console.log(err);\n    this._alertifyService.error(err.error);\n  });\n}\n\n}\ninterface IVerifyCrntPassDto {\nemployeeId: number;\ncurrentPassword: string;\n}\ninterface IChangePassDto {\nemployeeId: number;\nnewPassword: string;\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS9lbXBsb3llZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CreateEditEmployeeModalComponent, ICreateOrEditEmployeeDto } from './create-edit-employee-modal.component';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { EmployeeService } from 'src/app/_services/employee.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ViewEmployeeModalComponent } from './view-employee-modal-component.component';\r\nimport { AppComponentBase } from 'src/app/common/app-component-base';\r\nimport { IPagedResultDto, IGetAllInputFilterDto } from 'src/app/common/app-pagedResult';\r\n\r\n@Component({\r\n  selector: 'employees',\r\n  templateUrl: './employees.component.html',\r\n  styleUrls: ['./employees.component.css']\r\n})\r\nexport class EmployeesComponent extends AppComponentBase implements OnInit {\r\n\r\n  @ViewChild('createOrEditEmployeeModal', { static: true }) createOrEditEmployeeModal: CreateEditEmployeeModalComponent;\r\n  @ViewChild('viewEmployeeModalComponent', { static: true }) viewEmployeeModal: ViewEmployeeModalComponent;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static:true}) paginator: Paginator;\r\n  filterText = '';\r\n  constructor(\r\n    private _employeeService: EmployeeService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n   super();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getEmployees(event?: LazyLoadEvent) {\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n     const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting:this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator,event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n     this._employeeService.getEmployeeInfoes(fltr).subscribe(result => {\r\n      //const e = result as ICreateOrEditEmployeeDto[];\r\n      //this.primengTableHelper.records = e;\r\n      //this.primengTableHelper.totalRecordsCount =20;\r\n      const r = result as IPagedResultDto;\r\n       this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n       this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n\r\n  createEmployee(): void {\r\n    this.createOrEditEmployeeModal.show();\r\n  }\r\n\r\n  deleteEmployee(employeeInfo: ICreateOrEditEmployeeDto): void {\r\n    const result = confirm('are you sure want to remove?');\r\n    if (result) {\r\n      this._employeeService.deleteEmployeeInfoes(employeeInfo.id)\r\n        .subscribe(() => {\r\n          this.reloadPage();\r\n          this._alertifyService.error('Successfully Deleted');\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlL3ZpZXctZW1wbG95ZWUtbW9kYWwtY29tcG9uZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llZS9jcmVhdGUtZW1wbG95ZWUvdmlldy1lbXBsb3llZS1tb2RhbC1jb21wb25lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uaXMtaW52YWxpZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQgIWltcG9ydGFudDtcclxufVxyXG4uaW52YWxpZC1mZWVkYmFja3tcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn0iXX0= */\"","import { Component, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { CreateOrEditEmployeeDto } from './create-edit-employee-modal.component';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { RegisterService } from 'src/app/_services/register.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'viewEmployeeModal',\r\n  templateUrl: './view-employee-modal-component.component.html',\r\n  styleUrls: ['./view-employee-modal-component.component.css']\r\n})\r\nexport class ViewEmployeeModalComponent {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  active = false;\r\n    saving = false;\r\n    changePasswordId=0;\r\n    item: CreateOrEditEmployeeDto;\r\n    employee:CreateOrEditEmployeeInfoDto= new CreateOrEditEmployeeInfoDto();\r\n\r\n    constructor(\r\n      private registerService: RegisterService,\r\n      private alertify: AlertifyService\r\n    ) {\r\n        this.item = new CreateOrEditEmployeeDto();\r\n    }\r\n\r\n    show(item: CreateOrEditEmployeeDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n    change():void{\r\n      this.changePasswordId=1;\r\n    }\r\n     updatePssword(empId:any):void{\r\n      \r\n      this.saving = true;\r\n      const employeeInfo: IChangePassDto = {\r\n        employeeId: empId,\r\n        newPassword:this.employee.password\r\n      };\r\n      this.registerService.changePasswordAdminSideEmployee(employeeInfo).subscribe(resp => {\r\n        if (resp) {\r\n          this.alertify.success('Password Updated Successful');\r\n          this.close();\r\n          this.modalSave.emit(null);\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n        this.alertify.error(err.error);\r\n      });;\r\n      \r\n    }\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\nexport class CreateOrEditEmployeeInfoDto{\r\n  password: string | undefined;\r\n  confirmPassword: string | undefined;\r\n  id: number | undefined;\r\n}\r\ninterface IChangePassDto {\r\n  employeeId:number;\r\n  newPassword: string;\r\n}\r\n\r\n","import { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { Table } from 'primeng/components/table/table';\r\n\r\nexport class PrimengTableHelper {\r\n    predefinedRecordsCountPerPage = [5, 10, 20, 50, 100,250, 500];\r\n   // predefinedRecordsCountPerPageForContact = [20, 50, 100,250, 500];\r\n    //predefinedRecordsCountPerPageForMarketPlace = [250, 500];\r\n\r\n\r\n    defaultRecordsCountPerPage = 5;\r\n   // defaultRecordsCountPerPageforContact=20;\r\n   // defaultRecordsCountPerPageforMarketPlace=250;\r\n\r\n\r\n    isResponsive = true;\r\n\r\n    resizableColumns: false;\r\n\r\n    totalRecordsCount = 0;\r\n\r\n    records: any[];\r\n\r\n    isLoading = false;\r\n\r\n    showLoadingIndicator(): void {\r\n        setTimeout(() => {\r\n            this.isLoading = true;\r\n        }, 0);\r\n    }\r\n\r\n    hideLoadingIndicator(): void {\r\n        setTimeout(() => {\r\n            this.isLoading = false;\r\n        }, 0);\r\n    }\r\n\r\n    getSorting(table: Table): string {\r\n        let sorting;\r\n        if (table.sortField) {\r\n            sorting = table.sortField;\r\n            if (table.sortOrder === 1) {\r\n                sorting += ' ASC';\r\n            } else if (table.sortOrder === -1) {\r\n                sorting += ' DESC';\r\n            }\r\n        }\r\n\r\n        return sorting;\r\n    }\r\n\r\n    getMaxResultCount(paginator: Paginator, event: LazyLoadEvent): number {\r\n        if (paginator.rows) {\r\n            return paginator.rows;\r\n        }\r\n\r\n        if (!event) {\r\n            return 0;\r\n        }\r\n\r\n        return event.rows;\r\n    }\r\n\r\n    getSkipCount(paginator: Paginator, event: LazyLoadEvent): number {\r\n        if (paginator.first) {\r\n            return paginator.first;\r\n        }\r\n\r\n        if (!event) {\r\n            return 0;\r\n        }\r\n\r\n        return event.first;\r\n    }\r\n\r\n    shouldResetPaging(event: LazyLoadEvent): boolean {\r\n        if (!event /*|| event.sortField*/) { // if you want to reset after sorting, comment out parameter\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n//import { environment } from 'src/environments/environment';\r\nimport { IFileDto } from '../common/FileDto';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileDownloadService {\r\n  baseUrl = environment.apiUrl + 'File/';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  downloadTempFile(file: any) {\r\n    // const url = this.baseUrl + 'DownloadTempFile?fileType=' + file.fileType + '&fileToken=' + file.fileToken + '&fileName=' + file.fileName;\r\n    // location.href = url; //TODO: This causes reloading of same page in Firefox\r\n    return this.http.post(this.baseUrl + 'DownloadTempFile',file);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltcG9ydGVyLWRhc2hib2FyZC9pbXBvcnRlci1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\nimport { $ } from 'protractor';\r\nimport { ImporterDashBoardService } from '../_services/importer-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-importer-dashboard',\r\n  templateUrl: './importer-dashboard.component.html',\r\n  styleUrls: ['./importer-dashboard.component.css']\r\n})\r\nexport class ImporterDashboardComponent implements OnInit {\r\n  importerDashboardInfo: IImporterDashboardInfo;\r\n  constructor(\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private importerDashbardService: ImporterDashBoardService,\r\n    private loginService: LoginService) { }\r\n\r\n  ngOnInit() {\r\n    this.getDashboardInfo();\r\n    this.importerDashboardInfo = {\r\n      pendingProformaApproval: 0,\r\n      approvedProforma: 0,\r\n      rejectedProduct: 0,\r\n      totalProforma: 0\r\n    };\r\n  }\r\n  getDashboardInfo() {\r\n    const imdId = this.loginService.getEmpOrImpName();\r\n    const imp: IImporterIdDto = {\r\n      importerId: imdId\r\n    };\r\n    this.importerDashbardService.getDashboardInfo(imp).subscribe(resp => {\r\n      this.importerDashboardInfo = resp as IImporterDashboardInfo;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\ninterface IImporterIdDto {\r\n  importerId: number;\r\n}\r\ninterface IImporterDashboardInfo {\r\n  pendingProformaApproval: number | undefined | null;\r\n  totalProforma: number | undefined | null;\r\n  approvedProforma: number  | undefined | null;\r\n  rejectedProduct: number | undefined | null;\r\n}\r\n","export default \".form-control{\\r\\n    background-image: none;\\r\\n    /* border: 1px solid green; */\\r\\n}\\r\\n.form-control:focus{\\r\\n    border: 1px solid #45A845 !important;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.btn-registration-disabled{\\r\\n    cursor: no-drop;\\r\\n    color: #000 !important;\\r\\n    font-weight: bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1wb3J0ZXIvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxnQ0FBZ0M7QUFDcEM7QUFDQTtJQUNJLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvaW1wb3J0ZXIvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsgKi9cclxufVxyXG4uZm9ybS1jb250cm9sOmZvY3Vze1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ1QTg0NSAhaW1wb3J0YW50O1xyXG59XHJcbi5pcy1pbnZhbGlkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4tcmVnaXN0cmF0aW9uLWRpc2FibGVke1xyXG4gICAgY3Vyc29yOiBuby1kcm9wO1xyXG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ImporterInfoService } from 'src/app/_services/importer-info.service';\r\nimport { LoginService } from 'src/app/_services/login.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { RegisterService } from 'src/app/_services/register.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  loading = false;\r\n  changePasswordForm: FormGroup;\r\n  verifyCrntPass = false;\r\n  constructor(\r\n    private importerService: ImporterInfoService,\r\n    private loginService: LoginService,\r\n    private alertify: AlertifyService,\r\n    private registerService: RegisterService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createChangePasswordForm();\r\n    this.changePasswordForm.get('newPassword').disable();\r\n    this.changePasswordForm.get('confirmPassword').disable();\r\n  }\r\n  createChangePasswordForm() {\r\n    this.changePasswordForm = new FormGroup({\r\n      currentPassword: new FormControl('', [Validators.required]),\r\n      newPassword: new FormControl('',  [Validators.required, Validators.minLength(5), Validators.maxLength(10)]),\r\n      confirmPassword : new FormControl('', [Validators.required])\r\n    }, this.passwordMatchValidator);\r\n  }\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('newPassword').value === g.get('confirmPassword').value ? null : {mismatch: true };\r\n  }\r\n  backToImporterInfo() {\r\n    this.router.navigate(['portal/editimporterinfo']);\r\n  }\r\n  verifyCurrentPassword() {\r\n    const impId = this.loginService.getEmpOrImpName();\r\n    const importer: IVerifyCrntPassDto = {\r\n      importerId: impId,\r\n      currentPassword: this.changePasswordForm.get('currentPassword').value\r\n    };\r\n    this.registerService.verifyCurrentPassword(importer).subscribe(resp => {\r\n      if (resp) {\r\n        this.changePasswordForm.get('newPassword').enable();\r\n        this.changePasswordForm.get('confirmPassword').enable();\r\n        this.verifyCrntPass = false;\r\n      } else {\r\n        this.changePasswordForm.get('newPassword').disable();\r\n        this.changePasswordForm.get('confirmPassword').disable();\r\n        this.verifyCrntPass = true;\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  changePassword() {\r\n    this.loading = true;\r\n    const impId = this.loginService.getEmpOrImpName();\r\n    const importer: IChangePassDto = {\r\n      importerId: impId,\r\n      newPassword: this.changePasswordForm.get('newPassword').value\r\n    };\r\n    this.registerService.changePassword(importer).subscribe(resp => {\r\n      this.loading = false;\r\n      if (resp) {\r\n        this.alertify.success('Password Updated Successful');\r\n      }\r\n    }, err => {\r\n      this.loading = false;\r\n      console.log(err);\r\n      this.alertify.error(err.error);\r\n    });\r\n  }\r\n\r\n}\r\ninterface IVerifyCrntPassDto {\r\n  importerId: number;\r\n  currentPassword: string;\r\n}\r\ninterface IChangePassDto {\r\n  importerId: number;\r\n  newPassword: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltcG9ydGVyL2VkaXQtaW1wb3J0ZXItaW5mby9lZGl0LWltcG9ydGVyLWluZm8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ImporterInfoService } from 'src/app/_services/importer-info.service';\r\nimport { LoginService } from 'src/app/_services/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-importer-info',\r\n  templateUrl: './edit-importer-info.component.html',\r\n  styleUrls: ['./edit-importer-info.component.css']\r\n})\r\nexport class EditImporterInfoComponent implements OnInit {\r\n  importerInfo: IImporterInfo;\r\n  constructor(\r\n    private importerService: ImporterInfoService,\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getImporterInfoById();\r\n    this.importerInfo = {\r\n      address : '',\r\n      contactName: '',\r\n      contactNo: '',\r\n      district: '',\r\n      division: '',\r\n      dlsLicenseNo: '',\r\n      dlsLicenseScan: '',\r\n      dlsLicenseType: '',\r\n      email: '',\r\n      id: 0,\r\n      ircScan: '',\r\n      nidNo: '',\r\n      nidScan: '',\r\n      orgName: '',\r\n      position: '',\r\n      upazila: '',\r\n      userLogin: {\r\n        username: '',\r\n        createdBy: '',\r\n        createdDate: null,\r\n        createdTerminal: '',\r\n        id: 0,\r\n        passwordHash: '',\r\n        passwordSalt: '',\r\n        updatedBy: '',\r\n        updatedDate: null,\r\n        updatedTerminal: '',\r\n        userType: ''\r\n      }\r\n    };\r\n  }\r\n  getImporterInfoById() {\r\n    const impId = this.loginService.getEmpOrImpName();\r\n    const imp: IImporterIdDto = {\r\n      importerId: impId\r\n    };\r\n    this.importerService.getImporterInfoById(imp).subscribe(resp => {\r\n      this.importerInfo = resp as IImporterInfo;\r\n    });\r\n  }\r\n  changePassword() {\r\n    this.router.navigate(['portal/chngpass']);\r\n  }\r\n  editImporterInfo() {\r\n    this.router.navigate(['portal/editinfo']);\r\n  }\r\n}\r\ninterface IImporterIdDto {\r\n  importerId: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  userLogin: IUserLogin;\r\n}\r\ninterface IUserLogin{\r\n id: number;\r\n username: string;\r\n passwordHash: string;\r\n passwordSalt: string;\r\n createdBy: string;\r\n createdTerminal: string;\r\n createdDate: Date;\r\n updatedBy: string;\r\n updatedTerminal: string;\r\n updatedDate: Date;\r\n userType: string;\r\n}\r\n","export default \".form-control{\\r\\n    background-image: none;\\r\\n    /* border: 1px solid green; */\\r\\n}\\r\\n.form-control:focus{\\r\\n    border: 1px solid #45A845 !important;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.btn-registration-disabled{\\r\\n    cursor: no-drop;\\r\\n    color: #000 !important;\\r\\n    font-weight: bold;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1wb3J0ZXIvZWRpdC1pbmZvL2VkaXQtaW5mby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxnQ0FBZ0M7QUFDcEM7QUFDQTtJQUNJLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvaW1wb3J0ZXIvZWRpdC1pbmZvL2VkaXQtaW5mby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsgKi9cclxufVxyXG4uZm9ybS1jb250cm9sOmZvY3Vze1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ1QTg0NSAhaW1wb3J0YW50O1xyXG59XHJcbi5pcy1pbnZhbGlkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4tcmVnaXN0cmF0aW9uLWRpc2FibGVke1xyXG4gICAgY3Vyc29yOiBuby1kcm9wO1xyXG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ImporterInfoService } from 'src/app/_services/importer-info.service';\r\nimport { LoginService } from 'src/app/_services/login.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { RegisterService } from 'src/app/_services/register.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-info',\r\n  templateUrl: './edit-info.component.html',\r\n  styleUrls: ['./edit-info.component.css']\r\n})\r\nexport class EditInfoComponent implements OnInit {\r\n  editInfoForm: FormGroup;\r\n  importerInfo: IImporterInfo;\r\n  nidFile: any;\r\n  public loading = false;\r\n\r\n  constructor(\r\n    private importerService: ImporterInfoService,\r\n    private loginService: LoginService,\r\n    private alertify: AlertifyService,\r\n    private registerService: RegisterService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createEditInfoForm();\r\n    this.getImporterInfoById();\r\n    this.importerInfo = {\r\n      address : '',\r\n      contactName: '',\r\n      contactNo: '',\r\n      district: '',\r\n      division: '',\r\n      dlsLicenseNo: '',\r\n      dlsLicenseScan: '',\r\n      dlsLicenseType: '',\r\n      email: '',\r\n      id: 0,\r\n      ircScan: '',\r\n      nidNo: '',\r\n      nidScan: '',\r\n      orgName: '',\r\n      position: '',\r\n      upazila: '',\r\n      userLogin: {\r\n        username: '',\r\n        createdBy: '',\r\n        createdDate: null,\r\n        createdTerminal: '',\r\n        id: 0,\r\n        passwordHash: '',\r\n        passwordSalt: '',\r\n        updatedBy: '',\r\n        updatedDate: null,\r\n        updatedTerminal: '',\r\n        userType: ''\r\n      }\r\n    };\r\n  }\r\n  createEditInfoForm() {\r\n    this.editInfoForm = new FormGroup({\r\n      contactName: new FormControl('', [Validators.required, Validators.maxLength(50)]),\r\n      position: new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      contactNo : new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      email : new FormControl('', [Validators.required, Validators.maxLength(50), Validators.email]),\r\n      nidNo: new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      nidScan: new FormControl(''),\r\n      username: new FormControl('', [Validators.required, Validators.maxLength(20), Validators.pattern(/.*[a-zA-Z]+.*/)])\r\n    });\r\n  }\r\n  getImporterInfoById() {\r\n    const impId = this.loginService.getEmpOrImpName();\r\n    const imp: IImporterIdDto = {\r\n      importerId: impId\r\n    };\r\n    this.importerService.getImporterInfoById(imp).subscribe(resp => {\r\n      this.importerInfo = resp as IImporterInfo;\r\n      this.editInfoForm.get('contactName').setValue(this.importerInfo.contactName);\r\n      this.editInfoForm.get('position').setValue(this.importerInfo.position);\r\n      this.editInfoForm.get('contactNo').setValue(this.importerInfo.contactNo);\r\n      this.editInfoForm.get('email').setValue(this.importerInfo.email);\r\n      this.editInfoForm.get('nidNo').setValue(this.importerInfo.nidNo);\r\n      this.editInfoForm.get('username').setValue(this.importerInfo.userLogin.username);\r\n    });\r\n  }\r\n  validateNIDFileUpload(file: File) {\r\n    if (file) {\r\n      const fileName = file.name;\r\n      const fileSize = file.size;\r\n      const allowedFile = '.pdf';\r\n      if (fileName.substr(fileName.length - allowedFile.length,\r\n        allowedFile.length).toLowerCase() !== allowedFile.toLowerCase()) {\r\n        return 'invalidFileFormat';\r\n      }\r\n      if (fileSize > 1024000) {\r\n        return 'invalidFileSize';\r\n      }\r\n    }\r\n    return 'fileOk';\r\n  }\r\n  onSelectedNidFile(event) {\r\n    this.loading = true;\r\n    const imp = this.loginService.getEmpOrImpName();\r\n    const f = event.target.files[0];\r\n    const result = this.validateNIDFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.editInfoForm.controls.nidScan.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.editInfoForm.controls.nidScan.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    const nidFormData = new FormData();\r\n    nidFormData.append('nidFile', f);\r\n    this.registerService.updateNidFile(nidFormData, imp).subscribe(resp => {\r\n      this.alertify.success('NID updated successfullt.');\r\n      const impInfo = resp as IImporterInfo;\r\n      this.loading = false;\r\n    }, error => {\r\n        console.log(console.error);\r\n        this.loading = false;\r\n    });\r\n  }\r\n  updateInfo() {\r\n    this.loading = true;\r\n    this.importerInfo.contactName = this.editInfoForm.get('contactName').value;\r\n    this.importerInfo.position = this.editInfoForm.get('position').value;\r\n    this.importerInfo.contactNo = this.editInfoForm.get('contactNo').value;\r\n    this.importerInfo.email = this.editInfoForm.get('email').value;\r\n    this.importerInfo.nidNo = this.editInfoForm.get('nidNo').value;\r\n    this.importerInfo.nidScan = this.editInfoForm.get('nidScan').value;\r\n    this.importerInfo.userLogin.username = this.editInfoForm.get('username').value;\r\n    this.registerService.updateInfo(this.importerInfo).subscribe(resp => {\r\n      this.importerInfo = resp as IImporterInfo;\r\n      this.loading = false;\r\n      this.alertify.success('Importer Info Updated Successfully');\r\n       }, error => {\r\n         this.loading = false;\r\n         this.alertify.error(error.error);\r\n       });\r\n  }\r\n  backToImporterInfo() {\r\n    this.router.navigate(['portal/editimporterinfo']);\r\n  }\r\n}\r\ninterface IImporterIdDto {\r\n  importerId: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  userLogin: IUserLogin;\r\n}\r\ninterface IUserLogin {\r\n id: number;\r\n username: string;\r\n passwordHash: string;\r\n passwordSalt: string;\r\n createdBy: string;\r\n createdTerminal: string;\r\n createdDate: Date;\r\n updatedBy: string;\r\n updatedTerminal: string;\r\n updatedDate: Date;\r\n userType: string;\r\n}\r\n","export default \".icon-pdf {\\r\\n    margin-right: -13%;\\r\\n    color: white;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1wb3J0ZXIvaW1wb3J0ZXItbWFuYWdlbWVudC9pbXBvcnRlci1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2ltcG9ydGVyL2ltcG9ydGVyLW1hbmFnZW1lbnQvaW1wb3J0ZXItbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmljb24tcGRmIHtcclxuICAgIG1hcmdpbi1yaWdodDogLTEzJTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\r\nimport { Table } from 'primeng/components/table/table';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { PrimengTableHelper } from 'src/app/helpers/PrimengTableHelper';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ViewImporterModalComponent } from './view-importer-modal.component';\r\nimport { ImporterInfoService } from 'src/app/_services/importer-info.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from 'src/app/common/app-pagedResult';\r\nimport { FileDownloadService } from 'src/app/helpers/file-download.service';\r\nimport { IFileDto } from 'src/app/common/FileDto';\r\nimport 'jspdf-autotable';\r\nimport * as jsPDF from 'jspdf';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'importer-management',\r\n  templateUrl: './importer-management.component.html',\r\n  styleUrls: ['./importer-management.component.css']\r\n})\r\nexport class ImporterManagementComponent implements OnInit {\r\n\r\n  @ViewChild('viewImporterModalComponent', { static: false }) viewImporterModal: ViewImporterModalComponent;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static: true }) paginator: Paginator;\r\n  filterText = '';\r\n  primengTableHelper: PrimengTableHelper;\r\n  fileName: any;\r\n  fileType: any;\r\n  fileToken: any;\r\n  baseUrl = environment.apiUrl + 'ImporterInfo/';\r\n  fileDownloadInitiated: boolean;\r\n  constructor(\r\n    private _importerInfoService: ImporterInfoService,\r\n    private _alertifyService: AlertifyService,\r\n    private _fileDownloadService: FileDownloadService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getImporters(event?: LazyLoadEvent) {\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n\r\n    const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting: this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    };\r\n    this._importerInfoService.getAllImporterInfos(fltr).subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n      this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n      this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n  createImporter() {\r\n    window.open(\"/register\", \"_blank\");\r\n  }\r\n\r\n  deleteImporter(importer: IGetImporterForViewDto): void {\r\n    const result = confirm('are you sure want to remove?');\r\n    if (result) {\r\n      this._importerInfoService.getdeleteImporter(importer.id)\r\n      .subscribe(() => {\r\n        this.reloadPage();\r\n        this._alertifyService.error('Successfully Deleted');\r\n      });\r\n    }\r\n  }\r\n  viewImporterReport(enhance): void {\r\n    // const doc = new jsPDF();\r\n    // doc.text(\"Hello there\", 15, 15);\r\n    // doc.save('first.pdf');\r\n\r\n    this._importerInfoService.getAllImporterInfosPdf().subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n      let row: any[] = []\r\n      let rowD: any[] = []\r\n      let col = ['SL NO.', 'Organization', 'Contact', 'Contact No.', 'Position', 'Email', 'Division', 'District', 'Upazila', 'Address', 'DLS License No.', 'Nid No.']; // initialization for headers\r\n      let title = \"Importer Report\" // title of report\r\n      let slNO = 0;\r\n      for (let a = 0; a < r.totalCount; a++) {\r\n        row.push(++slNO);\r\n        row.push(r.items[a].orgName);\r\n        row.push(r.items[a].contactName);\r\n        row.push(r.items[a].contactNo);\r\n        row.push(r.items[a].position);\r\n        row.push(r.items[a].email);\r\n        row.push(r.items[a].division);\r\n        row.push(r.items[a].district);\r\n        row.push(r.items[a].upazila);\r\n        row.push(r.items[a].address);\r\n        row.push(r.items[a].dlsLicenseNo);\r\n        row.push(r.items[a].nidNo);\r\n        rowD.push(row);\r\n        row = [];\r\n      }\r\n      // console.log(col);\r\n      // console.log(rowD);\r\n      // console.log(title);\r\n      this.getReport(col, rowD, title, enhance);\r\n    });\r\n  }\r\n\r\n  getReport(col: any[], rowD: any[], title: any, enhance) {\r\n    const totalPagesExp = '{total_pages_count_string}';\r\n    let pdf = new jsPDF('l', 'pt', 'a4');\r\n    pdf.setTextColor(0, 0, 0);\r\n    pdf.setFontSize(15);\r\n    pdf.text('Government of the People\\'s Republic of Bangladesh', 250, 40);\r\n    pdf.setFontSize(13);\r\n    pdf.text('Department of Livestock Services', 320, 55);\r\n    pdf.setFontType('thin');\r\n    pdf.setFontSize(11);\r\n    pdf.text('Krishi Khamar Sarak, Farmgate, Dhaka-1215', 315, 70);\r\n    pdf.setFontSize(11);\r\n    pdf.text('www.dls.gov.bd', 370, 85);\r\n    const image1 = new Image();\r\n    image1.src = '../../../assets/img/logo/govt-logo.png';\r\n    pdf.addImage(image1, 'jpeg', 170, 20, 50, 50);\r\n    const image2 = new Image();\r\n    image2.src = '../../../assets/img/logo/logo.png';\r\n    pdf.addImage(image2, 'jpeg', 630, 20, 50, 50);\r\n    var pageContent = function (data) {\r\n      // HEADER\r\n      pdf.setFontType('bold');\r\n      pdf.text('Report Name: ', 40, 100);\r\n      pdf.setFontType('normal');\r\n      pdf.text('Importer List', 110, 100);\r\n      const pd = new Date();\r\n      const pDate = pd.getDate() + '/' + (pd.getMonth() + 1) + '/' + pd.getFullYear();\r\n\r\n      pdf.text('Printing Date: ' + pDate, 680, 100);\r\n      pdf.setFontSize(11);\r\n      const image1 = new Image();\r\n      // FOOTER\r\n      var str = \"Page \" + data.pageCount;\r\n      // Total page number plugin only available in jspdf v1.0+\r\n      if (typeof pdf.putTotalPages === 'function') {\r\n        str = str + \" of \" + totalPagesExp;\r\n      }\r\n      pdf.setFontSize(11);\r\n      var pageHeight = pdf.internal.pageSize.height || pdf.internal.pageSize.getHeight();\r\n      pdf.text(str, data.settings.margin.left, pageHeight - 10); // showing current page number\r\n    };\r\n    pdf.autoTable(col, rowD,\r\n      {\r\n        theme: \"grid\",\r\n        headStyles: { fillColor: [192, 192, 192] },\r\n        didParseCell: enhance ? this.enhanceWordBreak : null,\r\n\r\n\r\n        didDrawPage: pageContent,\r\n        margin: { top: 110 },\r\n        bodyStyles: { valign: 'middle', lineColor: [153, 153, 153] },\r\n\r\n        styles: { overflow: 'linebreak', fontSize: 9, textColor: 0 },\r\n      });\r\n\r\n    //for adding total number of pages // i.e 10 etc\r\n    if (typeof pdf.putTotalPages === 'function') {\r\n      pdf.putTotalPages(totalPagesExp);\r\n    }\r\n\r\n    // pdf.save(title + '.pdf');\r\n    pdf.setProperties({\r\n      title: title + \".pdf\"\r\n  });\r\n \r\n  var blob = pdf.output(\"blob\");\r\n  window.open(URL.createObjectURL(blob));\r\n  }\r\n  enhanceWordBreak({ doc, cell, column }) {\r\n    if (cell === undefined) {\r\n      return;\r\n    }\r\n\r\n    const hasCustomWidth = (typeof cell.styles.cellWidth === 'number');\r\n\r\n    if (hasCustomWidth || cell.raw == null || cell.colSpan > 1) {\r\n      return\r\n    }\r\n\r\n    let text;\r\n\r\n    if (cell.raw instanceof Node) {\r\n      text = cell.raw.innerText;\r\n    } else {\r\n      if (typeof cell.raw == 'object') {\r\n        // not implemented yet\r\n        // when a cell contains other cells (colSpan)\r\n        return;\r\n      } else {\r\n        text = '' + cell.raw;\r\n      }\r\n    }\r\n\r\n    // split cell string by space or \"-\"\r\n    const words = text.split(/\\s+|[?<=-]/);\r\n\r\n    // calculate longest word width\r\n    const maxWordUnitWidth = words.map(s => Math.floor(doc.getStringUnitWidth(s) * 100) / 100).reduce((a, b) => Math.max(a, b), 0);\r\n    const maxWordWidth = maxWordUnitWidth * (cell.styles.fontSize / doc.internal.scaleFactor)\r\n\r\n    const minWidth = cell.padding('horizontal') + maxWordWidth;\r\n\r\n    // update minWidth for cell & column\r\n\r\n    if (minWidth > cell.minWidth) {\r\n      cell.minWidth = minWidth;\r\n    }\r\n\r\n    if (cell.minWidth > cell.wrappedWidth) {\r\n      cell.wrappedWidth = cell.minWidth;\r\n    }\r\n\r\n    if (cell.minWidth > column.minWidth) {\r\n      column.minWidth = cell.minWidth;\r\n    }\r\n\r\n    if (column.minWidth > column.wrappedWidth) {\r\n      column.wrappedWidth = column.minWidth;\r\n    }\r\n  }\r\n\r\n  exportToExcel(): void {\r\n    const fileDto: IFileDto = {\r\n      fileName: this.fileName,\r\n      fileType: this.fileType,\r\n      fileToken: this.fileToken\r\n\r\n    };\r\n    this._importerInfoService.getImportersToExcel(\r\n    )\r\n      .subscribe(result => {\r\n        const r = result as IFileDto;\r\n        this._fileDownloadService.downloadTempFile(r);\r\n      });\r\n  }\r\n  DownloadDlsLicenseFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadFile/' + fname, { responseType: 'blob' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          const blob = new Blob([result]);\r\n          const saveAs = require('file-saver');\r\n          const file = 'dls_license_' + fname;\r\n          saveAs(blob, file);\r\n          this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        this._alertifyService.warning('No file found');\r\n      });\r\n  }\r\n  DownloadIrcFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadFile/' + fname, { responseType: 'blob' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          const blob = new Blob([result], { type: 'application/pdf' });\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'irc_' + fname;\r\n          // saveAs(blob, file);\r\n          return blob;\r\n          this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, err => {\r\n        this._alertifyService.warning('No file found');\r\n      });\r\n  }\r\n  DownloadNidFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadFile/' + fname, { responseType: 'blob' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          const blob = new Blob([result]);\r\n          const saveAs = require('file-saver');\r\n          const file = 'nid_' + fname;\r\n          saveAs(blob, file);\r\n          this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, err => {\r\n        this._alertifyService.warning('No file found');\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport class GetImporterForViewDto implements IGetImporterForViewDto {\r\n  id: number | undefined;\r\n  userId: number | undefined;\r\n  username: string | undefined;\r\n  orgName: string | undefined;\r\n  contactName: string | undefined;\r\n  contactNo: string | undefined;\r\n  position: string | undefined;\r\n  email: string | undefined;\r\n  division: string | undefined;\r\n  district: string | undefined;\r\n  upazila: string | undefined;\r\n  address: string | undefined;\r\n  dlsLicenseType: string | undefined;\r\n  dlsLicenseNo: string | undefined;\r\n  dlsLicenseScan: string | undefined;\r\n  nidNo: string | undefined;\r\n  nidScan: string | undefined;\r\n  ircScan: string | undefined;\r\n  impCode: string | undefined;\r\n\r\n  constructor(data?: IGetImporterForViewDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport interface IGetImporterForViewDto {\r\n  id: number | undefined;\r\n  userId: number | undefined;\r\n  username: string | undefined;\r\n  orgName: string | undefined;\r\n  contactName: string | undefined;\r\n  contactNo: string | undefined;\r\n  position: string | undefined;\r\n  email: string | undefined;\r\n  division: string | undefined;\r\n  district: string | undefined;\r\n  upazila: string | undefined;\r\n  address: string | undefined;\r\n  dlsLicenseType: string | undefined;\r\n  dlsLicenseNo: string | undefined;\r\n  dlsLicenseScan: string | undefined;\r\n  nidNo: string | undefined;\r\n  nidScan: string | undefined;\r\n  ircScan: string | undefined;\r\n  impCode: string | undefined;\r\n}\r\n","export default \"\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1wb3J0ZXIvaW1wb3J0ZXItbWFuYWdlbWVudC92aWV3LWltcG9ydGVyLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9pbXBvcnRlci9pbXBvcnRlci1tYW5hZ2VtZW50L3ZpZXctaW1wb3J0ZXItbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uaXMtaW52YWxpZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQgIWltcG9ydGFudDtcclxufVxyXG4uaW52YWxpZC1mZWVkYmFja3tcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { GetImporterForViewDto } from './importer-management.component';\r\nimport { RegisterService } from 'src/app/_services/register.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'viewImporterModal',\r\n  templateUrl: './view-importer-modal.component.html',\r\n  styleUrls: ['./view-importer-modal.component.css']\r\n})\r\nexport class ViewImporterModalComponent {\r\n\r\n  @ViewChild('createOrEditModal', { static: false }) modal: ModalDirective;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  active = false;\r\n    saving = false;\r\n    changePasswordId=0;\r\n    item: GetImporterForViewDto;\r\n    importer:CreateOrEditImporterDto= new CreateOrEditImporterDto();\r\n\r\n    constructor(\r\n      private registerService: RegisterService,\r\n      private alertify: AlertifyService\r\n\r\n    ) {\r\n        this.item = new GetImporterForViewDto();\r\n    }\r\n\r\n    show(item: GetImporterForViewDto): void {\r\n        this.item = item;\r\n        this.active = true;\r\n        this.modal.show();\r\n    }\r\n    change():void{\r\n      this.changePasswordId=1;\r\n    }\r\n    updatePssword(importerId:any):void{\r\n      \r\n      this.importer.id=importerId;\r\n      console.log(this.importer);\r\n      this.saving = true;\r\n      const importer: IChangePassDto = {\r\n        importerId: importerId,\r\n        newPassword:this.importer.password\r\n      };\r\n      this.registerService.changePasswordAdminSide(importer).subscribe(resp => {\r\n        if (resp) {\r\n          this.alertify.success('Password Updated Successful');\r\n          this.close();\r\n          this.modalSave.emit(null);\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n        this.alertify.error(err.error);\r\n      });;\r\n      \r\n    }\r\n    \r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\r\n\r\nexport class CreateOrEditImporterDto{\r\n  password: string | undefined;\r\n  confirmPassword: string | undefined;\r\n  id: number | undefined;\r\n}\r\ninterface IChangePassDto {\r\n  importerId: number;\r\n  newPassword: string;\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\nconst loginRoutes: Routes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full'},\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(loginRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","export default \"\\r\\nh3{\\r\\n    font-size: 28px;\\r\\n    color: red;\\r\\n}\\r\\n.form-control{\\r\\n    padding: 10px;\\r\\n    background-image: none;\\r\\n    border: 1px solid green !important;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n.btn-login-disabled{\\r\\n    cursor: no-drop;\\r\\n    color: black !important;\\r\\n}\\r\\n.form-control:focus{\\r\\n    border: 2px solid darkgreen !important;\\r\\n}\\r\\n.btn-login:hover{\\r\\n    background:darkgreen;\\r\\n}\\r\\nform {border: 3px solid #f1f1f1;text-align: center;background: cornsilk;padding: 40px}\\r\\ninput[type=text], input[type=password] {\\r\\n  width: 100%;\\r\\n  padding: 12px 20px;\\r\\n  margin: 8px 0;\\r\\n  display: inline-block;\\r\\n  border: 1px solid #ccc;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #4CAF50;\\r\\n  color: white;\\r\\n  padding: 14px 20px;\\r\\n  margin: 8px 0;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n  width: 100%;\\r\\n}\\r\\nbutton:hover {\\r\\n  opacity: 0.8;\\r\\n}\\r\\n.cancelbtn {\\r\\n  width: auto;\\r\\n  padding: 10px 18px;\\r\\n  background-color: #f44336;\\r\\n}\\r\\n.imgcontainer {\\r\\n  text-align: center;\\r\\n  margin: 24px 0 12px 0;\\r\\n}\\r\\nimg.avatar {\\r\\n  width: 40%;\\r\\n  border-radius: 50%;\\r\\n}\\r\\nspan.psw {\\r\\n  float: right;\\r\\n  padding-top: 16px;\\r\\n}\\r\\n/* Change styles for span and cancel button on extra small screens */\\r\\n@media screen and (max-width: 300px) {\\r\\n  span.psw {\\r\\n     display: block;\\r\\n     float: none;\\r\\n  }\\r\\n  .cancelbtn {\\r\\n     width: 100%;\\r\\n  }\\r\\n}\\r\\n.btn-register{\\r\\n  width: 100px !important;\\r\\n  padding: 5px !important;\\r\\n  font-weight: 700 !important;\\r\\n}\\r\\n.form-control{\\r\\n  border-radius: 15px !important; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsVUFBVTtBQUNkO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtDQUFrQztBQUN0QztBQUVBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLHNDQUFzQztBQUMxQztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCO0FBRUEsTUFBTSx5QkFBeUIsQ0FBQyxrQkFBa0IsQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhO0FBRXJGO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixzQkFBc0I7QUFDeEI7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixZQUFZO0VBQ1osZUFBZTtFQUNmLFdBQVc7QUFDYjtBQUVBO0VBQ0UsWUFBWTtBQUNkO0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2QjtBQUVBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtBQUNwQjtBQUdBO0VBQ0UsWUFBWTtFQUNaLGlCQUFpQjtBQUNuQjtBQUVBLG9FQUFvRTtBQUNwRTtFQUNFO0tBQ0csY0FBYztLQUNkLFdBQVc7RUFDZDtFQUNBO0tBQ0csV0FBVztFQUNkO0FBQ0Y7QUFDQTtFQUNFLHVCQUF1QjtFQUN2Qix1QkFBdUI7RUFDdkIsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSw4QkFBOEI7QUFDaEMiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmgze1xyXG4gICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4uZm9ybS1jb250cm9se1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmVlbiAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uaXMtaW52YWxpZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQgIWltcG9ydGFudDtcclxufVxyXG4uaW52YWxpZC1mZWVkYmFja3tcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmJ0bi1sb2dpbi1kaXNhYmxlZHtcclxuICAgIGN1cnNvcjogbm8tZHJvcDtcclxuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xyXG59XHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXN7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBkYXJrZ3JlZW4gIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJ0bi1sb2dpbjpob3ZlcntcclxuICAgIGJhY2tncm91bmQ6ZGFya2dyZWVuO1xyXG59XHJcblxyXG5mb3JtIHtib3JkZXI6IDNweCBzb2xpZCAjZjFmMWYxO3RleHQtYWxpZ246IGNlbnRlcjtiYWNrZ3JvdW5kOiBjb3Juc2lsaztwYWRkaW5nOiA0MHB4fVxyXG5cclxuaW5wdXRbdHlwZT10ZXh0XSwgaW5wdXRbdHlwZT1wYXNzd29yZF0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDEycHggMjBweDtcclxuICBtYXJnaW46IDhweCAwO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMTRweCAyMHB4O1xyXG4gIG1hcmdpbjogOHB4IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICBvcGFjaXR5OiAwLjg7XHJcbn1cclxuXHJcbi5jYW5jZWxidG4ge1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIHBhZGRpbmc6IDEwcHggMThweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG59XHJcblxyXG4uaW1nY29udGFpbmVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAyNHB4IDAgMTJweCAwO1xyXG59XHJcblxyXG5pbWcuYXZhdGFyIHtcclxuICB3aWR0aDogNDAlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG5cclxuXHJcbnNwYW4ucHN3IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgcGFkZGluZy10b3A6IDE2cHg7XHJcbn1cclxuXHJcbi8qIENoYW5nZSBzdHlsZXMgZm9yIHNwYW4gYW5kIGNhbmNlbCBidXR0b24gb24gZXh0cmEgc21hbGwgc2NyZWVucyAqL1xyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMDBweCkge1xyXG4gIHNwYW4ucHN3IHtcclxuICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICBmbG9hdDogbm9uZTtcclxuICB9XHJcbiAgLmNhbmNlbGJ0biB7XHJcbiAgICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbi5idG4tcmVnaXN0ZXJ7XHJcbiAgd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xyXG59XHJcbi5mb3JtLWNvbnRyb2x7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweCAhaW1wb3J0YW50OyBcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { LoginService } from '../_services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  bodyClasses = 'skin-blue sidebar-mini';\r\n  body: HTMLBodyElement = document.getElementsByTagName('body')[0];\r\n  loginForm: FormGroup;\r\n  public loading = false;\r\n  invalidUserCred = false;\r\n  constructor(private router: Router,\r\n              private alertify: AlertifyService,\r\n              private loginService: LoginService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    this.body.classList.add('loginBGImage');\r\n  }\r\n  ngOnDestroy() {\r\n    // remove the the body classes\r\n    this.body.classList.remove('loginBGImage');\r\n   // this.body.classList.remove('sidebar-mini');\r\n  }\r\n  login() {\r\n    this.loading = true;\r\n    this.loginService.login(this.loginForm.value).subscribe(next => {\r\n      this.loading = false;\r\n     // this.alertify.success('logged in successfully');\r\n    }, error => {\r\n      this.loading = false;\r\n      this.invalidUserCred = true;\r\n      // this.alertify.error('Wrong Username or Password!');\r\n    }, () => {\r\n      if (this.loginService.decodedToken.role === 'Admin' || this.loginService.decodedToken.role === 'SA') {\r\n        this.router.navigate(['/portal/admin']);\r\n      }\r\n      if (this.loginService.decodedToken.role === 'Importer') {\r\n      this.router.navigate(['/portal/importer']);\r\n      }\r\n    }\r\n    );\r\n  }\r\n  NavigateToRegister() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InternationalPhoneNumberModule } from 'ngx-international-phone-number';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { LoginComponent } from './login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgxLoadingModule.forRoot({}),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InternationalPhoneNumberModule,\r\n    HttpClientModule,\r\n    LoginRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","export default \"\\r\\n.form-control{\\r\\n    background-image: none;\\r\\n    border: 1px solid green !important;\\r\\n    border-radius: none;\\r\\n}\\r\\n\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n}\\r\\n\\r\\nul {\\r\\n    padding-left: 5px !important;\\r\\n    margin-bottom: 1px !important;\\r\\n    border-bottom: 1px solid lightgrey !important;\\r\\n}\\r\\n\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #ffffff;\\r\\n}\\r\\n\\r\\n.table>tbody>tr>td{\\r\\n    vertical-align: middle !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n}\\r\\n\\r\\n.table>thead>tr{\\r\\n    border-bottom: 2px solid #c8c8c8;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9va1VwVGFiZWxNb2RhbHMvYW5udWFsLXJlcXVpcmVtZW50LWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLHNCQUFzQjtJQUN0QixrQ0FBa0M7SUFDbEMsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksNEJBQTRCO0lBQzVCLDZCQUE2QjtJQUM3Qiw2Q0FBNkM7QUFDakQ7O0FBR0M7SUFDRyw4QkFBOEI7SUFDOUIseUJBQXlCO0FBQzdCOztBQUNBO0lBQ0ksaUNBQWlDO0lBQ2pDLHlCQUF5QjtBQUM3Qjs7QUFDQTtJQUNJLGdDQUFnQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL2xvb2tVcFRhYmVsTW9kYWxzL2FubnVhbC1yZXF1aXJlbWVudC1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZm9ybS1jb250cm9se1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZWVuICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiBub25lO1xyXG59XHJcblxyXG4udGFibGU+dGhlYWQ+dHI+dGh7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnVsIHtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcHggIWltcG9ydGFudDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGdyZXkgIWltcG9ydGFudDtcclxufVxyXG4gICAgXHJcbiBcclxuIC50YWJsZT50aGVhZD50cj50aHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3AgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmZmZmY7XHJcbn1cclxuLnRhYmxlPnRib2R5PnRyPnRke1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcclxufVxyXG4udGFibGU+dGhlYWQ+dHJ7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2M4YzhjODtcclxufVxyXG4iXX0= */\"","import { Component, ViewChild} from '@angular/core';\nimport { Table } from 'primeng/table';\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\nimport { BsModalRef, ModalDirective } from 'ngx-bootstrap/modal';\nimport { IGetAllInputFilterDto, IPagedResultDto } from '../common/app-pagedResult';\nimport { PrimengTableHelper } from '../helpers/PrimengTableHelper';\nimport { AnnualRequirementService } from '../_services/annual-requirement.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { AnnualRequirementComponent } from '../annual-requirement/annual-requirement.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  providers:[AnnualRequirementComponent ],\n  selector: 'annualRequirementModal',\n  templateUrl: './annual-requirement-lookup-table-modal.component.html',\n  styleUrls: ['./annual-requirement-lookup-table-modal.component.css']\n})\nexport class AnnualRequirementLookupTableModalComponent  {\n  @ViewChild('annualReqsModal', { static: true }) annualReqsModal: ModalDirective;\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\n  @ViewChild('paginator', { static: true }) paginator: Paginator;\n  //@ViewChild('annualRequirement', { static: true }) annualRequirement: AnnualRequirementComponent;\n  paramAnReqMstForm: FormGroup;\n  filterText = '';\n  primengTableHelper: PrimengTableHelper;\n  modalRef: BsModalRef;\n  active = false;\n  annReqData: IAllAnnualRequirements;\n  constructor(\n    private alertify: AlertifyService,\n    private annualRequirementService: AnnualRequirementService,\n    private annReqComp: AnnualRequirementComponent\n  ) { \n    this.primengTableHelper = new PrimengTableHelper();\n  }\n\n  show(paramMstForm: FormGroup): void {\n    this.paramAnReqMstForm=paramMstForm;\n    this.active = true;\n    this.paginator.rows = 5;\n   // this.getAll();\n    this.annualReqsModal.show();\n  }\n\n  getAll(event?: LazyLoadEvent) {\n    if (this.primengTableHelper.shouldResetPaging(event)) {\n      this.paginator.changePage(0);\n      return;\n    }\n\n    this.primengTableHelper.showLoadingIndicator();\n    \n    const fltr: IGetAllInputFilterDto = {\n      filter: this.filterText,\n      sorting: this.primengTableHelper.getSorting(this.dataTable),\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\n    }\n    this.annualRequirementService.getAllAnnualRequirementsNew(fltr).subscribe(result => {\n      const a = result as IPagedResultDto;\n      this.primengTableHelper.totalRecordsCount = a.totalCount;\n      this.primengTableHelper.records = a.items;\n      this.primengTableHelper.hideLoadingIndicator();\n     // this.loading = false;\n    }, err => {\n     // this.loading = false;\n      this.alertify.warning('No data found');\n      console.log(err);\n    });\n  }\n  \n  reloadPage(): void {\n    this.paginator.changePage(this.paginator.getPage());\n  }\n\n  selectAnnualReq(a: IAllAnnualRequirements) {\n    this.annReqData=a;\n    this.active = false;\n    this.annualReqsModal.hide();\n    this.annReqComp.selectAnnualReq(a);\n  }\n\n  close(): void {\n    this.active = false;\n    this.annualReqsModal.hide();\n    //this.annualReqsModal.emit(null);\n  }\n  \n}\ninterface IAllAnnualRequirements {\n  id: number;\n  annualReqNo: string;\n  importerId: number;\n  submissionDate: Date;\n  confirmation: boolean;\n  annualRequirementDtls: IAnnualRequirementDtl[];\n}\ninterface IAnnualRequirementDtl {\n  id: number;\n  annReqMstId: number;\n  prodName: string;\n  prodType: string;\n  hsCode: string;\n  packSize: string;\n  tentativeUnits: number;\n  totalAmount: number;\n}","export default \"\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #ffffff;\\r\\n}\\r\\n.table>tbody>tr>td{\\r\\n    vertical-align: middle !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n}\\r\\n.table>thead>tr{\\r\\n    border-bottom: 2px solid #c8c8c8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9va1VwVGFiZWxNb2RhbHMvcHJvZm9ybWEtaW52b2ljZS1sb29rdXAtdGFibGUtbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSw4QkFBOEI7SUFDOUIseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxpQ0FBaUM7SUFDakMseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxnQ0FBZ0M7QUFDcEMiLCJmaWxlIjoic3JjL2FwcC9sb29rVXBUYWJlbE1vZGFscy9wcm9mb3JtYS1pbnZvaWNlLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi50YWJsZT50aGVhZD50cj50aHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3AgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmZmZmY7XHJcbn1cclxuLnRhYmxlPnRib2R5PnRyPnRke1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcclxufVxyXG4udGFibGU+dGhlYWQ+dHJ7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2M4YzhjODtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { LazyLoadEvent } from 'primeng/primeng';\r\nimport { ProformaInvoiceApprovalService } from '../_services/proforma-invoice-approval.service';\r\nimport { NocReportComponent } from '../noc-report/noc-report.component';\r\nimport { SharedDataService } from '../_services/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'proformaInvoiceLookupTableModal',\r\n  templateUrl: './proforma-invoice-lookup-table-modal.component.html',\r\n  styleUrls: ['./proforma-invoice-lookup-table-modal.component.css']\r\n})\r\nexport class ProformaInvoiceLookupTableModalComponent {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @ViewChild('nocReport', { static: true }) nocReport: NocReportComponent;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  filterText = '';\r\n  id: number;\r\n  displayName: string;\r\n  fromDate: any;\r\n  toDate: any;\r\n  p: any = 1;\r\n  active = false;\r\n  saving = false;\r\n  records: IProformaInfoDto[] = [];\r\n  constructor(\r\n    private _proformaApprovalService: ProformaInvoiceApprovalService,\r\n    private _sharedDataService: SharedDataService\r\n  ) {\r\n  }\r\n\r\n  show(): void {\r\n    this.active = true;\r\n    this.getAll();\r\n    this.modal.show();\r\n  }\r\n\r\n  getAll(event?: LazyLoadEvent) {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n\r\n    const proformaApprovalDateRange: IProformaApprovalDateRangeForNocDto = {\r\n      fromDate: this.fromDate,\r\n      toDate: this.toDate,\r\n    };\r\n\r\n    this._proformaApprovalService.getDateWiseApprovalProformaInvoice(proformaApprovalDateRange).subscribe(result => {\r\n      this.records = result as IProformaInfoDto[];\r\n    });\r\n  }\r\n\r\n  setAndSave(r: IProformaInfoDto) {\r\n    \r\n    // this.id = user.id;\r\n    // this.displayName = user.displayName;\r\n   // this.nocReport.getProformaInvoice(record);\r\n   this._sharedDataService.record= r;\r\n    this.active = false;\r\n    this.modal.hide();\r\n    this.modalSave.emit(null);\r\n  }\r\n\r\n  close(): void {\r\n    this.active = false;\r\n    this.modal.hide();\r\n    this.modalSave.emit(null);\r\n  }\r\n  resetFilter(){\r\n    this.filterText = '';\r\n    this.p = 1;\r\n  }\r\n}\r\ninterface IProformaApprovalDateRangeForNocDto {\r\n  fromDate: Date | undefined | null;\r\n  toDate: Date | undefined | null;\r\n}\r\n\r\ninterface IProformaInfoDto {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n  importerId: number;\r\n  importerInfo: IImporterInfo;\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[];\r\n}\r\ninterface IProformaInvoiceDtl {\r\n  id: number;\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n  approvalStatus: boolean;\r\n  approvedBy: number;\r\n  remarks: string;\r\n  approvedAmount: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  username: string;\r\n  password: string;\r\n}","export default \".role-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9va1VwVGFiZWxNb2RhbHMvRTovTk9DTVMvTk1TXzEzLTAxLTIwMjFfRnJvbV9Bc2hpcS9OTVMtYW5ndWxhci9zcmMvYXBwL2xvb2tVcFRhYmVsTW9kYWxzL3JvbGUtbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9sb29rVXBUYWJlbE1vZGFscy9yb2xlLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGFBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL2xvb2tVcFRhYmVsTW9kYWxzL3JvbGUtbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvbGUtbG9va3VwLXRhYmxlLXBhZ2luYXRvciB7XG4gICAgLnVpLXBhZ2luYXRvci1ycHAtb3B0aW9ucyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufSIsIi5yb2xlLWxvb2t1cC10YWJsZS1wYWdpbmF0b3IgLnVpLXBhZ2luYXRvci1ycHAtb3B0aW9ucyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iXX0= */\"","import { Component, ViewChild, Output, EventEmitter} from '@angular/core';\r\nimport { ILookupTableDto } from '../common/lookupTableDtos';\r\nimport { Table } from 'primeng/table';\r\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { UserRoleAssignService } from '../_services/user-role-assign.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from '../common/app-pagedResult';\r\nimport { PrimengTableHelper } from '../helpers/PrimengTableHelper';\r\n\r\n@Component({\r\n  selector: 'roleLookupTableModal',\r\n  templateUrl: './role-lookup-table-modal.component.html',\r\n  styleUrls: ['./role-lookup-table-modal.component.less']\r\n})\r\nexport class RoleLookupTableModalComponent {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static: true }) paginator: Paginator;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  filterText = '';\r\n  id: number;\r\n  displayName: string;\r\n  fullName: string;\r\n\r\n  active = false;\r\n  saving = false;\r\n  primengTableHelper: PrimengTableHelper;\r\n\r\n  constructor(\r\n    private _userRoleAssignService: UserRoleAssignService\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n  show(): void {\r\n    this.active = true;\r\n    this.paginator.rows = 5;\r\n    this.getAll();\r\n    this.modal.show();\r\n  }\r\n\r\n  getAll(event?: LazyLoadEvent) {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n    const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting: this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n\r\n    this._userRoleAssignService.getAllRoleForLookupTable(fltr).subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n      this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n      this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n\r\n  setAndSave(role: ILookupTableForAssignRoleDto) {\r\n    this.id = role.id;\r\n    this.displayName = role.displayName;\r\n    this.fullName = role.fullName;\r\n\r\n    this.active = false;\r\n    this.modal.hide();\r\n    this.modalSave.emit(null);\r\n  }\r\n\r\n  close(): void {\r\n    this.active = false;\r\n    this.modal.hide();\r\n    this.modalSave.emit(null);\r\n  }\r\n\r\n}\r\n\r\nexport interface ILookupTableForAssignRoleDto {\r\n  id: number | undefined;\r\n  displayName: string | undefined;\r\n  fullName: string | undefined;\r\n}\r\n\r\n","export default \".user-lookup-table-paginator .ui-paginator-rpp-options {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9va1VwVGFiZWxNb2RhbHMvRTovTk9DTVMvTk1TXzEzLTAxLTIwMjFfRnJvbV9Bc2hpcS9OTVMtYW5ndWxhci9zcmMvYXBwL2xvb2tVcFRhYmVsTW9kYWxzL3VzZXItbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9sb29rVXBUYWJlbE1vZGFscy91c2VyLWxvb2t1cC10YWJsZS1tb2RhbC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGFBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL2xvb2tVcFRhYmVsTW9kYWxzL3VzZXItbG9va3VwLXRhYmxlLW1vZGFsLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItbG9va3VwLXRhYmxlLXBhZ2luYXRvciB7XG4gICAgLnVpLXBhZ2luYXRvci1ycHAtb3B0aW9ucyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuIiwiLnVzZXItbG9va3VwLXRhYmxlLXBhZ2luYXRvciAudWktcGFnaW5hdG9yLXJwcC1vcHRpb25zIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { Table } from 'primeng/table';\r\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\r\nimport { ILookupTableDto } from '../common/lookupTableDtos';\r\nimport { UserRoleAssignService } from '../_services/user-role-assign.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from '../common/app-pagedResult';\r\nimport { PrimengTableHelper } from '../helpers/PrimengTableHelper';\r\n\r\n@Component({\r\n  selector: 'userLookupTableModal',\r\n  templateUrl: './user-lookup-table-modal.component.html',\r\n  styleUrls: ['./user-lookup-table-modal.component.less']\r\n})\r\nexport class UserLookupTableModalComponent {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static: true }) paginator: Paginator;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  filterText = '';\r\n  id: number;\r\n  displayName: string;\r\n\r\n  active = false;\r\n  saving = false;\r\n  primengTableHelper: PrimengTableHelper;\r\n\r\n  constructor(\r\n    private _userRoleAssignService: UserRoleAssignService\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n  show(): void {\r\n    this.active = true;\r\n    this.paginator.rows = 5;\r\n    this.getAll();\r\n    this.modal.show();\r\n  }\r\n\r\n  getAll(event?: LazyLoadEvent) {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n    const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting: this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator, event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n\r\n    this._userRoleAssignService.getAllUserForLookupTable(fltr).subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n      this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n      this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n\r\n  setAndSave(user: ILookupTableDto) {\r\n    this.id = user.id;\r\n    this.displayName = user.displayName;\r\n\r\n    this.active = false;\r\n    this.modal.hide();\r\n    this.modalSave.emit(null);\r\n  }\r\n\r\n  close(): void {\r\n    this.active = false;\r\n    this.modal.hide();\r\n    this.modalSave.emit(null);\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n.container {\\r\\n    font-family: 'Nikosh',sans-serif;\\r\\n}\\r\\n.is-invalid {\\r\\n     border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n     font-weight: 600;\\r\\n}\\r\\ntable{\\r\\n    border-bottom: 1px solid #696969;\\r\\n}\\r\\ntable>thead>tr>th{\\r\\n    vertical-align: top !important; border: 1px solid #696969;\\r\\n}\\r\\ntable>tbody>tr>td{\\r\\n    vertical-align: middle !important;  \\r\\n    border: 1px solid #696969; \\r\\n    padding-left: 5px;\\r\\n    /* border: 1px solid #c8c8c8; */\\r\\n}\\r\\n.table{\\r\\n    border-bottom: 1px solid #696969;\\r\\n}\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #696969;\\r\\n}\\r\\n.table>tbody>tr>td{\\r\\n     vertical-align: middle !important;\\r\\n     /* border: 1px solid #c8c8c8; */\\r\\n    border: 1px solid #696969;\\r\\n}\\r\\nol {\\r\\n    padding-left: 18px !important;\\r\\n}\\r\\nng-select.ng-invalid.ng-touched .ng-select-container {\\r\\n    border-color: #dc3545;\\r\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbm9jLXJlcG9ydC9ub2MtcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7S0FDSyxnQ0FBZ0M7QUFDckM7QUFDQTtLQUNLLGdCQUFnQjtBQUNyQjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSw4QkFBOEIsRUFBRSx5QkFBeUI7QUFDN0Q7QUFDQTtJQUNJLGlDQUFpQztJQUNqQyx5QkFBeUI7SUFDekIsaUJBQWlCO0lBQ2pCLCtCQUErQjtBQUNuQztBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDO0FBQ0E7SUFDSSw4QkFBOEI7SUFDOUIseUJBQXlCO0FBQzdCO0FBQ0E7S0FDSyxpQ0FBaUM7S0FDakMsK0JBQStCO0lBQ2hDLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSxxQkFBcUI7SUFDckIsbUVBQW1FO0FBQ3ZFIiwiZmlsZSI6InNyYy9hcHAvbm9jLXJlcG9ydC9ub2MtcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmNvbnRhaW5lciB7XHJcbiAgICBmb250LWZhbWlseTogJ05pa29zaCcsc2Fucy1zZXJpZjtcclxufVxyXG4uaXMtaW52YWxpZCB7XHJcbiAgICAgYm9yZGVyOiAxcHggc29saWQgcmVkICFpbXBvcnRhbnQ7XHJcbn1cclxuLmludmFsaWQtZmVlZGJhY2t7XHJcbiAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG50YWJsZXtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNjk2OTY5O1xyXG59XHJcbnRhYmxlPnRoZWFkPnRyPnRoe1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcCAhaW1wb3J0YW50OyBib3JkZXI6IDFweCBzb2xpZCAjNjk2OTY5O1xyXG59XHJcbnRhYmxlPnRib2R5PnRyPnRke1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZSAhaW1wb3J0YW50OyAgXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNjk2OTY5OyBcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODsgKi9cclxufVxyXG4udGFibGV7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzY5Njk2OTtcclxufVxyXG4udGFibGU+dGhlYWQ+dHI+dGh7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNjk2OTY5O1xyXG59XHJcbi50YWJsZT50Ym9keT50cj50ZHtcclxuICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFpbXBvcnRhbnQ7XHJcbiAgICAgLyogYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODsgKi9cclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2OTY5Njk7XHJcbn1cclxub2wge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxOHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxubmctc2VsZWN0Lm5nLWludmFsaWQubmctdG91Y2hlZCAubmctc2VsZWN0LWNvbnRhaW5lciB7XHJcbiAgICBib3JkZXItY29sb3I6ICNkYzM1NDU7XHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSksIDAgMCAwIDNweCAjZmRlNmU4O1xyXG59XHJcblxyXG5cclxuIl19 */\"","import { Component, OnInit, ViewChild, TemplateRef, ElementRef } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { ProformaInvoiceApprovalService } from '../_services/proforma-invoice-approval.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { DatePipe } from '@angular/common';\r\nimport html2canvas from 'html2canvas';\r\nimport * as jsPDF from 'jspdf';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n\r\n@Component({\r\n  selector: 'nocReport',\r\n  templateUrl: './noc-report.component.html',\r\n  styleUrls: ['./noc-report.component.css']\r\n})\r\nexport class NocReportComponent implements OnInit {\r\n  @ViewChild('createOrEditModal', { static: false }) createOrEditModal: TemplateRef<any>;\r\n // @ViewChild('content', { static: false }) content: ElementRef;\r\n\r\n  active = false;\r\n  saving = false;\r\n  viewCertificate = false;\r\n  bsValue: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  fromDate: any;\r\n  toDate: any;\r\n  filterText = '';\r\n  id: number;\r\n  displayName: string;\r\n  p: any = 1;\r\n  records: IProformaInfoDto[] = [];\r\n  item: IProformaInfoDto;\r\n  dropdownList = [];\r\n  selectedItems = [];\r\n  dropdownSettings: IDropdownSettings;\r\n  modalRef: BsModalRef;\r\n  //declare model.property\r\n  proformaInvoiceNo: any;\r\n  submissionDate: any;\r\n  proformaDate:any;\r\n  proformaSubmissionDate: any;\r\n  approvalDate:any;\r\n  portOfLoading: any;\r\n  countryOfOrigin:any;\r\n  //letterNoFixed = '33.01.0000.111.05.303.12-' + this.datePipe.transform(new Date, \"yMd-hms\");\r\n  letterNoFixed='৩৩.০১.০০০০.১১১.০৫';\r\n  nocCertDate = new Date;\r\n  printingDate = this.datePipe.transform(new Date, \"dd/MM/yyyy\");\r\n  //\r\n  d=this.printingDate;\r\n  finalEnlishToBanglaNumber={'/':'/','0':'০','1':'১','2':'২','3':'৩','4':'৪','5':'৫','6':'৬','7':'৭','8':'৮','9':'৯'};\r\n  retStr='';\r\n  //\r\n  letterNo = '৩৩.০১.০০০০.১১১.০৫.';\r\n  letterNoInput = '';\r\n  toAddress: any;\r\n  subject: any;\r\n  orgName: any;\r\n  importerAddress: any;\r\n  onulipiId:any;\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[];\r\n  nocTypes = [\r\n    {id: 1, name: 'Fish Meal/DDGS/ CGM/CPC/etc.' },\r\n    {id: 2, name: 'Veterinary Medicine/Vaccine/ DAR Items'},\r\n    {id: 3, name: 'Poultry Meal'},\r\n    {id: 4, name: 'Others'},\r\n  \r\n];\r\n\r\nselectedNocType=1;\r\nselectedNocId: number;\r\n  constructor(\r\n    private _proformaApprovalService: ProformaInvoiceApprovalService,\r\n    private modalService: BsModalService,\r\n    private datePipe: DatePipe) { }\r\n    changeNocDate(value: Date){\r\n      debugger;\r\n      if(value==null)\r\n      {\r\n        return false;\r\n      }\r\n      this.printingDate=this.getDigitBanglaFromEnglish(this.datePipe.transform(value, \"dd/MM/yyyy\"));\r\n    }\r\n  ngOnInit() {\r\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-blue'}, { dateInputFormat: 'DD/MM/YYYY'});\r\n    this.bsValue = new Date();\r\n    this.printingDate = this.datePipe.transform(this.nocCertDate, \"dd/MM/yyyy\");\r\n    this.printingDate=this.getDigitBanglaFromEnglish(this.printingDate);\r\n    // this.dropdownList = [\r\n    //   { item_id: 1, item_text: 'কমিশনার, কাস্টমস হাউজ, চট্টগ্রাম, বাংলাদেশ ।' },\r\n    //   { item_id: 2, item_text: 'সহকারী পরিচালক, প্রাণীসম্পদ কয়ারেনটাইন স্টেশন, চট্টগ্রাম, বাংলাদেশ ।' },\r\n    //   { item_id: 3, item_text: 'সভাপতি, আহকাব, সেন্টার পয়েন্ট, ইউনিট -১২  ডি, ১৪/এ, তেজকুনীপাড়া, ফার্মগেট বা/এ, তেজগাঁও, ঢাকা -১২২৫ ।' },\r\n    //   { item_id: 4, item_text: 'জেলা প্রাণীসম্পদ কর্মকর্তা, মানিকগঞ্জ ।' }\r\n    // ];\r\n    // this.selectedItems = [\r\n    //   { item_id: 1, item_text: 'কমিশনার, কাস্টমস হাউজ, চট্টগ্রাম, বাংলাদেশ ।' },\r\n    //   { item_id: 2, item_text: 'সহকারী পরিচালক, প্রাণীসম্পদ কয়ারেনটাইন স্টেশন, চট্টগ্রাম, বাংলাদেশ ।' },\r\n    //   { item_id: 3, item_text: 'সভাপতি, আহকাব, সেন্টার পয়েন্ট, ইউনিট -১২  ডি, ১৪/এ, তেজকুনীপাড়া, ফার্মগেট বা/এ, তেজগাঁও, ঢাকা -১২২৫ ।' },\r\n    //   { item_id: 4, item_text: 'জেলা প্রাণীসম্পদ কর্মকর্তা, মানিকগঞ্জ ।' }\r\n    // ];\r\n    // this.dropdownSettings = {\r\n    //   singleSelection: false,\r\n    //   idField: 'item_id',\r\n    //   textField: 'item_text',\r\n    //   selectAllText: 'Select All',\r\n    //   unSelectAllText: 'UnSelect All',\r\n    //   itemsShowLimit: 3,\r\n    //   allowSearchFilter: true\r\n    // };\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-lg',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  onItemSelect(item: any) {\r\n  }\r\n  onSelectAll(items: any) {\r\n  }\r\n\r\n  resetDateRange() {\r\n    this.fromDate = \"\";\r\n    this.toDate = \"\";\r\n    this.viewCertificate = false;\r\n    this.subject = '';\r\n  }\r\n  getDigitBanglaFromEnglish(englishNumber){\r\n    for (var x in this.finalEnlishToBanglaNumber) {\r\n      englishNumber = englishNumber.replace(new RegExp(x, 'g'), this.finalEnlishToBanglaNumber[x]);\r\n    }\r\n    return englishNumber;\r\n  }\r\n  //\r\n  getAll() {\r\n    const proformaApprovalDateRange: IProformaApprovalDateRangeForNocDto = {\r\n      fromDate: this.fromDate,\r\n      toDate: this.toDate,\r\n    };\r\n\r\n    this._proformaApprovalService.getDateWiseApprovalProformaInvoice(proformaApprovalDateRange).subscribe(result => {\r\n      this.records = result as IProformaInfoDto[];\r\n    });\r\n  }\r\n  // //\r\n  // {id: 1, name: 'Chittagong/Chattogram' },\r\n  // {id: 2, name: 'Sonamasjid'},\r\n  // {id: 3, name: 'Benapole'},\r\n  // {id: 4, name: 'Mongla'},\r\n  // {id: 5, name: 'Hili'},\r\n  // {id: 6, name: 'Darshana'},\r\n  // {id: 7, name: 'Shahjalal International Airport'}\r\n  // //\r\n\r\n  setAndSave(r: IProformaInfoDto) {\r\n    debugger;\r\n    this.proformaInvoiceNo = r.proformaInvoiceNo;\r\n    this.proformaDate=this.datePipe.transform(r.proformaDate, \"dd/MM/yyyy\");\r\n    this.submissionDate =this.datePipe.transform(r.submissionDate, \"dd/MM/yyyy\");\r\n    this.proformaSubmissionDate = r.submissionDate;\r\n    this.proformaSubmissionDate = this.datePipe.transform(this.proformaSubmissionDate, \"dd/MM/yyyy\");\r\n    this.proformaSubmissionDate=this.getDigitBanglaFromEnglish(this.proformaSubmissionDate);\r\n    this.approvalDate = this.datePipe.transform( r.approvalDate, \"dd/MM/yyyy\");\r\n    this.approvalDate=this.getDigitBanglaFromEnglish(this.approvalDate);\r\n    //this.letterNoFixed= this.datePipe.transform( r.approvalDate, \"dd.MM.yyyy\");\r\n    this.letterNoFixed='৩৩.০১.০০০০.১১১.০৫.';\r\n    this.portOfLoading = r.portOfLoading;\r\n    this.countryOfOrigin=r.countryOfOrigin;\r\n    this.toAddress = r.importerInfo.address + ', \\n' + r.importerInfo.upazila + ', \\n' + r.importerInfo.district;\r\n    this.orgName = r.importerInfo.orgName;\r\n    this.importerAddress = r.importerInfo.address;\r\n    this.proformaInvoiceDtls = r.proformaInvoiceDtls;\r\n    if(r.portOfEntry=='Chittagong/Chattogram'){\r\n      this.onulipiId=1;\r\n    }\r\n    else if(r.portOfEntry=='Sonamasjid'){\r\n      this.onulipiId=2;\r\n    }\r\n    else if(r.portOfEntry=='Benapole'){\r\n      this.onulipiId=3;\r\n    }\r\n    else if(r.portOfEntry=='Mongla'){\r\n      this.onulipiId=4;\r\n    }\r\n    else if(r.portOfEntry== 'Hili'){\r\n      this.onulipiId=5;\r\n    }\r\n    else if(r.portOfEntry=='Darshana'){\r\n      this.onulipiId=6;\r\n    }\r\n    else if(r.portOfEntry=='Shahjalal International Airport'){\r\n      this.onulipiId=7;\r\n    }\r\n    else if(r.portOfEntry=='Banglabandha'){\r\n      this.onulipiId=8;\r\n    }\r\n    else if(r.portOfEntry=='Birol'){\r\n      this.onulipiId=9;\r\n    }\r\n    else if(r.portOfEntry=='Rohanpur'){\r\n      this.onulipiId=10;\r\n    }\r\n    else if(r.portOfEntry=='Vomra'){\r\n      this.onulipiId=11;\r\n    }\r\n    else if(r.portOfEntry=='Burimari'){\r\n      this.onulipiId=12;\r\n    }\r\n    else{\r\n      this.onulipiId=0;\r\n\r\n    }\r\n    this.modalRef.hide();\r\n    this.viewCertificate = true;\r\n  }\r\n\r\n  resetFilter() {\r\n    this.filterText = '';\r\n    this.p = 1;\r\n  }\r\n  openSelectProformaInvoiceModal(selectedNocTypeValue: any) {\r\n    this.selectedNocId=selectedNocTypeValue;\r\n    this.getAll();\r\n    this.openModal(this.createOrEditModal);\r\n  }\r\n\r\n  public captureScreen() {\r\n   // let doc = new jsPDF();\r\n  //   doc.addHTML(this.content.nativeElement, function() {\r\n  //     doc.save(\"obrz.pdf\");\r\n  //  });\r\n  debugger;\r\n  var data = document.getElementById('content');\r\n  html2canvas(data).then(canvas => {  \r\n    // Few necessary setting options\r\n    var imgWidth = 200;\r\n    var pageHeight = 220;\r\n    var imgHeight = canvas.height * imgWidth / canvas.width;\r\n    var heightLeft = imgHeight;\r\n\r\n    const contentDataURL = canvas.toDataURL('image/png')  \r\n    let pdf = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF  \r\n    var position = 10;  \r\n   // pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight);\r\n    pdf.addImage(contentDataURL, 'PNG', 5, position, imgWidth, pageHeight);\r\n    //pdf.save('noc.pdf'); // Generated PDF\r\n     //------siam view pdf--------//\r\n     pdf.setProperties({\r\n      title: \"noc.pdf\"\r\n  });\r\n     var blob = pdf.output(\"blob\");\r\n      window.open(URL.createObjectURL(blob));  \r\n       //------siam view pdf--------//\r\n  });\r\n  }\r\n  captureSc() {\r\n    this.printingDate = this.datePipe.transform(this.nocCertDate, \"dd/MM/yyyy\");\r\n    this.printingDate=this.getDigitBanglaFromEnglish(this.printingDate);\r\n  debugger;\r\n  var x = document.getElementById('content');\r\n  if (x.style.display === \"none\") {\r\n    x.style.display = \"block\";\r\n  } \r\n    const divContents = document.getElementById('content').innerHTML;\r\n    const a = window.open();\r\n    // tslint:disable-next-line: max-line-length\r\n    a.document.write('<html> <style>@page { size: auto;  margin-top: 0mm;margin-bottom: 0mm; };</style>');\r\n    a.document.write('<body style=\"font-size:22px;padding-top:10px;font-family:kalpurush,arial,sans-serif;\">');\r\n    a.document.write(divContents);\r\n    a.document.write('</body></html>');\r\n    a.document.title = 'NOC_Report';\r\n    a.document.close();\r\n    if (x.style.display !== \"none\") {\r\n      x.style.display = \"none\";\r\n    }\r\n    a.print();\r\n  }\r\n\r\n}\r\n\r\ninterface IProformaApprovalDateRangeForNocDto {\r\n  fromDate: Date | undefined | null;\r\n  toDate: Date | undefined | null;\r\n}\r\n\r\n//\r\ninterface IProformaInfoDto {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n  importerId: number;\r\n  importerInfo: IImporterInfo;\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[];\r\n}\r\ninterface IProformaInvoiceDtl {\r\n  id: number;\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n  approvalStatus: boolean;\r\n  approvedBy: number;\r\n  remarks: string;\r\n  approvedAmount: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, NgModule } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css'],\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { PortalComponent } from './portal.component';\r\nimport { ImporterDashboardComponent } from '../importer-dashboard/importer-dashboard.component';\r\nimport { ImporterRoleGuard } from '../_guard/importerRole.guard';\r\nimport { AdminDashboardComponent } from '../admin-dashboard/admin-dashboard.component';\r\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\r\nimport { AnnualRequirementComponent } from '../annual-requirement/annual-requirement.component';\r\nimport { ProformaInvoiceComponent } from '../proforma-invoice/proforma-invoice.component';\r\nimport { EmployeesComponent } from '../employee/create-employee/employees.component';\r\nimport { CreateEditEmployeeModalComponent } from '../employee/create-employee/create-edit-employee-modal.component';\r\nimport { ImporterManagementComponent } from '../importer/importer-management/importer-management.component';\r\nimport { RoleManagementComponent } from '../role-management/role-management.component';\r\nimport { AdminRoleGuard } from '../_guard/adminRole.guard';\r\nimport { ProformaInvoiceApprovalComponent } from '../proforma-invoice-approval/proforma-invoice-approval.component';\r\nimport { NocReportComponent } from '../noc-report/noc-report.component';\r\nimport { ProformaInvoiceReportComponent } from '../proforma-invoice-report/proforma-invoice-report.component';\r\nimport { ProformaApprovalSummaryReportComponent } from '../proforma-approval-summary-report/proforma-approval-summary-report.component';\r\nimport { EditImporterInfoComponent } from '../importer/edit-importer-info/edit-importer-info.component';\r\nimport { CurrencyRateComponent } from '../currency-rate/currency-rate.component';\r\nimport { SuperAdminRoleGuard } from '../_guard/superAdminRole.guard';\r\nimport { EditInfoComponent } from '../importer/edit-info/edit-info.component';\r\nimport { ChangePasswordComponent } from '../importer/change-password/change-password.component';\r\nimport { EditEmployeeInfoComponent } from '../employee/create-employee/edit-employee-info/edit-employee-info.component';\r\n\r\n\r\nconst potalRoutes: Routes = [\r\n    {\r\n        path: 'portal',\r\n        component: PortalComponent,\r\n        children: [\r\n            {path: '', redirectTo: 'importer', pathMatch: 'full'},\r\n            {path: 'importer', component: ImporterDashboardComponent, canActivate: [ImporterRoleGuard]},\r\n            {path: 'admin', component: AdminDashboardComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'pagenotfound', component: PageNotFoundComponent },\r\n            {path: 'annualrequirement', component: AnnualRequirementComponent, canActivate: [ImporterRoleGuard] },\r\n            {path: 'proformainvoice', component: ProformaInvoiceComponent, canActivate: [ImporterRoleGuard]},\r\n            {path: 'createemployee', component: CreateEditEmployeeModalComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'employee', component: EmployeesComponent, canActivate: [SuperAdminRoleGuard]},\r\n            {path: 'importermanagement', component: ImporterManagementComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'rolemanagement', component: RoleManagementComponent, canActivate: [SuperAdminRoleGuard]},\r\n            {path: 'currencyRate', component: CurrencyRateComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'proformaapproval', component: ProformaInvoiceApprovalComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'nocReport', component: NocReportComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'proformainvoicereport', component: ProformaInvoiceReportComponent, canActivate: [ImporterRoleGuard]},\r\n            {path: 'proformainvoiceapprovalreport', component: ProformaApprovalSummaryReportComponent, canActivate: [AdminRoleGuard]},\r\n            {path: 'editimporterinfo', component: EditImporterInfoComponent, canActivate: [ImporterRoleGuard]},\r\n            {path: 'editemployeeinfo', component: EditEmployeeInfoComponent },\r\n            {path: 'editinfo', component: EditInfoComponent, canActivate: [ImporterRoleGuard]},\r\n            {path: 'chngpass', component: ChangePasswordComponent, canActivate: [ImporterRoleGuard]},\r\n        ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(potalRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PortalRoutingModule {}\r\n","export default \".navbar-custom-menu-left{\\r\\n    float: left;\\r\\n    padding-top: 1%;\\r\\n    padding-left: 2%;\\r\\n    font-weight: bold;\\r\\n    color: white;\\r\\n    font-size: large;\\r\\n    text-shadow: 2px 2px 4px #000000;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9ydGFsL3BvcnRhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZ0NBQWdDO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvcG9ydGFsL3BvcnRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhci1jdXN0b20tbWVudS1sZWZ0e1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBwYWRkaW5nLXRvcDogMSU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIlO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggNHB4ICMwMDAwMDA7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { $ } from 'protractor';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../_services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-portal',\r\n  templateUrl: './portal.component.html',\r\n  styleUrls: ['./portal.component.css']\r\n})\r\nexport class PortalComponent implements OnInit, OnDestroy {\r\n//  bodyClasses = 'skin-blue sidebar-mini';\r\n  // body: HTMLBodyElement = document.getElementsByTagName('body')[0];\r\n  constructor(private alertify: AlertifyService, private router: Router, private loginService: LoginService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // add the the body classes\r\n   // this.body.classList.add('skin-blue');\r\n  // this.body.classList.add('sidebar-mini');\r\n  }\r\n  ngOnDestroy() {\r\n    // remove the the body classes\r\n   // this.body.classList.remove('skin-blue');\r\n   // this.body.classList.remove('sidebar-mini');\r\n  }\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/login']);\r\n  }\r\n  editImporter() {\r\n    this.router.navigate(['/portal/editimporterinfo']);\r\n  }\r\n  checkPermission() {\r\n    if(this.loginService.getUserRole()==\"Importer\")\r\n    {\r\n      this.router.navigate(['/portal/editimporterinfo']);\r\n    }\r\n    else if(this.loginService.getUserRole()==\"Admin\" || \"SA\" || \"Executive\")\r\n    {\r\n      this.router.navigate(['/portal/editemployeeinfo']);\r\n    }\r\n    else{\r\n      console.log(\"Other\");\r\n    }\r\n  }\r\n  getUserRole() {\r\n    return this.loginService.getUserRole();\r\n  }\r\n  getUserName() {\r\n    return this.loginService.getUserName();\r\n  }\r\n  getOrganizationName() {\r\n    return this.loginService.getOrganizationName();\r\n  }\r\n  getPosition() {\r\n    return this.loginService.getPosition();\r\n  }\r\n }\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { PortalComponent } from './portal.component';\r\nimport { PortalRoutingModule } from './portal-routing.module';\r\nimport { AdminDashboardComponent } from '../admin-dashboard/admin-dashboard.component';\r\nimport { ImporterDashboardComponent } from '../importer-dashboard/importer-dashboard.component';\r\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\r\nimport { AnnualRequirementComponent } from '../annual-requirement/annual-requirement.component';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { TooltipModule} from 'ngx-bootstrap/tooltip';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EmployeesComponent } from '../employee/create-employee/employees.component';\r\nimport { CreateEditEmployeeModalComponent } from '../employee/create-employee/create-edit-employee-modal.component';\r\nimport { PaginatorModule } from 'primeng/primeng';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ProformaInvoiceComponent } from '../proforma-invoice/proforma-invoice.component';\r\nimport { ViewEmployeeModalComponent } from '../employee/create-employee/view-employee-modal-component.component';\r\nimport { ImporterManagementComponent } from '../importer/importer-management/importer-management.component';\r\nimport { ViewImporterModalComponent } from '../importer/importer-management/view-importer-modal.component';\r\nimport { RoleManagementComponent } from '../role-management/role-management.component';\r\nimport { RoleComponent } from '../role-management/role/role.component';\r\nimport { UserRoleAssignComponent } from '../role-management/user-role-assign/user-role-assign.component';\r\nimport { CreateEditRoleModalComponent } from '../role-management/role/create-edit-role-modal.component';\r\nimport { CreateEditUserRoleAssignModalComponent } from '../role-management/user-role-assign/create-edit-user-role-assign-modal.component';\r\nimport { UserLookupTableModalComponent } from '../lookUpTabelModals/user-lookup-table-modal.component';\r\nimport { RoleLookupTableModalComponent } from '../lookUpTabelModals/role-lookup-table-modal.component';\r\nimport { InternationalPhoneNumberModule } from 'ngx-international-phone-number';\r\nimport { ProformaInvoiceApprovalComponent } from '../proforma-invoice-approval/proforma-invoice-approval.component';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NocReportComponent } from '../noc-report/noc-report.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { ProformaInvoiceLookupTableModalComponent } from '../lookUpTabelModals/proforma-invoice-lookup-table-modal.component';\r\nimport {DatePipe} from '@angular/common';\r\nimport { ProformaInvoiceReportComponent } from '../proforma-invoice-report/proforma-invoice-report.component';\r\nimport { ProformaApprovalSummaryReportComponent } from '../proforma-approval-summary-report/proforma-approval-summary-report.component';\r\nimport { EditImporterInfoComponent } from '../importer/edit-importer-info/edit-importer-info.component';\r\nimport { CurrencyRateComponent } from '../currency-rate/currency-rate.component';\r\nimport { CreateOrEditCurrencyModalComponent } from '../currency-rate/create-or-edit-currency-modal.component';\r\nimport { EditInfoComponent } from '../importer/edit-info/edit-info.component';\r\nimport { ChangePasswordComponent } from '../importer/change-password/change-password.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { EditEmployeeInfoComponent } from '../employee/create-employee/edit-employee-info/edit-employee-info.component';\r\nimport { AnnualRequirementLookupTableModalComponent } from '../lookUpTabelModals/annual-requirement-lookup-table-modal.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    //Ashiq added\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ModalModule,\r\n\t  TabsModule,\r\n\t  TooltipModule,\r\n    BsDropdownModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    TableModule,\r\n    PaginatorModule,\r\n    InternationalPhoneNumberModule,\r\n    NgMultiSelectDropDownModule,\r\n\r\n    //\r\n    HttpClientModule,\r\n    PortalRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgxLoadingModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule\r\n  ],\r\n  declarations: [\r\n    PortalComponent,\r\n    AdminDashboardComponent,\r\n    ImporterDashboardComponent,\r\n    PageNotFoundComponent,\r\n    AnnualRequirementComponent,\r\n    CreateEditEmployeeModalComponent,\r\n    EmployeesComponent,\r\n    ViewEmployeeModalComponent,\r\n    ProformaInvoiceComponent,\r\n    ImporterManagementComponent,\r\n    ViewImporterModalComponent,\r\n    RoleManagementComponent,\r\n    RoleComponent,\r\n    UserRoleAssignComponent,\r\n    CreateEditRoleModalComponent,\r\n    CreateEditUserRoleAssignModalComponent,\r\n    UserLookupTableModalComponent,\r\n    RoleLookupTableModalComponent,\r\n    AnnualRequirementLookupTableModalComponent,\r\n    ProformaInvoiceApprovalComponent,\r\n    NocReportComponent,\r\n    ProformaInvoiceLookupTableModalComponent,\r\n    ProformaInvoiceReportComponent,\r\n    ProformaApprovalSummaryReportComponent,\r\n    EditImporterInfoComponent,\r\n    CurrencyRateComponent,\r\n    CreateOrEditCurrencyModalComponent,\r\n    EditInfoComponent,\r\n    ChangePasswordComponent,\r\n    EditEmployeeInfoComponent\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class PortalModule { }\r\n","export default \".date-label{\\r\\n    font-size: 15px;;\\r\\n}\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n}\\r\\n.table>tbody>tr>td{\\r\\n    vertical-align: middle !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n    font-size: 14px !important;;\\r\\n}\\r\\n.table>thead>tr{\\r\\n    border-bottom: 2px solid #c8c8c8;\\r\\n    background-color: #3c8dbc;\\r\\n    color: #ffffff;\\r\\n    font-size: 14px;\\r\\n}\\r\\nul {\\r\\n    padding-left: 5px !important;\\r\\n}\\r\\n.btn-grid-pdf{\\r\\n    padding: 5px 36px !important;\\r\\n}\\r\\n.btn-pro-approval{\\r\\n    margin: 2px !important;\\r\\n}\\r\\n.btn.disabled, .btn[disabled], fieldset[disabled] .btn{\\r\\n    opacity: .50 !important;\\r\\n}\\r\\ntable tbody tr:nth-child(even) {\\r\\n    background: #f9f9f9 !important;\\r\\n}\\r\\ntable tbody tr:nth-child(odd) {\\r\\n    background: #ffffff !important;\\r\\n}\\r\\n.m-badge{\\r\\n    background:#eaeaea;\\r\\n    vertical-align:middle;\\r\\n    text-align:center;\\r\\n    display:inline-block;padding:0px 3px;border-radius:.75rem\\r\\n}\\r\\n.m-badge--warning{background-color:#ffb822;color:#fff}\\r\\n.m-badge--danger{background-color:#d43a3a;color:#fff}\\r\\n.m-badge--success{background-color: forestgreen; color: #ffffff;}\\r\\n.m-badge--wide{letter-spacing:0px;padding:0px 4px;border-radius:.75rem}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZm9ybWEtYXBwcm92YWwtc3VtbWFyeS1yZXBvcnQvcHJvZm9ybWEtYXBwcm92YWwtc3VtbWFyeS1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLDhCQUE4QjtJQUM5Qix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGlDQUFpQztJQUNqQyx5QkFBeUI7SUFDekIsMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSxnQ0FBZ0M7SUFDaEMseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxlQUFlO0FBQ25CO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFDQTtJQUNJLDRCQUE0QjtBQUNoQztBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSx1QkFBdUI7QUFDM0I7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQztBQUNBO0lBQ0ksOEJBQThCO0FBQ2xDO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixvQkFBb0IsQ0FBQyxlQUFlLENBQUM7QUFDekM7QUFDQSxrQkFBa0Isd0JBQXdCLENBQUMsVUFBVTtBQUNyRCxpQkFBaUIsd0JBQXdCLENBQUMsVUFBVTtBQUNwRCxrQkFBa0IsNkJBQTZCLEVBQUUsY0FBYyxDQUFDO0FBQ2hFLGVBQWUsa0JBQWtCLENBQUMsZUFBZSxDQUFDLG9CQUFvQiIsImZpbGUiOiJzcmMvYXBwL3Byb2Zvcm1hLWFwcHJvdmFsLXN1bW1hcnktcmVwb3J0L3Byb2Zvcm1hLWFwcHJvdmFsLXN1bW1hcnktcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0ZS1sYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDs7XHJcbn1cclxuLnRhYmxlPnRoZWFkPnRyPnRoe1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcclxufVxyXG4udGFibGU+dGJvZHk+dHI+dGR7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzhjOGM4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4ICFpbXBvcnRhbnQ7O1xyXG59XHJcbi50YWJsZT50aGVhZD50cntcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjYzhjOGM4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNjOGRiYztcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbnVsIHtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLmJ0bi1ncmlkLXBkZntcclxuICAgIHBhZGRpbmc6IDVweCAzNnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLmJ0bi1wcm8tYXBwcm92YWx7XHJcbiAgICBtYXJnaW46IDJweCAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4uZGlzYWJsZWQsIC5idG5bZGlzYWJsZWRdLCBmaWVsZHNldFtkaXNhYmxlZF0gLmJ0bntcclxuICAgIG9wYWNpdHk6IC41MCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZDogI2Y5ZjlmOSAhaW1wb3J0YW50O1xyXG59XHJcbnRhYmxlIHRib2R5IHRyOm50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmYgIWltcG9ydGFudDtcclxufVxyXG4ubS1iYWRnZXtcclxuICAgIGJhY2tncm91bmQ6I2VhZWFlYTtcclxuICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcclxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzowcHggM3B4O2JvcmRlci1yYWRpdXM6Ljc1cmVtXHJcbn1cclxuLm0tYmFkZ2UtLXdhcm5pbmd7YmFja2dyb3VuZC1jb2xvcjojZmZiODIyO2NvbG9yOiNmZmZ9XHJcbi5tLWJhZGdlLS1kYW5nZXJ7YmFja2dyb3VuZC1jb2xvcjojZDQzYTNhO2NvbG9yOiNmZmZ9XHJcbi5tLWJhZGdlLS1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6IGZvcmVzdGdyZWVuOyBjb2xvcjogI2ZmZmZmZjt9XHJcbi5tLWJhZGdlLS13aWRle2xldHRlci1zcGFjaW5nOjBweDtwYWRkaW5nOjBweCA0cHg7Ym9yZGVyLXJhZGl1czouNzVyZW19XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { ProformaInvoiceReportService } from '../_services/proforma-invoice-report.service';\r\nimport 'jspdf-autotable';\r\nimport * as jsPDF from 'jspdf';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-proforma-approval-summary-report',\r\n  templateUrl: './proforma-approval-summary-report.component.html',\r\n  styleUrls: ['./proforma-approval-summary-report.component.css']\r\n})\r\nexport class ProformaApprovalSummaryReportComponent implements OnInit {\r\n  proformaInvoiceSearchForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  bsValue: Date = new Date();\r\n  searchText = '';\r\n  filterValue='';\r\n  proformaSearchDto: IProformaInvoiceSearchDto;\r\n  porformaInfos: IProformaInfoDto[] = [];\r\n  porformaInfosReport: IProformaInfoDto[] = [];\r\n  loading = false;\r\n  p: any = 1;\r\n  viewBtn=false;\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private proformaReportService: ProformaInvoiceReportService,\r\n    private alertify: AlertifyService,\r\n    private datePipe: DatePipe\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-blue' }, { dateInputFormat: 'DD/MM/YYYY' });\r\n    this.bsValue = new Date();\r\n    this.getCurrentYearProformaInfo();\r\n    this.createProformaSearchForm();\r\n  }\r\n  createProformaSearchForm() {\r\n    this.proformaInvoiceSearchForm = new FormGroup({\r\n      fromDate: new FormControl('', [Validators.required]),\r\n      toDate: new FormControl('', [Validators.required]),\r\n      status: new FormControl('')\r\n    });\r\n  }\r\n  getSearchFilterValue(filterValue :any){\r\n    this.filterValue=filterValue;\r\n    //console.log(this.filterValue);\r\n  }\r\n  getDateWiseProformaByImporter() {\r\n    this.loading = true;\r\n    // tslint:disable-next-line: radix\r\n    const uId = parseInt(this.loginService.getEmpOrImpName());\r\n    const proformaReportSearchDto: IProformaInvoiceSearchDto = {\r\n      userId: uId,\r\n      fromDate: this.proformaInvoiceSearchForm.value.fromDate,\r\n      toDate: this.proformaInvoiceSearchForm.value.toDate,\r\n      status: this.proformaInvoiceSearchForm.value.status,\r\n      searchText: this.filterValue\r\n    };\r\n    this.proformaReportService.getDateWiseProformaInfos(proformaReportSearchDto).subscribe(resp => {\r\n      this.porformaInfos = resp as IProformaInfoDto[];\r\n      this.loading = false;\r\n      if (this.porformaInfos.length <= 0) {\r\n        this.alertify.warning('No Data Found');\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  getCurrentYearProformaInfo() {\r\n    this.loading = false;\r\n    const uId = this.loginService.getEmpOrImpName();\r\n    const uIdDto: IUserIdDto = {\r\n      userId: uId\r\n    };\r\n    this.proformaReportService.getCurrentYearProformaInfo(uIdDto).subscribe(resp => {\r\n      this.porformaInfos = resp as IProformaInfoDto[];\r\n      this.loading = false;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  resetDateFilter() {\r\n    this.proformaInvoiceSearchForm.reset();\r\n    this.porformaInfos = [];\r\n    this.searchText = '';\r\n    this.p = 1;\r\n  }\r\n\r\n  viewCheckRes(){\r\n    const uId = parseInt(this.loginService.getEmpOrImpName());\r\n    const proformaReportSearchDto: IProformaInvoiceSearchDto = {\r\n      userId: uId,\r\n      fromDate: this.proformaInvoiceSearchForm.value.fromDate,\r\n      toDate: this.proformaInvoiceSearchForm.value.toDate,\r\n      status: this.proformaInvoiceSearchForm.value.status,\r\n      searchText: this.filterValue\r\n    };\r\n    \r\n    this.proformaReportService.getDateWiseProformaInfos(proformaReportSearchDto).subscribe(resp => {\r\n      \r\n      this.porformaInfosReport = resp as IProformaInfoDto[];\r\n      this.loading = false;\r\n      if (this.porformaInfosReport.length > 0) {\r\n        this.viewProformaSummaryReport(true,this.porformaInfosReport);\r\n      }\r\n      else{\r\n        this.alertify.warning('No Data Found');\r\n\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  viewProformaSummaryReport(enhance, resValue: any) {\r\n    const r = resValue as IProformaInfoDto[];\r\n    let row: any[] = [];\r\n    const rowD: any[] = [];\r\n    debugger;\r\n    let col = ['SL\\n No.', 'Name &\\n Addrsss of\\n the importer', 'Product(s)', 'PI No.','PI\\n Date', ' Manufacturer\\n /Exporter', 'Country\\n of Origin',\r\n      'Pack\\n Size','Approved\\n Amt. \\n(Ton\\n/Unit)', 'Status']; // initialization for headers\r\n      const title = 'Proforma Invoice Summary Report'; // title of report\r\n   if( this.proformaInvoiceSearchForm.value.status==='pending')\r\n   {\r\n     col = ['SL\\n No.', 'Name &\\n Addrsss of\\n the importer', 'Product(s)', 'PI No.','PI\\n Date', ' Manufacturer\\n /Exporter', 'Country\\n of Origin',\r\n    'Pack\\n Size', 'PI Amt. \\n(Ton/Unit)','Approved\\n Amt. \\n(Ton/Unit)', 'Status']; // initialization for headers\r\n  \r\n   }\r\n    let slNO = 0;\r\n    for (const a of r) {\r\n      row.push(++slNO);\r\n      row.push(a.importerInfo.orgName + '\\n' +a.importerInfo.address);\r\n      let productLength = a.proformaInvoiceDtls.length;\r\n      let x = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        productLength--;\r\n        x += p.prodName;\r\n        if (productLength !== 0) {\r\n          x += ',\\n';\r\n        }\r\n      }\r\n\r\n      row.push(x);\r\n      row.push(a.proformaInvoiceNo);\r\n      const convertedDate = new Date(a.proformaDate);\r\n      let d = '';\r\n      d += convertedDate.getDate() + '/' + (convertedDate.getMonth() + 1) + '/' + convertedDate.getFullYear();\r\n      row.push(d);\r\n      let yLength = a.proformaInvoiceDtls.length;\r\n      let y = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        yLength--;\r\n        y += p.manufacturer;\r\n        if (yLength !== 0) { y += ',\\n'; }\r\n\r\n      }\r\n      row.push(y);\r\n      row.push(a.countryOfOrigin);\r\n      let bLength = a.proformaInvoiceDtls.length;\r\n      let b = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        bLength--;\r\n        b += p.packSize;\r\n        if (bLength !== 0) {\r\n          b += ',\\n';\r\n        }\r\n      }\r\n      row.push(b);\r\n      if( this.proformaInvoiceSearchForm.value.status==='pending')\r\n      {\r\n      let cLength = a.proformaInvoiceDtls.length;\r\n      let c = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        cLength--;\r\n        // const apmt = p.approvedAmount === null || undefined ||\r\n        //   '' ? '--' : (p.approvedAmount === 0 ? '--' : p.approvedAmount );\r\n        let apmt;\r\n        if( p.totalAmount === null || undefined ||'' || 0){\r\n          apmt='--';\r\n        }\r\n        else{\r\n          if(p.noOfUnits>0){ apmt=p.totalAmount + ' Unit';}\r\n          if(p.totalAmount>0){ apmt=p.totalAmount + ' MT';}\r\n        }\r\n        c += apmt;\r\n        if (cLength !== 0) {\r\n          c += '\\n';\r\n        }\r\n\r\n      }\r\n      row.push(c);\r\n    }\r\n\r\n\r\n      let eLength = a.proformaInvoiceDtls.length;\r\n      let e = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        eLength--;\r\n        // const apmt = p.approvedAmount === null || undefined ||\r\n        //   '' ? '--' : (p.approvedAmount === 0 ? '--' : p.approvedAmount );\r\n        let apmt;\r\n        if( p.approvedAmount === null || undefined ||'' || 0){\r\n          apmt='--';\r\n        }\r\n        else{\r\n          if(p.noOfUnits>0){ apmt=p.approvedAmount + ' Unit';}\r\n          if(p.totalAmount>0){ apmt=p.approvedAmount + ' MT';}\r\n        }\r\n        e += apmt;\r\n        if (eLength !== 0) {\r\n          e += '\\n';\r\n        }\r\n\r\n      }\r\n      row.push(e);\r\n\r\n      let gLength = a.proformaInvoiceDtls.length;\r\n      let g = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        gLength--;\r\n        const apmt = p.approvedAmount === null || undefined ||\r\n          '' ? 'Pending' : (p.approvedAmount === 0 ? 'Rejected' : 'Approved');\r\n\r\n        g += apmt;\r\n        if (gLength !== 0) {\r\n          g += ',\\n';\r\n        }\r\n\r\n      }\r\n      row.push(g);\r\n      rowD.push(row);\r\n      row = [];\r\n    }\r\n    this.getReport(col, rowD, title, enhance);\r\n  }\r\n\r\n  getReport(col: any[], rowD: any[], title: any, enhance) {\r\n    const totalPagesExp = '{total_pages_count_string}';\r\n    const pdf = new jsPDF('l', 'pt', 'a4');\r\n    pdf.setTextColor(0, 0, 0);\r\n    pdf.setFontSize(15);\r\n    pdf.text('Government of the People\\'s Republic of Bangladesh', 250, 40);\r\n    pdf.setFontSize(13);\r\n    pdf.text('Department of Livestock Services', 320, 55);\r\n    pdf.setFontType('thin');\r\n    pdf.setFontSize(11);\r\n    pdf.text('Krishi Khamar Sarak, Farmgate, Dhaka-1215', 315, 70);\r\n    pdf.setFontSize(11);\r\n    pdf.text('www.dls.gov.bd', 370, 85);\r\n    var fromDate = new Date(this.proformaInvoiceSearchForm.value.fromDate);\r\n    const fDate = this.datePipe.transform(fromDate, \"dd/MM/yyyy\");\r\n    var toDate = new Date(this.proformaInvoiceSearchForm.value.toDate);\r\n    const tDate = this.datePipe.transform(toDate, \"dd/MM/yyyy\");\r\n    debugger;\r\n    pdf.text('Submission Date: ' + fDate+' - '+tDate, 315, 100);\r\n    const image1 = new Image();\r\n    image1.src = '../../../assets/img/logo/govt-logo.png';\r\n    pdf.addImage(image1, 'jpeg', 170, 20, 50, 50);\r\n    const image2 = new Image();\r\n    image2.src = '../../../assets/img/logo/logo.png';\r\n    pdf.addImage(image2, 'jpeg', 630, 20, 50, 50);\r\n    // pdf.text(\"Email:\", 450, 60); // 450 here is x-axis and 80 is y-axis\r\n    // pdf.text(\"Phone:\", 450, 80); // 450 here is x-axis and 80 is y-axis\r\n    // pdf.text(\"\" + title, 435, 100);  //\r\n    pdf.setFontType('bold');\r\n    pdf.text('Report Name: ', 40, 100);\r\n    pdf.setFontType('normal');\r\n    pdf.text('Proforma Invoice Summary Report', 110, 100);\r\n    const pDate = this.datePipe.transform(new Date, \"dd/MM/yyyy\");\r\n    pdf.text('Printing Date: ' + pDate, 680, 100);\r\n\r\n    const pageContent = function (data) {\r\n      // HEADER\r\n\r\n      // FOOTER\r\n      let str = 'Page ' + data.pageCount;\r\n      // Total page number plugin only available in jspdf v1.0+\r\n      if (typeof pdf.putTotalPages === 'function') {\r\n        str = str + ' of ' + totalPagesExp;\r\n      }\r\n      pdf.setFontSize(9);\r\n      const pageHeight = pdf.internal.pageSize.height || pdf.internal.pageSize.getHeight();\r\n      pdf.text(str, data.settings.margin.left, pageHeight - 10); // showing current page number\r\n    };\r\n    pdf.autoTable(col, rowD,\r\n      {\r\n        theme: 'grid',\r\n        // table: { fillColor: 255, textColor: 0, fontStyle: 'normal', lineWidth: 0.1 },\r\n        // head: { textColor: 0, fillColor: [211,211,211], fontStyle: 'bold', lineWidth: 0 },\r\n        // body: {},\r\n        // foot: { textColor: 255, fillColor: [26, 188, 156], fontStyle: 'bold', lineWidth: 0 },\r\n        // alternateRow: {},\r\n        headStyles: { fillColor: [192, 192, 192], halign: 'center', valign: 'middle' },\r\n        didParseCell: enhance ? this.enhanceWordBreak : null,\r\n        // enhance working properly\r\n        didDrawPage: pageContent,\r\n        margin: { top: 110  ,left: 40},\r\n        bodyStyles: { valign: 'middle', lineColor: [153, 153, 153] },\r\n\r\n        styles: { overflow: 'linebreak', fontSize: 9, textColor: 0 },\r\n\r\n        // font: \"helvetica\", \r\n        // fontStyle: 'normal',\r\n      });\r\n\r\n    // for adding total number of pages // i.e 10 etc\r\n    if (typeof pdf.putTotalPages === 'function') {\r\n      pdf.putTotalPages(totalPagesExp);\r\n    }\r\n       //------siam view pdf--------//\r\n   // pdf.save(title + '.pdf');\r\n      pdf.setProperties({\r\n        title: title + \".pdf\"\r\n    });\r\n   \r\n   var blob = pdf.output(\"blob\");\r\n    window.open(URL.createObjectURL(blob));\r\n     //------siam view pdf--------//\r\n  }\r\n  enhanceWordBreak({ doc, cell, column }) {\r\n    if (cell === undefined) {\r\n      return;\r\n    }\r\n\r\n    const hasCustomWidth = (typeof cell.styles.cellWidth === 'number');\r\n\r\n    if (hasCustomWidth || cell.raw == null || cell.colSpan > 1) {\r\n      return\r\n    }\r\n\r\n    let text;\r\n\r\n    if (cell.raw instanceof Node) {\r\n      text = cell.raw.innerText;\r\n    } else {\r\n      if (typeof cell.raw == 'object') {\r\n        // not implemented yet\r\n        // when a cell contains other cells (colSpan)\r\n        return;\r\n      } else {\r\n        text = '' + cell.raw;\r\n      }\r\n    }\r\n\r\n    // split cell string by space or \"-\"\r\n    const words = text.split(/\\s+|[?<=-]/);\r\n\r\n    // calculate longest word width\r\n    const maxWordUnitWidth = words.map(s => Math.floor(doc.getStringUnitWidth(s) * 100) / 100).reduce((a, b) => Math.max(a, b), 0);\r\n    const maxWordWidth = maxWordUnitWidth * (cell.styles.fontSize / doc.internal.scaleFactor)\r\n\r\n    const minWidth = cell.padding('horizontal') + maxWordWidth;\r\n\r\n    // update minWidth for cell & column\r\n\r\n    if (minWidth > cell.minWidth) {\r\n      cell.minWidth = minWidth;\r\n    }\r\n\r\n    if (cell.minWidth > cell.wrappedWidth) {\r\n      cell.wrappedWidth = cell.minWidth;\r\n    }\r\n\r\n    if (cell.minWidth > column.minWidth) {\r\n      column.minWidth = cell.minWidth;\r\n    }\r\n\r\n    if (column.minWidth > column.wrappedWidth) {\r\n      column.wrappedWidth = column.minWidth;\r\n    }\r\n  }\r\n}\r\ninterface IUserIdDto {\r\n  userId: number;\r\n}\r\ninterface IProformaInvoiceSearchDto {\r\n  userId: number;\r\n  fromDate: Date | undefined | null;\r\n  toDate: Date | undefined | null;\r\n  status: string;\r\n  searchText: string;\r\n}\r\n\r\ninterface IProformaInfoDto {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n  importerId: number;\r\n  importerInfo: IImporterInfo;\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[];\r\n}\r\ninterface IProformaInvoiceMst {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  importerId: number;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n}\r\ninterface IProformaInvoiceDtl {\r\n  id: number;\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n  approvalStatus: boolean;\r\n  approvedBy: number;\r\n  remarks: string;\r\n  approvedAmount: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  username: string;\r\n  password: string;\r\n}","export default \".date-label{\\r\\n    font-size: 15px;;\\r\\n}\\r\\n.table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n}\\r\\n.table>tbody>tr>td{\\r\\n    vertical-align: middle !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n    font-size: 14px !important;;\\r\\n}\\r\\n.table>thead>tr{\\r\\n    border-bottom: 2px solid #c8c8c8;\\r\\n    background-color: #3c8dbc;\\r\\n    color: #ffffff;\\r\\n    font-size: 14px;\\r\\n}\\r\\nul {\\r\\n    padding-left: 5px !important;\\r\\n}\\r\\n.btn-grid-pdf{\\r\\n    padding: 5px 36px !important;\\r\\n}\\r\\n.btn-pro-approval{\\r\\n    margin: 2px !important;\\r\\n}\\r\\n.btn.disabled, .btn[disabled], fieldset[disabled] .btn{\\r\\n    opacity: .50 !important;\\r\\n}\\r\\ntable tbody tr:nth-child(even) {\\r\\n    background: #f9f9f9 !important;\\r\\n}\\r\\ntable tbody tr:nth-child(odd) {\\r\\n    background: #ffffff !important;\\r\\n}\\r\\n.m-badge--warning{background-color:#ffb822;color:#fff}\\r\\n.m-badge--danger{background-color:#d43a3a;color:#fff}\\r\\n.m-badge--success{background-color: forestgreen; color: #ffffff;}\\r\\n.m-badge--wide{letter-spacing:0px;padding:0px 4px;border-radius:.75rem}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZm9ybWEtaW52b2ljZS1hcHByb3ZhbC9wcm9mb3JtYS1pbnZvaWNlLWFwcHJvdmFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSw4QkFBOEI7SUFDOUIseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxpQ0FBaUM7SUFDakMseUJBQXlCO0lBQ3pCLDBCQUEwQjtBQUM5QjtBQUNBO0lBQ0ksZ0NBQWdDO0lBQ2hDLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksNEJBQTRCO0FBQ2hDO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFDQTtJQUNJLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBRUE7SUFDSSw4QkFBOEI7QUFDbEM7QUFDQTtJQUNJLDhCQUE4QjtBQUNsQztBQUNBLGtCQUFrQix3QkFBd0IsQ0FBQyxVQUFVO0FBQ3JELGlCQUFpQix3QkFBd0IsQ0FBQyxVQUFVO0FBQ3BELGtCQUFrQiw2QkFBNkIsRUFBRSxjQUFjLENBQUM7QUFDaEUsZUFBZSxrQkFBa0IsQ0FBQyxlQUFlLENBQUMsb0JBQW9CIiwiZmlsZSI6InNyYy9hcHAvcHJvZm9ybWEtaW52b2ljZS1hcHByb3ZhbC9wcm9mb3JtYS1pbnZvaWNlLWFwcHJvdmFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0ZS1sYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDs7XHJcbn1cclxuLnRhYmxlPnRoZWFkPnRyPnRoe1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcclxufVxyXG4udGFibGU+dGJvZHk+dHI+dGR7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzhjOGM4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4ICFpbXBvcnRhbnQ7O1xyXG59XHJcbi50YWJsZT50aGVhZD50cntcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjYzhjOGM4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNjOGRiYztcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbnVsIHtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLmJ0bi1ncmlkLXBkZntcclxuICAgIHBhZGRpbmc6IDVweCAzNnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLmJ0bi1wcm8tYXBwcm92YWx7XHJcbiAgICBtYXJnaW46IDJweCAhaW1wb3J0YW50O1xyXG59XHJcbi5idG4uZGlzYWJsZWQsIC5idG5bZGlzYWJsZWRdLCBmaWVsZHNldFtkaXNhYmxlZF0gLmJ0bntcclxuICAgIG9wYWNpdHk6IC41MCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZDogI2Y5ZjlmOSAhaW1wb3J0YW50O1xyXG59XHJcbnRhYmxlIHRib2R5IHRyOm50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmYgIWltcG9ydGFudDtcclxufVxyXG4ubS1iYWRnZS0td2FybmluZ3tiYWNrZ3JvdW5kLWNvbG9yOiNmZmI4MjI7Y29sb3I6I2ZmZn1cclxuLm0tYmFkZ2UtLWRhbmdlcntiYWNrZ3JvdW5kLWNvbG9yOiNkNDNhM2E7Y29sb3I6I2ZmZn1cclxuLm0tYmFkZ2UtLXN1Y2Nlc3N7YmFja2dyb3VuZC1jb2xvcjogZm9yZXN0Z3JlZW47IGNvbG9yOiAjZmZmZmZmO31cclxuLm0tYmFkZ2UtLXdpZGV7bGV0dGVyLXNwYWNpbmc6MHB4O3BhZGRpbmc6MHB4IDRweDtib3JkZXItcmFkaXVzOi43NXJlbX0iXX0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { ProformaInvoiceApprovalService } from '../_services/proforma-invoice-approval.service';\r\nimport { FileDownloadService } from '../helpers/file-download.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { timeout } from 'q';\r\n\r\n@Component({\r\n  selector: 'app-proforma-invoice-approval',\r\n  templateUrl: './proforma-invoice-approval.component.html',\r\n  styleUrls: ['./proforma-invoice-approval.component.css']\r\n})\r\nexport class ProformaInvoiceApprovalComponent implements OnInit {\r\n  @ViewChild('piInfoDetailModal', { static: false }) piInfoDetailModal: TemplateRef<any>;\r\n  @ViewChild('piApprovalModal', { static: false }) piApprovalModal: TemplateRef<any>;\r\n  public loading = false;\r\n  modalRef: BsModalRef;\r\n  proformaApprovalSearchForm: FormGroup;\r\n  bsValue: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  porformaInfos: IProformaInfoDto[];\r\n  proformaInfo: IProformaInfoDto;\r\n  fileDownloadInitiated: boolean;\r\n  editedProformaInfo: IProformaInfoDto;\r\n  baseUrl = environment.apiUrl + 'ProformaInvoice/';\r\n  searchText = '';\r\n  p: any = 1;\r\n  apvAmtValidationErrorMsg=false;\r\n  constructor(\r\n    private proformaApprovalService: ProformaInvoiceApprovalService,\r\n    private modalService: BsModalService,\r\n    private fileDownloadService: FileDownloadService,\r\n    private alertify: AlertifyService,\r\n    private http: HttpClient,\r\n\r\n    ) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.createProformaApprovalSearchForm();\r\n    this.GetAllPendingPorformaInvoices();\r\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-blue'}, { dateInputFormat: 'DD/MM/YYYY'});\r\n    this.bsValue = new Date();\r\n   // this.proformaApprovalSearchForm.get('toDate').setValue(this.bsValue);\r\n  }\r\n  createProformaApprovalSearchForm() {\r\n    this.proformaApprovalSearchForm = new FormGroup({\r\n      fromDate: new FormControl('', [Validators.required]),\r\n      toDate: new FormControl('', [Validators.required]),\r\n      isPending: new FormControl(false)\r\n    });\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n        keyboard: false,\r\n        class: 'modal-lg',\r\n        ignoreBackdropClick: true\r\n    });\r\n  }\r\n\r\n  //\r\n  DownloadPiFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          //const blob = new Blob([result]);\r\n          //window.open(URL.createObjectURL(blob));\r\n          //const saveAs = require('file-saver');\r\n          //const file = 'proforma_invoice_' + fname;\r\n         //saveAs(blob, file);\r\n          //this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // //\r\n\r\n  // DownloadPiFile(fname: string) {\r\n  //   this.fileDownloadInitiated = true;\r\n  //   return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'blob' })\r\n  //     .subscribe((result: any) => {\r\n  //       if (result.type !== 'text/plain') {\r\n  //         \r\n  //         const blob = new Blob([result]);\r\n  //         //const fileURL = URL.createObjectURL(blob);\r\n  //         //window.open(fileURL, '_blank');\r\n\r\n  //         const saveAs = require('file-saver');\r\n  //         const file = 'proforma_invoice_' + fname;\r\n  //         saveAs(blob, file);\r\n  //         this.fileDownloadInitiated = false;\r\n  //       } else {\r\n  //         this.fileDownloadInitiated = false;\r\n  //         alert('File not found in Blob!');\r\n  //       }\r\n  //     }, error => {\r\n  //       console.log(error);\r\n  //     });\r\n  // }\r\n  DownloadLitFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'literature_review_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DownloadTestFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'test_report_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DownloadOtherFile(fname: string) {\r\n    if (fname === '' || fname === undefined || fname === null) {\r\n      this.alertify.warning('No File Found');\r\n    }\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'other_doc_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          this.alertify.warning('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  GetAllPendingPorformaInvoices() {\r\n    this.proformaApprovalService.GetAllPendingPorformaInvoices().subscribe(resp => {\r\n      \r\n      this.porformaInfos = resp as IProformaInfoDto[];\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  GetDateWiseSubmittedProformaInvoice() {\r\n    this.loading = true;\r\n    const proformaApprovalDateRange: IProformaApprovalDateRangeDto = {\r\n      fromDate: this.proformaApprovalSearchForm.value.fromDate,\r\n      toDate: this.proformaApprovalSearchForm.value.toDate,\r\n      isPending: this.proformaApprovalSearchForm.value.isPending\r\n    };\r\n    this.proformaApprovalService.GetDateWiseSubmittedProformaInvoice(proformaApprovalDateRange).subscribe(resp => {\r\n      this.porformaInfos = resp as IProformaInfoDto[];\r\n      this.loading = false;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  showDetails(p: IProformaInfoDto) {\r\n    this.openModal(this.piInfoDetailModal);\r\n    this.proformaInfo = p;\r\n  }\r\n  proformaApproval(p: IProformaInfoDto) {\r\n    this.editedProformaInfo = p;\r\n    this.openModal(this.piApprovalModal);\r\n    this.proformaInfo = p;\r\n    this.porformaInfos.find(\r\n      item => item.id === p.id\r\n    // tslint:disable-next-line: only-arrow-functions\r\n    ).proformaInvoiceDtls.forEach(function(item, index) {\r\n      if(item.totalAmount>0)\r\n      {\r\n        item.approvedAmount=item.totalAmount;\r\n      }\r\n      if(item.noOfUnits>0)\r\n      {\r\n        item.approvedAmount=item.noOfUnits;\r\n      }\r\n     // item.approvedAmount = item.approvedAmount == null ? item.totalAmount : item.approvedAmount;\r\n    });\r\n  }\r\n  apvAmtValidate(apvAmt:any,noOfUnit:any,totalAmt:any){\r\n    \r\n    this.apvAmtValidationErrorMsg=false;\r\n    if( apvAmt!=\"\"){\r\n      if((apvAmt>noOfUnit || apvAmt <= 0)\r\n       && ( apvAmt > totalAmt || apvAmt <= 0))\r\n       {\r\n        this.alertify.error('Invalid Approval Amount');\r\n        this.apvAmtValidationErrorMsg=true;\r\n        }\r\n    \r\n       }\r\n\r\n  }\r\n  approve(a: IProformaInvoiceDtl) {\r\n    \r\n    if ((a.approvedAmount > a.totalAmount || a.approvedAmount <= 0)\r\n       && ( a.approvedAmount > a.noOfUnits || a.approvedAmount <= 0)) {\r\n      this.alertify.error('Invalid Approval Amount');\r\n      return false;\r\n    }\r\n    // if ( a.approvedAmount > a.noOfUnits || a.approvedAmount <= 0) {\r\n    //   this.alertify.error('Invalid Approval Amount');\r\n    //   return false;\r\n    // }\r\n    this.loading = true;\r\n    const pi = this.porformaInfos.filter(x => x.proformaInvoiceDtls.find(\r\n      item => item.id === a.id\r\n    ));\r\n    this.porformaInfos.find(\r\n      item => item.id === pi[0].id\r\n    // tslint:disable-next-line: only-arrow-functions\r\n    ).proformaInvoiceDtls.forEach(function(item, index){\r\n      if (item.id === a.id) {\r\n        item.approvalStatus = true;\r\n        item.approvedAmount = a.approvedAmount;\r\n      }\r\n    });\r\n    this.proformaApprovalService.ApproveProformaInvoice(a).subscribe(resp => {\r\n      const dtls = resp as IProformaInvoiceDtl;\r\n      this.loading = false;\r\n      this.alertify.success('Proforma approval successfull');\r\n    }, error => {\r\n      console.log(error);\r\n      this.alertify.error('Proforma approval failed');\r\n    });\r\n  }\r\n  reject(a: IProformaInvoiceDtl) {\r\n    this.loading = true;\r\n    const pi = this.porformaInfos.filter(x => x.proformaInvoiceDtls.find(\r\n      item => item.id === a.id\r\n    ));\r\n    this.porformaInfos.find(\r\n      item => item.id === pi[0].id\r\n    // tslint:disable-next-line: only-arrow-functions\r\n    ).proformaInvoiceDtls.forEach(function(item, index){\r\n      if (item.id === a.id) {\r\n        item.approvalStatus = false;\r\n        item.approvedAmount = 0;\r\n      }\r\n    });\r\n    this.proformaApprovalService.RejectProformaInvoice(a).subscribe(resp => {\r\n      const dtls = resp as IProformaInvoiceDtl;\r\n      this.loading = false;\r\n      this.alertify.success('Proforma reject successfull');\r\n    }, error => {\r\n      console.log(error);\r\n      this.alertify.error('Proforma reject failed');\r\n    });\r\n  }\r\n  updateProformaInfoTable() {\r\n    const proAppvalDateRange: IProformaApprovalDateRangeDto = {\r\n      fromDate: this.proformaApprovalSearchForm.value.fromDate === '' ? undefined : this.proformaApprovalSearchForm.value.fromDate,\r\n      toDate: this.proformaApprovalSearchForm.value.toDate === '' ? undefined : this.proformaApprovalSearchForm.value.toDate,\r\n      isPending: this.proformaApprovalSearchForm.value.isPending\r\n    };\r\n    if (proAppvalDateRange.fromDate === undefined || proAppvalDateRange.fromDate == null ||\r\n      proAppvalDateRange.toDate === undefined || proAppvalDateRange.toDate == null  ) {\r\n      this.GetAllPendingPorformaInvoices();\r\n    } else {\r\n      this.proformaApprovalService.GetDateWiseSubmittedProformaInvoice(proAppvalDateRange).subscribe(resp => {\r\n        this.porformaInfos = resp as IProformaInfoDto[];\r\n      });\r\n    }\r\n  }\r\n  destroyApprovalModal() {\r\n    this.updateProformaInfoTable();\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  resetDateRange() {\r\n    this.proformaApprovalSearchForm.reset();\r\n    this.searchText = '';\r\n    this.p = 1;\r\n  }\r\n}\r\ninterface IProformaApprovalDateRangeDto {\r\n  fromDate: Date | undefined | null;\r\n  toDate: Date | undefined | null;\r\n  isPending: boolean;\r\n}\r\ninterface IProformaInfoDto {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n  importerId: number;\r\n  importerInfo: IImporterInfo;\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[];\r\n}\r\ninterface IProformaInvoiceMst {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  importerId: number;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n}\r\ninterface IProformaInvoiceDtl {\r\n  id: number;\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n  approvalStatus: boolean;\r\n  approvedBy: number;\r\n  remarks: string;\r\n  approvedAmount: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n","export default \".table>thead>tr>th{\\r\\n    vertical-align: top !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n}\\r\\n.table>tbody>tr>td{\\r\\n    vertical-align: middle !important;\\r\\n    border: 1px solid #c8c8c8;\\r\\n    font-size: 14px !important;;\\r\\n}\\r\\nul {\\r\\n    padding-left: 5px !important;\\r\\n}\\r\\n.ngx-pagination .current {\\r\\n    padding: 0.1875rem 0.625rem;\\r\\n    background: #00a65a !important;\\r\\n    color: #fefefe;\\r\\n    cursor: default;\\r\\n}\\r\\n.m-badge--warning{background-color:#ffb822;color:#fff}\\r\\n.m-badge--danger{background-color:#d43a3a;color:#fff}\\r\\n.m-badge--success{background-color: forestgreen; color: #ffffff;}\\r\\n.m-badge--wide{letter-spacing:0px;padding:0px 4px;border-radius:.75rem}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZm9ybWEtaW52b2ljZS1yZXBvcnQvcHJvZm9ybWEtaW52b2ljZS1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtJQUM5Qix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLGlDQUFpQztJQUNqQyx5QkFBeUI7SUFDekIsMEJBQTBCO0FBQzlCO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFDQTtJQUNJLDJCQUEyQjtJQUMzQiw4QkFBOEI7SUFDOUIsY0FBYztJQUNkLGVBQWU7QUFDbkI7QUFDQSxrQkFBa0Isd0JBQXdCLENBQUMsVUFBVTtBQUNyRCxpQkFBaUIsd0JBQXdCLENBQUMsVUFBVTtBQUNwRCxrQkFBa0IsNkJBQTZCLEVBQUUsY0FBYyxDQUFDO0FBQ2hFLGVBQWUsa0JBQWtCLENBQUMsZUFBZSxDQUFDLG9CQUFvQiIsImZpbGUiOiJzcmMvYXBwL3Byb2Zvcm1hLWludm9pY2UtcmVwb3J0L3Byb2Zvcm1hLWludm9pY2UtcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGU+dGhlYWQ+dHI+dGh7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzhjOGM4O1xyXG59XHJcbi50YWJsZT50Ym9keT50cj50ZHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjOGM4Yzg7XHJcbiAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDs7XHJcbn1cclxudWwge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHggIWltcG9ydGFudDtcclxufVxyXG4ubmd4LXBhZ2luYXRpb24gLmN1cnJlbnQge1xyXG4gICAgcGFkZGluZzogMC4xODc1cmVtIDAuNjI1cmVtO1xyXG4gICAgYmFja2dyb3VuZDogIzAwYTY1YSAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6ICNmZWZlZmU7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuLm0tYmFkZ2UtLXdhcm5pbmd7YmFja2dyb3VuZC1jb2xvcjojZmZiODIyO2NvbG9yOiNmZmZ9XHJcbi5tLWJhZGdlLS1kYW5nZXJ7YmFja2dyb3VuZC1jb2xvcjojZDQzYTNhO2NvbG9yOiNmZmZ9XHJcbi5tLWJhZGdlLS1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6IGZvcmVzdGdyZWVuOyBjb2xvcjogI2ZmZmZmZjt9XHJcbi5tLWJhZGdlLS13aWRle2xldHRlci1zcGFjaW5nOjBweDtwYWRkaW5nOjBweCA0cHg7Ym9yZGVyLXJhZGl1czouNzVyZW19Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { ProformaInvoiceReportService } from '../_services/proforma-invoice-report.service';\r\nimport 'jspdf-autotable';\r\nimport * as jsPDF from 'jspdf';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-proforma-invoice-report',\r\n  templateUrl: './proforma-invoice-report.component.html',\r\n  styleUrls: ['./proforma-invoice-report.component.css']\r\n})\r\nexport class ProformaInvoiceReportComponent implements OnInit {\r\n  proformaInvoiceSearchForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  bsValue: Date = new Date();\r\n  searchText = '';\r\n  proformaSearchDto: IProformaInvoiceSearchDto;\r\n  porformaInfos: IProformaInfoDto[] = [];\r\n  loading = false;\r\n  p: any = 1;\r\n  beforeFiveDayDate: any;\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private proformaReportService: ProformaInvoiceReportService,\r\n    private alertify: AlertifyService,\r\n    private datePipe: DatePipe\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getImporterWiseCurrentYearProforma();\r\n    this.createProformaApprovalSearchForm();\r\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-green' }, { dateInputFormat: 'DD/MM/YYYY' });\r\n    this.bsValue = new Date();\r\n    var pastDate = new Date();\r\n    pastDate.setDate(pastDate.getDate() - 5);\r\n    this.beforeFiveDayDate = this.datePipe.transform(pastDate, \"dd/MM/yyyy\");\r\n    console.log(\"before 5 day : \" + this.beforeFiveDayDate);\r\n\r\n  }\r\n  createProformaApprovalSearchForm() {\r\n    this.proformaInvoiceSearchForm = new FormGroup({\r\n      fromDate: new FormControl('', [Validators.required]),\r\n      toDate: new FormControl('', [Validators.required]),\r\n      status: new FormControl('')\r\n    });\r\n  }\r\n  getDateWiseProformaByImporter() {\r\n    this.loading = true;\r\n    // tslint:disable-next-line: radix\r\n    const impId = parseInt(this.loginService.getEmpOrImpName());\r\n    const proformaReportSearchDto: IProformaInvoiceSearchDto = {\r\n      importerId: impId,\r\n      fromDate: this.proformaInvoiceSearchForm.value.fromDate,\r\n      toDate: this.proformaInvoiceSearchForm.value.toDate,\r\n      status: this.proformaInvoiceSearchForm.value.status\r\n    };\r\n    this.proformaReportService.getDateWiseProformaByImporter(proformaReportSearchDto).subscribe(resp => {\r\n      this.porformaInfos = resp as IProformaInfoDto[];\r\n      this.loading = false;\r\n      if (this.porformaInfos.length <= 0) {\r\n        this.alertify.warning('No Data Found');\r\n      }\r\n      if (this.porformaInfos.length) {\r\n        for (let p of this.porformaInfos) {\r\n          if (p.approvalDate) {\r\n            var aD = this.datePipe.transform(p.approvalDate, \"dd/MM/yyyy\")\r\n            if (aD >= this.beforeFiveDayDate) {\r\n              for (let d of p.proformaInvoiceDtls) {\r\n                d.approvedAmount = null;\r\n                d.remarks = null;\r\n              //  this.proformaInvoiceSearchForm.value.status=pending;\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  getImporterWiseCurrentYearProforma() {\r\n    this.loading = true;\r\n    const impId = this.loginService.getEmpOrImpName();\r\n    const impIdDto: IImporterIdDto = {\r\n      importerId: impId\r\n    };\r\n    this.proformaReportService.getImporterWiseCurrentYearProforma(impIdDto).subscribe(resp => {\r\n      this.porformaInfos = resp as IProformaInfoDto[];\r\n      if (this.porformaInfos.length) {\r\n        for (let p of this.porformaInfos) {\r\n          if (p.approvalDate) {\r\n            var aD = this.datePipe.transform(p.approvalDate, \"dd/MM/yyyy\")\r\n            if (aD >= this.beforeFiveDayDate) {\r\n              for (let d of p.proformaInvoiceDtls) {\r\n                d.approvedAmount = null;\r\n                d.remarks = null;\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      this.loading = false;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  resetDateFilter() {\r\n    this.proformaInvoiceSearchForm.reset();\r\n    this.porformaInfos = [];\r\n    this.searchText = '';\r\n    this.p = 1;\r\n  }\r\n  viewProformaSummaryReport() {\r\n    if (this.porformaInfos.length <= 0) {\r\n      this.alertify.warning('No Data to Show Report');\r\n      return false;\r\n    }\r\n    // const doc = new jsPDF();\r\n    // doc.text(\"Hello there\", 15, 15);\r\n    // doc.save('first.pdf');\r\n    let orgName;\r\n    let orgAddress\r\n    const r = this.porformaInfos as IProformaInfoDto[];\r\n    for (let i of r) {\r\n      orgName = i.importerInfo.orgName;\r\n      orgAddress = i.importerInfo.address;\r\n    }\r\n    let row: any[] = [];\r\n    let rowD: any[] = [];\r\n    let col = ['SL \\nNO.', 'Name OF \\nImporter', 'Products', 'PI \\nNo.', 'PI \\nDate', 'Manufacturer',\r\n      'Exporter', 'Country \\nOf Origin', 'Pack \\nSize', 'PI Amount \\n(Ton/Unit)', 'Amount \\nApproval \\n(MT/Unit)', 'Status', 'Remarks']; // initialization for headers\r\n    // let col = ['SL NO.','Name OF Importer','Products','PI No.','PI Date','Manufacturer',\r\n    // 'Exporter', 'Country Of Origin','Pack Size','Approval Amount MT','Approval Amount Unit', 'Status'];\r\n    let title = \"Proforma Invoice Summary Report\"; // title of report\r\n    let slNO = 0;\r\n    for (const a of r) {\r\n      console.log(r);\r\n      row.push(++slNO);\r\n      row.push(a.importerInfo.orgName);\r\n\r\n      let productLength = a.proformaInvoiceDtls.length;\r\n      let x = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        productLength--;\r\n        x += p.prodName;\r\n        if (productLength != 0) { x += ',\\n' };\r\n\r\n      }\r\n      row.push(x);\r\n      row.push(a.proformaInvoiceNo);\r\n      //row.push(a.proformaDate);\r\n\r\n      const convertedDate = new Date(a.proformaDate);\r\n      let d = '';\r\n      d += convertedDate.getDate() + '/' + (convertedDate.getMonth() + 1) + '/' + convertedDate.getFullYear();\r\n      row.push(d);\r\n\r\n      let yLength = a.proformaInvoiceDtls.length;\r\n      let y = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        yLength--;\r\n        y += p.manufacturer;\r\n        if (yLength != 0) { y += ',\\n' };\r\n\r\n      }\r\n      row.push(y);\r\n      row.push(a.portOfLoading);\r\n      row.push(a.countryOfOrigin);\r\n\r\n      let bLength = a.proformaInvoiceDtls.length;\r\n      let b = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        bLength--;\r\n        b += p.packSize;\r\n        if (bLength != 0) { b += ',\\n' };\r\n\r\n      }\r\n      row.push(b);\r\n\r\n      let cLength = a.proformaInvoiceDtls.length;\r\n      let c = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        cLength--;\r\n        if (p.totalAmount > 0) {\r\n          c += p.totalAmount + \" MT\";\r\n        }\r\n        if (p.noOfUnits > 0) {\r\n          c += p.noOfUnits + \" Unit\";\r\n        }\r\n        if (cLength != 0) { c += ',\\n' };\r\n\r\n      }\r\n      row.push(c);\r\n\r\n      let eLength = a.proformaInvoiceDtls.length;\r\n      let e = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        eLength--;\r\n        // let apmt = p.approvedAmount === null || undefined ||\r\n        //   '' ? \"---\" : (p.approvedAmount == 0 ? \"---\" : p.approvedAmount )\r\n        let apmt;\r\n        if (p.approvedAmount === null || undefined || '' || 0) {\r\n          apmt = '--';\r\n        }\r\n        else {\r\n          if (p.noOfUnits > 0) { apmt = p.approvedAmount + ' Unit'; }\r\n          if (p.totalAmount > 0) { apmt = p.approvedAmount + ' MT'; }\r\n        }\r\n\r\n        e += apmt;\r\n        if (eLength != 0) { e += '\\n' };\r\n\r\n      }\r\n      row.push(e);\r\n\r\n      let gLength = a.proformaInvoiceDtls.length;\r\n      let g = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        gLength--;\r\n        let apmt = p.approvedAmount === null || undefined ||\r\n          '' ? \"Pending\" : (p.approvedAmount == 0 ? \"Rejected\" : \"Approved\")\r\n        g += apmt;\r\n        if (gLength != 0) { g += ',\\n' };\r\n      }\r\n      row.push(g);\r\n\r\n      let hLength = a.proformaInvoiceDtls.length;\r\n      let h = '';\r\n      for (const p of a.proformaInvoiceDtls) {\r\n        hLength--;\r\n        let remarks = p.remarks === null || undefined ||\r\n          '' ? \" --- \" : p.remarks;\r\n        h += remarks;\r\n        if (hLength != 0) { h += ',\\n' };\r\n      }\r\n      row.push(h);\r\n\r\n      rowD.push(row);\r\n      row = [];\r\n    }\r\n    this.getReport(col, rowD, title, orgName, orgAddress);\r\n  }\r\n\r\n  getReport(col: any[], rowD: any[], title: any, orgName: any, orgAddress: any) {\r\n    const totalPagesExp = \"{total_pages_count_string}\";\r\n    const pdf = new jsPDF('l', 'pt', 'a4');\r\n    pdf.setTextColor(0, 0, 0);\r\n    pdf.setFontSize(11);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Organization Name', 40, 60);\r\n    pdf.setFontType('normal');\r\n    pdf.text(': ' + orgName, 150, 60);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Address', 40, 80);\r\n    pdf.setFontType('normal');\r\n    pdf.text(': ' + orgAddress, 150, 80);\r\n\r\n    pdf.setFontType('bold');\r\n    pdf.text('Report Name', 40, 100);\r\n    pdf.setFontType('normal');\r\n    pdf.text(': Proforma Invoice Report', 150, 100);\r\n    const pDate = this.datePipe.transform(new Date, \"dd/MM/yyyy\");\r\n    pdf.text('Printing Date: ' + pDate, 680, 100);\r\n    var pageContent = function (data) {\r\n      // HEADER\r\n\r\n      // FOOTER\r\n      var str = \"Page \" + data.pageCount;\r\n      // Total page number plugin only available in jspdf v1.0+\r\n      if (typeof pdf.putTotalPages === 'function') {\r\n        str = str + \" of \" + totalPagesExp;\r\n      }\r\n      pdf.setFontSize(9);\r\n      var pageHeight = pdf.internal.pageSize.height || pdf.internal.pageSize.getHeight();\r\n      pdf.text(str, data.settings.margin.left, pageHeight - 10); // showing current page number\r\n    };\r\n    pdf.autoTable(col, rowD,\r\n      {\r\n        theme: \"grid\",\r\n        // table: { fillColor: 255, textColor: 0, fontStyle: 'normal', lineWidth: 0.1 },\r\n        //head: { textColor: 0, fillColor: [211,211,211], fontStyle: 'bold', lineWidth: 0 },\r\n        // body: {},\r\n        // foot: { textColor: 255, fillColor: [26, 188, 156], fontStyle: 'bold', lineWidth: 0 },\r\n        // alternateRow: {},\r\n        headStyles: { fillColor: [192, 192, 192] },\r\n\r\n\r\n        didDrawPage: pageContent,\r\n        margin: { top: 110 },\r\n        bodyStyles: { valign: 'middle', lineColor: [153, 153, 153] },\r\n\r\n        styles: { overflow: 'linebreak', cellWidth: 'wrap', fontSize: 9, textColor: 0 },\r\n\r\n      });\r\n\r\n    //for adding total number of pages // i.e 10 etc\r\n    if (typeof pdf.putTotalPages === 'function') {\r\n      pdf.putTotalPages(totalPagesExp);\r\n    }\r\n\r\n    // pdf.save(title + '.pdf');\r\n    pdf.setProperties({\r\n      title: title + \".pdf\"\r\n    });\r\n\r\n    var blob = pdf.output(\"blob\");\r\n    window.open(URL.createObjectURL(blob));\r\n    this.loading = false;\r\n  }\r\n\r\n\r\n}\r\ninterface IImporterIdDto {\r\n  importerId: number;\r\n}\r\ninterface IProformaInvoiceSearchDto {\r\n  importerId: number;\r\n  fromDate: Date | undefined | null;\r\n  toDate: Date | undefined | null;\r\n  status: string;\r\n}\r\ninterface IProformaInfoDto {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n  importerId: number;\r\n  importerInfo: IImporterInfo;\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[];\r\n}\r\ninterface IProformaInvoiceMst {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  importerId: number;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n}\r\ninterface IProformaInvoiceDtl {\r\n  id: number;\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n  approvalStatus: boolean;\r\n  approvedBy: number;\r\n  remarks: string;\r\n  approvedAmount: number;\r\n}\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n","export default \".btn-add-product{\\r\\n    font-weight: bolder !important;\\r\\n}\\r\\nform{\\r\\n    width: 100%;\\r\\n    padding: 1% 1% 1% 1%;\\r\\n}\\r\\nfieldset.scheduler-border {\\r\\n    border: 1px solid #45A845 !important;\\r\\n    padding: 0 5px 5px 5px !important;\\r\\n    margin: 0px 0 0 0 !important;\\r\\n    box-shadow:  0px 0px 0px 0px #000;\\r\\n}\\r\\nlegend.scheduler-border {\\r\\n        font-size: 1.2em !important;\\r\\n        font-weight: bold !important;\\r\\n        text-align: left !important;\\r\\n        width:auto;\\r\\n        padding:0 10px;\\r\\n        border-bottom:none;\\r\\n        margin-bottom: 0;\\r\\n    }\\r\\n.form-control{\\r\\n        background-image: none;\\r\\n        border: 1px solid green;\\r\\n        border-radius: 0;\\r\\n    }\\r\\n.is-invalid {\\r\\n        border: 1px solid red !important;\\r\\n    }\\r\\n.invalid-feedback{\\r\\n        font-weight: 600;\\r\\n    }\\r\\n.table>thead>tr>th{\\r\\n        vertical-align: top !important;\\r\\n    }\\r\\n.btn-grid-pdf {\\r\\n        margin-left: 6%; \\r\\n    }\\r\\n.icon-pdf {\\r\\n        margin-right: -13%;\\r\\n        color: white;\\r\\n    }\\r\\n.icon-action\\r\\n     {\\r\\n        margin-right: -2px; ;\\r\\n    }\\r\\n/* .prod-btn{\\r\\n        padding-left: 20px;\\r\\n        padding-right: 20px;\\r\\n    } */\\r\\n.input-group-text {\\r\\n        align-items: center;\\r\\n        margin-bottom: 0;\\r\\n        margin-left: 2px !important;\\r\\n        font-size: 17px;\\r\\n        font-weight: 400;\\r\\n        line-height: 1.5;\\r\\n        color: #495057;\\r\\n        text-align: center;\\r\\n        white-space: nowrap;\\r\\n        background-color: #e9ecef !important;\\r\\n        border: 1px solid #ced4da !important;\\r\\n        border-radius: .25rem;\\r\\n        margin-top: -1px !important;\\r\\n    }\\r\\n.table-bordered>tbody>tr>td{\\r\\n        padding: 8px !important;\\r\\n    }\\r\\n.table>thead>tr>th{\\r\\n        vertical-align: top !important;\\r\\n        border: 1px solid #ffffff;\\r\\n    }\\r\\n.table>tbody>tr>td{\\r\\n        vertical-align: middle !important;\\r\\n        border: 1px solid #c8c8c8;\\r\\n    }\\r\\n.table>thead>tr{\\r\\n        border-bottom: 2px solid #c8c8c8;\\r\\n    }\\r\\n.btn.disabled, .btn[disabled], fieldset[disabled] .btn{\\r\\n        opacity: .50 !important;\\r\\n    }\\r\\n/* .input-group-text {\\r\\n        align-items: center;\\r\\n        padding: .375rem .75rem;\\r\\n        margin-bottom: 0;\\r\\n        margin-left: 2px !important;\\r\\n        font-size: 15px;\\r\\n        font-weight: 400;\\r\\n        line-height: 1.5;\\r\\n        color: #495057;\\r\\n        text-align: center;\\r\\n        white-space: nowrap;\\r\\n        background-color: #e9ecef !important;\\r\\n        border: 1px solid #ced4da !important;\\r\\n        border-radius: .25rem;\\r\\n    } */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZm9ybWEtaW52b2ljZS9wcm9mb3JtYS1pbnZvaWNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7QUFDbEM7QUFDQTtJQUNJLFdBQVc7SUFDWCxvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLG9DQUFvQztJQUNwQyxpQ0FBaUM7SUFDakMsNEJBQTRCO0lBRXBCLGlDQUFpQztBQUM3QztBQUVJO1FBQ0ksMkJBQTJCO1FBQzNCLDRCQUE0QjtRQUM1QiwyQkFBMkI7UUFDM0IsVUFBVTtRQUNWLGNBQWM7UUFDZCxrQkFBa0I7UUFDbEIsZ0JBQWdCO0lBQ3BCO0FBQ0E7UUFDSSxzQkFBc0I7UUFDdEIsdUJBQXVCO1FBQ3ZCLGdCQUFnQjtJQUNwQjtBQUNBO1FBQ0ksZ0NBQWdDO0lBQ3BDO0FBQ0E7UUFDSSxnQkFBZ0I7SUFDcEI7QUFDQTtRQUNJLDhCQUE4QjtJQUNsQztBQUNBO1FBQ0ksZUFBZTtJQUNuQjtBQUNBO1FBQ0ksa0JBQWtCO1FBQ2xCLFlBQVk7SUFDaEI7QUFDQTs7UUFFSSxrQkFBa0I7SUFDdEI7QUFFQTs7O09BR0c7QUFDSDtRQUNJLG1CQUFtQjtRQUNuQixnQkFBZ0I7UUFDaEIsMkJBQTJCO1FBQzNCLGVBQWU7UUFDZixnQkFBZ0I7UUFDaEIsZ0JBQWdCO1FBQ2hCLGNBQWM7UUFDZCxrQkFBa0I7UUFDbEIsbUJBQW1CO1FBQ25CLG9DQUFvQztRQUNwQyxvQ0FBb0M7UUFDcEMscUJBQXFCO1FBQ3JCLDJCQUEyQjtJQUMvQjtBQUNBO1FBQ0ksdUJBQXVCO0lBQzNCO0FBQ0E7UUFDSSw4QkFBOEI7UUFDOUIseUJBQXlCO0lBQzdCO0FBQ0E7UUFDSSxpQ0FBaUM7UUFDakMseUJBQXlCO0lBQzdCO0FBQ0E7UUFDSSxnQ0FBZ0M7SUFDcEM7QUFDQTtRQUNJLHVCQUF1QjtJQUMzQjtBQUNBOzs7Ozs7Ozs7Ozs7OztPQWNHIiwiZmlsZSI6InNyYy9hcHAvcHJvZm9ybWEtaW52b2ljZS9wcm9mb3JtYS1pbnZvaWNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWFkZC1wcm9kdWN0e1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlciAhaW1wb3J0YW50O1xyXG59XHJcbmZvcm17XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDElIDElIDElIDElO1xyXG59XHJcbmZpZWxkc2V0LnNjaGVkdWxlci1ib3JkZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ1QTg0NSAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZzogMCA1cHggNXB4IDVweCAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAwcHggMCAwIDAgIWltcG9ydGFudDtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogIDBweCAwcHggMHB4IDBweCAjMDAwO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAgMHB4IDBweCAwcHggMHB4ICMwMDA7XHJcbn1cclxuXHJcbiAgICBsZWdlbmQuc2NoZWR1bGVyLWJvcmRlciB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjJlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xyXG4gICAgICAgIHdpZHRoOmF1dG87XHJcbiAgICAgICAgcGFkZGluZzowIDEwcHg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTpub25lO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgICAuZm9ybS1jb250cm9se1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIH1cclxuICAgIC5pcy1pbnZhbGlkIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5pbnZhbGlkLWZlZWRiYWNre1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB9XHJcbiAgICAudGFibGU+dGhlYWQ+dHI+dGh7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgLmJ0bi1ncmlkLXBkZiB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDYlOyBcclxuICAgIH1cclxuICAgIC5pY29uLXBkZiB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMTMlO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIH1cclxuICAgIC5pY29uLWFjdGlvblxyXG4gICAgIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0ycHg7IDtcclxuICAgIH1cclxuXHJcbiAgICAvKiAucHJvZC1idG57XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbiAgICB9ICovXHJcbiAgICAuaW5wdXQtZ3JvdXAtdGV4dCB7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAycHggIWltcG9ydGFudDtcclxuICAgICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgICAgIGNvbG9yOiAjNDk1MDU3O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWYgIWltcG9ydGFudDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC0xcHggIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC50YWJsZS1ib3JkZXJlZD50Ym9keT50cj50ZHtcclxuICAgICAgICBwYWRkaW5nOiA4cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC50YWJsZT50aGVhZD50cj50aHtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjtcclxuICAgIH1cclxuICAgIC50YWJsZT50Ym9keT50cj50ZHtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcclxuICAgIH1cclxuICAgIC50YWJsZT50aGVhZD50cntcclxuICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2M4YzhjODtcclxuICAgIH1cclxuICAgIC5idG4uZGlzYWJsZWQsIC5idG5bZGlzYWJsZWRdLCBmaWVsZHNldFtkaXNhYmxlZF0gLmJ0bntcclxuICAgICAgICBvcGFjaXR5OiAuNTAgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC8qIC5pbnB1dC1ncm91cC10ZXh0IHtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IC4zNzVyZW0gLjc1cmVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDJweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICAgICAgY29sb3I6ICM0OTUwNTc7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWNlZiAhaW1wb3J0YW50O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjZWQ0ZGEgIWltcG9ydGFudDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XHJcbiAgICB9ICovIl19 */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CurrencyService } from '../_services/currency.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { ProformaInvoiceService } from '../_services/proforma-invoice.service';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { saveAs } from 'file-saver';\r\nimport { read } from 'fs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FileDownloadService } from 'src/app/helpers/file-download.service';\r\nimport { IFileDto } from 'src/app/common/FileDto';\r\nimport 'jspdf-autotable';\r\nimport * as jsPDF from 'jspdf';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-proforma-invoice',\r\n  templateUrl: './proforma-invoice.component.html',\r\n  styleUrls: ['./proforma-invoice.component.css']\r\n})\r\nexport class ProformaInvoiceComponent implements OnInit {\r\n  @ViewChild('proformaInvDtlModal', { static: false }) proformaInvDtlModal: TemplateRef<any>;\r\n  @ViewChild('proformaInvMstSearchModal', { static: false }) proformaInvMstSearchModal: TemplateRef<any>;\r\n  @ViewChild('proformaConfirmModal', { static: false }) proformaConfirmModal: TemplateRef<any>;\r\n  @ViewChild('proformaSubmissionConfirmModal', { static: false }) proformaSubmissionConfirmModal: TemplateRef<any>;\r\n  @ViewChild('annualReqProdModal', { static: false }) annualReqProdModal: TemplateRef<any>;\r\n  proformaInvoiceDtlModalRef: BsModalRef;\r\n  proformaInvMstSearchModalRef: BsModalRef;\r\n  proformaSubmissionConfirmRef: BsModalRef;\r\n  proformaConfirmModalRef: BsModalRef;\r\n  annualReqProdModalRef: BsModalRef;\r\n  proformaInvoiceForm: FormGroup;\r\n  proformaInvoiceDtlForm: FormGroup;\r\n  saveButtonTitle = 'Save';\r\n  proformaUpdateMode = false;\r\n  public loading = false;\r\n  currencies: ICurrency[] = [];\r\n  proformaInvoiceDtls: IProformaInvoiceDtl[] = [];\r\n  proformaInvDtlModalTitle = '';\r\n  addMode = false;\r\n  editMode = false;\r\n  updateProd: IProformaInvoiceDtl;\r\n  annualReqMsts: IAnnualRequirementMst[];\r\n  annProds: IAnnReqProdDtlsForProforDto[] = [];\r\n  exchngDisabled = true;\r\n  proformaInvProdTotalAmtDto: ProfInvTotalAmtDtoByProdDto;\r\n  piScanFile: any;\r\n  litScanFile: any;\r\n  testReportFile: any;\r\n  otherDocFile: any;\r\n  piMstId: number;\r\n  proformaInvoiceMsts: IProformaInvoiceMst[] = [];\r\n  fileDownloadInitiated: boolean;\r\n  totalAmountValidationErrorMsg = false;\r\n  noOfUnitValidationErrorMsg=false;\r\n  totalAmountValidation: IPiTotalAmountValidationDto;\r\n  updateBtnDisable = false;\r\n  submitButtonDisable = true;\r\n  isSubmitted = false;\r\n  baseUrl = environment.apiUrl + 'ProformaInvoice/';\r\n  saveUpdateMsg = '';\r\n  searchText = '';\r\n  p: any = 1;\r\n  pa: any = 1;\r\n  pd: any = 1;\r\n  proformaNoSpinner = false;\r\n  proformaNoOk = false;\r\n  proformaNoNotOk = false;\r\n  proformaNoValidity = false;\r\n  config = {\r\n    keyboard: false,\r\n    class: 'modal-lg',\r\n    ignoreBackdropClick: true\r\n  };\r\n  currentDateString = new Date();\r\n  todayDate = this.currentDateString.getDate() + '/' + (this.currentDateString.getMonth() + 1) + '/' + this.currentDateString.getFullYear();\r\n  //\r\n  //portOfEntry Type\r\nportOfEntrys = [\r\n  {id: 1, name: 'Chittagong/Chattogram' },\r\n  {id: 2, name: 'Sonamasjid'},\r\n  {id: 3, name: 'Benapole'},\r\n  {id: 4, name: 'Mongla'},\r\n  {id: 5, name: 'Hili'},\r\n  {id: 6, name: 'Darshana'},\r\n  {id: 7, name: 'Shahjalal International Airport'},\r\n  {id: 8, name: 'Banglabandha'},\r\n  {id: 9, name: 'Birol'},\r\n  {id: 10, name: 'Rohanpur'},\r\n  {id: 11, name: 'Vomra'},\r\n  {id: 12, name: 'Burimari'}\r\n];\r\n//selectedProductType=1;\r\n//portOfEntry='Chittagong/Chattogram';\r\nselectedportOfEntryId: number;\r\n //\r\n remainingAmountUnit : number;\r\n remainingAmountTon : number;\r\n bsConfig: Partial<BsDatepickerConfig>;\r\n bsValue: Date = new Date();\r\n \r\n  constructor(\r\n    private currencyService: CurrencyService,\r\n    private modalService: BsModalService,\r\n    private alertify: AlertifyService,\r\n    private proformaService: ProformaInvoiceService,\r\n    private loginService: LoginService,\r\n    private http: HttpClient,\r\n    private fileDownloadService: FileDownloadService,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createProformaInvoiceForm();\r\n    this.createProformaInvoiceDtlForm();\r\n    this.getCurrencies();\r\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-green' }, { dateInputFormat: 'DD/MM/YYYY' });\r\n    this.bsValue = new Date();\r\n  }\r\n  resetFilter() {\r\n    this.searchText = '';\r\n  }\r\n  createProformaInvoiceForm() {\r\n\r\n    this.proformaInvoiceForm = new FormGroup({\r\n      applicationNo: new FormControl(''),\r\n      proformaInvoiceNo: new FormControl('', [Validators.required]),\r\n      proformaDate: new FormControl(new Date,[Validators.required]),\r\n      submissionDate: new FormControl(''),\r\n      countryOfOrigin: new FormControl('', [Validators.required]),\r\n      currency: new FormControl('', [Validators.required]),\r\n      portOfLoading: new FormControl('', [Validators.required]),\r\n      portOfEntry: new FormControl('Chittagong/Chattogram',[Validators.required]),\r\n      piScan: new FormControl('', [Validators.required]),\r\n      litScan: new FormControl('', [Validators.required]),\r\n      //testReport: new FormControl('', [Validators.required]),\r\n      testReport: new FormControl(''),\r\n      otherDoc: new FormControl('')\r\n    });\r\n  }\r\n  createProformaInvoiceDtlForm() {\r\n    this.proformaInvoiceDtlForm = new FormGroup({\r\n      prodName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      prodType: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(500)\r\n      ]),\r\n      hsCode: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(20)\r\n      ]),\r\n      manufacturer: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(100)\r\n      ]),\r\n      packSize: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(100)\r\n      ]),\r\n      noOfUnits: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(8),\r\n        Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      ]),\r\n      totalAmount: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(6),\r\n        Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      ]),\r\n      unitPrice: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(8),\r\n        Validators.pattern(/^[0-9]+(.[0-9]{1,2})?$/)\r\n      ]),\r\n      exchangeRate: new FormControl('', [Validators.required]),\r\n      totalPrice: new FormControl('', Validators.required),\r\n      totalPriceInBdt: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n  openProformaMstSearchModal(template: TemplateRef<any>) {\r\n    this.proformaInvMstSearchModalRef = this.modalService.show(template, this.config);\r\n  }\r\n  openProformaInvDtlModal(template: TemplateRef<any>) {\r\n    this.proformaInvoiceDtlModalRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-lg',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  openAnnReqProdModal(template: TemplateRef<any>) {\r\n    this.annualReqProdModalRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-lg',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  openProformaSaveConfirmModal(template: TemplateRef<any>) {\r\n    this.proformaConfirmModalRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-md',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  openProformaSubmissionConfirmModal(template: TemplateRef<any>) {\r\n    this.proformaSubmissionConfirmRef = this.modalService.show(template, {\r\n      keyboard: false,\r\n      class: 'modal-md',\r\n      ignoreBackdropClick: true\r\n    });\r\n  }\r\n  getCurrencyRate() {\r\n      const currenc = this.proformaInvoiceForm.value.currency;\r\n      let excngRate: number;\r\n      // tslint:disable-next-line: only-arrow-functions\r\n      this.currencies.forEach( function(item, index) {\r\n        if (item.currency === currenc) {\r\n          excngRate = item.exchangeRate;\r\n        }\r\n      });\r\n      return excngRate;\r\n  }\r\n  validateProformaInvFileUpload(file: File) {\r\n    if (file) {\r\n      const fileName = file.name;\r\n      const fileSize = file.size;\r\n      const allowedFile = '.pdf';\r\n      if (fileName.substr(fileName.length - allowedFile.length,\r\n        allowedFile.length).toLowerCase() !== allowedFile.toLowerCase()) {\r\n        return 'invalidFileFormat';\r\n      }\r\n      if (fileSize > 1024000) {\r\n        return 'invalidFileSize';\r\n      }\r\n    }\r\n    return 'fileOk';\r\n  }\r\n  onSelectedPiFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateProformaInvFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.proformaInvoiceForm.controls.piScan.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.proformaInvoiceForm.controls.piScan.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (this.isSubmitted === true) {\r\n        this.alertify.warning('Proforma Invoice already submitted. can not update file.');\r\n        return;\r\n    }\r\n    if (this.proformaUpdateMode === true) {\r\n      const piFormData = new FormData();\r\n      piFormData.append('piFile', f);\r\n      this.proformaService.updatePiFile(piFormData, this.piMstId).subscribe(resp => {\r\n        this.alertify.success('Proforma Invoice updated successfullt.');\r\n        const piMst = resp as IProformaInvoiceMst;\r\n      }, error => {\r\n        console.log(console.error);\r\n      });\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.piScanFile = f;\r\n    }\r\n  }\r\n  onSelectedLitFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateProformaInvFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.proformaInvoiceForm.controls.litScan.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.proformaInvoiceForm.controls.litScan.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (this.isSubmitted === true) {\r\n      this.alertify.warning('Proforma Invoice already submitted. can not update file.');\r\n      return;\r\n    }\r\n    if (this.proformaUpdateMode === true) {\r\n      const litFormData = new FormData();\r\n      litFormData.append('litFile', f);\r\n      this.proformaService.updateLitFile(litFormData, this.piMstId).subscribe(resp => {\r\n        const piMst = resp as IProformaInvoiceMst;\r\n        this.alertify.success('Literature review updated successfullt.');\r\n      }, error => {\r\n        console.log(console.error);\r\n      });\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.litScanFile = f;\r\n    }\r\n  }\r\n  onSelectedTestFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateProformaInvFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.proformaInvoiceForm.controls.testReport.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.proformaInvoiceForm.controls.testReport.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (this.isSubmitted === true) {\r\n      this.alertify.warning('Proforma Invoice already submitted. can not update file.');\r\n      return;\r\n    }\r\n    if (this.proformaUpdateMode === true) {\r\n      const testFormData = new FormData();\r\n      testFormData.append('testFile', f);\r\n      this.proformaService.updateTestFile(testFormData, this.piMstId).subscribe(resp => {\r\n        const piMst = resp as IProformaInvoiceMst;\r\n        this.alertify.success('Test Report updated successfullt');\r\n      }, error => {\r\n        console.log(console.error);\r\n      });\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.testReportFile = f;\r\n    }\r\n  }\r\n  onSelectedOtherDocFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateProformaInvFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.proformaInvoiceForm.controls.otherDoc.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.proformaInvoiceForm.controls.otherDoc.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (this.isSubmitted === true) {\r\n      this.alertify.warning('Proforma Invoice already submitted. can not update file.');\r\n      return;\r\n   }\r\n    if (this.proformaUpdateMode === true) {\r\n      const otherFormData = new FormData();\r\n      otherFormData.append('otherFile', f);\r\n      this.proformaService.updateOtherFile(otherFormData, this.piMstId).subscribe(resp => {\r\n        this.alertify.success('Other Document updated successfullt');\r\n        const piMst = resp as IProformaInvoiceMst;\r\n      }, error => {\r\n        console.log(console.error);\r\n      });\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.otherDocFile = f;\r\n    }\r\n  }\r\n  openProformaDtlModal(mode: string) {\r\n    if (mode === 'add') {\r\n      this.proformaInvDtlModalTitle = 'Add Product';\r\n      this.proformaInvoiceDtlForm.reset();\r\n      this.proformaInvoiceDtlForm.get('prodName').setValue('');\r\n      const exRate = this.getCurrencyRate();\r\n      this.proformaInvoiceDtlForm.get('exchangeRate').setValue(exRate);\r\n    }\r\n    if (mode === 'update') {\r\n      this.proformaInvDtlModalTitle = 'Update Product';\r\n      const exRate =  this.getCurrencyRate();\r\n      this.proformaInvoiceDtlForm.get('exchangeRate').setValue(exRate);\r\n\r\n    }\r\n    this.openProformaInvDtlModal(this.proformaInvDtlModal);\r\n    this.editMode = false;\r\n    this.addMode = true;\r\n  }\r\n  openProforMstodal() {\r\n  }\r\n  getCurrencies() {\r\n    this.currencyService.getCurrency().subscribe(\r\n      resp => {\r\n        this.currencies = resp as ICurrency[];\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  addUpdateProduct() {\r\n    if (this.addMode === true) {\r\n      const a: IProformaInvoiceDtl = {\r\n        id: 0,\r\n        mstId: 0,\r\n        prodName: this.proformaInvoiceDtlForm.value.prodName,\r\n        prodType: this.proformaInvoiceDtlForm.value.prodType,\r\n        hsCode: this.proformaInvoiceDtlForm.value.hsCode,\r\n        packSize: this.proformaInvoiceDtlForm.value.packSize,\r\n        manufacturer: this.proformaInvoiceDtlForm.value.manufacturer,\r\n        noOfUnits: this.proformaInvoiceDtlForm.value.noOfUnits,\r\n        unitPrice: this.proformaInvoiceDtlForm.value.unitPrice,\r\n        totalPrice: this.proformaInvoiceDtlForm.value.totalPrice,\r\n        totalPriceInBdt: this.proformaInvoiceDtlForm.value.totalPriceInBdt,\r\n        exchangeRate: this.proformaInvoiceDtlForm.value.exchangeRate,\r\n        totalAmount: this.proformaInvoiceDtlForm.value.totalAmount,\r\n        approvalStatus: null,\r\n        approvedBy: 0,\r\n        remarks: null\r\n      };\r\n      for (const i of this.proformaInvoiceDtls) {\r\n        if (i.prodName === a.prodName && i.packSize === a.packSize) {\r\n          this.alertify.warning('Product Alerady Selected. Please Try Another.');\r\n          return false;\r\n        }\r\n      }\r\n      this.proformaInvoiceDtls.push(a);\r\n      this.proformaInvoiceDtlModalRef.hide();\r\n      this.proformaInvoiceDtlForm.reset();\r\n    }\r\n    if (this.editMode === true) {\r\n      const a: IProformaInvoiceDtl = {\r\n        id: 0,\r\n        mstId: 0,\r\n        prodName: this.proformaInvoiceDtlForm.value.prodName,\r\n        prodType: this.proformaInvoiceDtlForm.value.prodType,\r\n        hsCode: this.proformaInvoiceDtlForm.value.hsCode,\r\n        packSize: this.proformaInvoiceDtlForm.value.packSize,\r\n        manufacturer: this.proformaInvoiceDtlForm.value.manufacturer,\r\n        noOfUnits: this.proformaInvoiceDtlForm.value.noOfUnits,\r\n        unitPrice: this.proformaInvoiceDtlForm.value.unitPrice,\r\n        totalPrice: this.proformaInvoiceDtlForm.value.totalPrice,\r\n        totalPriceInBdt: this.proformaInvoiceDtlForm.value.totalPriceInBdt,\r\n        exchangeRate: this.proformaInvoiceDtlForm.value.exchangeRate,\r\n        totalAmount: this.proformaInvoiceDtlForm.value.totalAmount,\r\n        approvalStatus: null,\r\n        approvedBy: 0,\r\n        remarks: null\r\n      };\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).prodType = a.prodType;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).hsCode = a.hsCode;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).packSize = a.packSize;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).manufacturer = a.manufacturer;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).unitPrice = a.unitPrice;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).noOfUnits = a.noOfUnits;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).totalPrice = a.totalPrice;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).totalPriceInBdt = a.totalPriceInBdt;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).exchangeRate = a.exchangeRate;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).totalAmount = a.totalAmount;\r\n      this.proformaInvoiceDtls.find(\r\n        item => item.prodName === this.updateProd.prodName && item.packSize === this.updateProd.packSize\r\n      ).prodName = a.prodName;\r\n      this.proformaInvoiceDtlModalRef.hide();\r\n      this.proformaInvoiceDtlForm.reset();\r\n    }\r\n  }\r\n  removeProduct(p: IProformaInvoiceDtl) {\r\n    const result = confirm('Are you sure want to remove?');\r\n    if (result === true) {\r\n      for (let i = 0; i < this.proformaInvoiceDtls.length; i++) {\r\n        if (this.proformaInvoiceDtls[i].prodName === p.prodName) {\r\n          this.proformaInvoiceDtls.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  editProduct(p: IProformaInvoiceDtl) {\r\n    const remainingAmountforPIProductDto: RemainingAmountforPIProductDto = {\r\n      importerId: this.loginService.getEmpOrImpName(),\r\n      prodName:p.prodName,\r\n      packSize:p.packSize,\r\n      hsCode:p.hsCode\r\n    };\r\n    this.proformaService.getAnnReqProdDtlsByImpEditMode(remainingAmountforPIProductDto).subscribe( resp => {\r\n      this.annProds = resp as IAnnReqProdDtlsForProforDto[];\r\n      console.log(\"remainingAmount: \" + this.annProds[0].remainingAmount);\r\n      this.loading = false;\r\n      this.remainingAmountUnit=this.annProds[0].remainingAmount;\r\n      this.remainingAmountTon=this.annProds[0].remainingAmount;\r\n      if(p.id){\r\n        this.remainingAmountUnit += p.noOfUnits;\r\n        this.remainingAmountTon +=p.totalAmount;\r\n      }\r\n      console.log(\"remainingAmountNew: \" + this.remainingAmountUnit);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n    \r\n    //\r\n    this.updateProd = p;\r\n    this.proformaInvoiceDtlForm.setValue({\r\n      prodName: p.prodName,\r\n      prodType: p.prodType,\r\n      hsCode: p.hsCode,\r\n      packSize: p.packSize,\r\n      manufacturer: p.manufacturer,\r\n      noOfUnits: p.noOfUnits  || undefined || null,\r\n      unitPrice: p.unitPrice,\r\n      totalPrice: p.totalPrice,\r\n      totalPriceInBdt: p.totalPriceInBdt,\r\n      exchangeRate: p.exchangeRate,\r\n      totalAmount: p.totalAmount || undefined || null\r\n    });\r\n    \r\n    this.openProformaDtlModal('update');\r\n    this.editMode = true;\r\n    this.addMode = false;\r\n  }\r\n  getProductListFromAnnualReq() {\r\n    this.noOfUnitValidationErrorMsg=false;\r\n    this.totalAmountValidationErrorMsg=false;\r\n    this.proformaInvoiceDtlForm.controls['unitPrice'].enable();\r\n    this.loading = true;\r\n    const importerDto: IAnnualReqByImporterDto = {\r\n      importerId: this.loginService.getEmpOrImpName()\r\n    };\r\n    this.proformaService.getProductListFromAnnualReq(importerDto).subscribe( resp => {\r\n      this.annProds = resp as IAnnReqProdDtlsForProforDto[];\r\n      console.log(this.annProds);\r\n      this.loading = false;\r\n      this.openAnnReqProdModal(this.annualReqProdModal);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  reqProdNameSelect(a: IAnnReqProdDtlsForProforDto) {\r\n    let r = '';\r\n    // tslint:disable-next-line: only-arrow-functions\r\n    this.proformaInvoiceDtls.forEach(function(item, index) {\r\n      if ( item.prodName === a.prodName && item.packSize === a.packSize) {\r\n        r = 'duplicate';\r\n      }\r\n    });\r\n    if (r === 'duplicate') {\r\n      this.alertify.warning('Product Already Selected. Please Try Another Product.');\r\n      return false;\r\n    }\r\n    this.proformaInvoiceDtlForm.get('prodName').setValue(a.prodName);\r\n    this.proformaInvoiceDtlForm.get('packSize').setValue(a.packSize);\r\n    this.proformaInvoiceDtlForm.get('hsCode').setValue(a.hsCode);\r\n    this.proformaInvoiceDtlForm.get('manufacturer').setValue('');\r\n    this.proformaInvoiceDtlForm.get('prodType').setValue(a.prodType);\r\n    //\r\n    if(a.tentativeUnits>0){\r\n      this.proformaInvoiceDtlForm.controls['totalAmount'].disable();\r\n      this.proformaInvoiceDtlForm.controls['noOfUnits'].enable();\r\n      this.proformaInvoiceDtlForm.get('noOfUnits').setValue('');\r\n      this.remainingAmountUnit=a.remainingAmount;\r\n     }\r\n     if(a.totalAmount>0){ \r\n      this.proformaInvoiceDtlForm.controls['noOfUnits'].disable();\r\n      this.proformaInvoiceDtlForm.controls['totalAmount'].enable();\r\n      this.proformaInvoiceDtlForm.get('totalAmount').setValue('');\r\n      //have confusion\r\n      this.remainingAmountTon=a.remainingAmount;\r\n      }\r\n    //\r\n   // this.proformaInvoiceDtlForm.get('noOfUnits').setValue(a.tentativeUnits);\r\n    this.proformaInvoiceDtlForm.get('totalAmount').setValue('');\r\n    this.proformaInvoiceDtlForm.controls['unitPrice'].disable();\r\n    this.annualReqProdModalRef.hide();\r\n    // let prod: IAnnReqProdDtlsForProforDto;\r\n    // // tslint:disable-next-line: only-arrow-functions\r\n    // this.annProds.forEach(function(item, index) {\r\n    //   if (item.prodName === p) {\r\n    //     prod = item;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  noOfUnitsValidation(){\r\n    this.noOfUnitValidationErrorMsg=false;\r\n    const noOfUnt = this.proformaInvoiceDtlForm.value.noOfUnits;\r\n    if(noOfUnt>this.remainingAmountUnit){\r\n      this.proformaInvoiceDtlForm.get('noOfUnits').setValue('');\r\n      this.noOfUnitValidationErrorMsg=true;\r\n      this.alertify.warning('Invalid Proforma amount');\r\n    }\r\n    else{\r\n      this.noOfUnitValidationErrorMsg=false;\r\n      this.proformaInvoiceDtlForm.controls['unitPrice'].enable();\r\n    }\r\n  }\r\n  totalAmountTonValidation(){\r\n    this.totalAmountValidationErrorMsg=false;\r\n    const totalAmountTon = this.proformaInvoiceDtlForm.value.totalAmount;\r\n    if(totalAmountTon>this.remainingAmountTon){\r\n      this.proformaInvoiceDtlForm.get('totalAmount').setValue('');\r\n      this.totalAmountValidationErrorMsg=true;\r\n      this.alertify.warning('Invalid Proforma amount');\r\n    }\r\n    else{\r\n      this.totalAmountValidationErrorMsg=false;\r\n      this.proformaInvoiceDtlForm.controls['unitPrice'].enable();\r\n    }\r\n  }\r\n  NoOfUnitKeydown() {\r\n    this.proformaInvoiceDtlForm.get('unitPrice').enable();\r\n  }\r\n  calculateTotalPrice() {\r\n    const noOfUn = this.proformaInvoiceDtlForm.value.noOfUnits;\r\n    const tAmt = this.proformaInvoiceDtlForm.value.totalAmount;\r\n    const unitPri = this.proformaInvoiceDtlForm.value.unitPrice;\r\n    if ((noOfUn === undefined || noOfUn === '') || (tAmt === undefined || tAmt === '') || (unitPri === undefined || unitPri === '')) {\r\n      this.proformaInvoiceDtlForm.get('totalPrice').setValue('');\r\n      this.proformaInvoiceDtlForm.get('totalPriceInBdt').setValue('');\r\n    } \r\n    if(noOfUn>0) {\r\n      const exRate = this.proformaInvoiceDtlForm.value.exchangeRate;\r\n      const totalPri = noOfUn * unitPri;\r\n      const totalPrInBdt = totalPri * exRate;\r\n      this.proformaInvoiceDtlForm.get('totalPrice').setValue(totalPri);\r\n      this.proformaInvoiceDtlForm.get('totalPriceInBdt').setValue(totalPrInBdt);\r\n    }\r\n    if(tAmt>0) {\r\n      const exRate = this.proformaInvoiceDtlForm.value.exchangeRate;\r\n      const totalPri = tAmt * unitPri;\r\n      const totalPrInBdt = totalPri * exRate;\r\n      this.proformaInvoiceDtlForm.get('totalPrice').setValue(totalPri);\r\n      this.proformaInvoiceDtlForm.get('totalPriceInBdt').setValue(totalPrInBdt);\r\n    }\r\n  }\r\n  \r\n  currencySelectChange() {\r\n    const cRate = this.getCurrencyRate();\r\n    if (this.proformaInvoiceDtls.length > 0) {\r\n      // tslint:disable-next-line: only-arrow-functions\r\n      this.proformaInvoiceDtls.forEach(function(item, index) {\r\n        item.exchangeRate = cRate;\r\n        item.totalPriceInBdt = item.totalPrice * item.exchangeRate;\r\n      });\r\n    }\r\n  }\r\n  validateTotalAmtount() {\r\n    this.totalAmountValidationErrorMsg = false;\r\n    const totalAmt = this.proformaInvoiceDtlForm.value.totalAmount;\r\n    const impterId = this.loginService.getEmpOrImpName();\r\n    const prdName = this.proformaInvoiceDtlForm.value.prodName;\r\n    const packSize=this.proformaInvoiceDtlForm.value.packSize;\r\n    let validity = true;\r\n    // tslint:disable-next-line: only-arrow-functions\r\n    if (this.annProds.length > 0) {\r\n      const p = this.annProds.find(\r\n        item => item.prodName === prdName && item.packSize === packSize\r\n      );\r\n      if ( totalAmt > p.remainingAmount) {\r\n        this.totalAmountValidationErrorMsg = true;\r\n        validity = false;\r\n      } else {\r\n        this.totalAmountValidationErrorMsg = false;\r\n        this.proformaInvoiceDtlForm.controls['unitPrice'].enable();\r\n\r\n      }\r\n\r\n      if (!validity) {\r\n        this.proformaInvProdTotalAmtDto = {\r\n         prodName: prdName,\r\n         packSize:packSize,\r\n         totalAmount: totalAmt,\r\n         importerId: impterId\r\n        };\r\n        this.proformaService.getCrntYearTotlProformaInvAmtByProd(this.proformaInvProdTotalAmtDto).subscribe(resp => {\r\n          this.totalAmountValidation = resp as IPiTotalAmountValidationDto;\r\n          if (this.totalAmountValidation.validationStatus === false) {\r\n            this.totalAmountValidationErrorMsg = true;\r\n            this.proformaInvoiceDtlForm.get('totalAmount').setValue('');\r\n            this.alertify.warning('Invalid Proforma amount');\r\n        } else {\r\n          this.totalAmountValidationErrorMsg = false;\r\n          this.proformaInvoiceDtlForm.controls['unitPrice'].enable();\r\n\r\n        }\r\n        });\r\n      }\r\n    } else {\r\n      this.proformaInvProdTotalAmtDto = {\r\n        prodName: prdName,\r\n        packSize: packSize,\r\n         totalAmount: totalAmt,\r\n         importerId: impterId\r\n       };\r\n      this.proformaService.getCrntYearTotlProformaInvAmtByProd(this.proformaInvProdTotalAmtDto).subscribe(resp => {\r\n         this.totalAmountValidation = resp as IPiTotalAmountValidationDto;\r\n         if (this.totalAmountValidation.validationStatus === false) {\r\n           this.totalAmountValidationErrorMsg = true;\r\n           this.proformaInvoiceDtlForm.get('totalAmount').setValue('');\r\n           this.alertify.warning('Invalid Proforma amount');\r\n       } else {\r\n         this.proformaInvoiceDtlForm.controls['unitPrice'].enable();\r\n         this.totalAmountValidationErrorMsg = false;\r\n       }\r\n       });\r\n    }\r\n  }\r\n  confirm(): void {\r\n    this.proformaConfirmModalRef.hide();\r\n    this.saveUpdatePormaInvoice();\r\n  }\r\n  decline(): void {\r\n    this.proformaConfirmModalRef.hide();\r\n  }\r\n  confirmProformaInvoiceSaveOrUpdate() {\r\n    if (this.proformaInvoiceDtls.length < 1) {\r\n      this.loading = false;\r\n      this.alertify.warning('No Product to Save');\r\n      return false;\r\n    }\r\n    if (this.proformaUpdateMode === false) {\r\n      this.saveUpdateMsg = 'সেভ';\r\n    } else {\r\n      this.saveUpdateMsg = 'আপডেট';\r\n    }\r\n    this.openProformaSaveConfirmModal(this.proformaConfirmModal);\r\n  }\r\n  saveUpdatePormaInvoice() {\r\n    this.loading = true;\r\n    const formData = new FormData();\r\n    const impId = this.loginService.getEmpOrImpName();\r\n    if (this.proformaUpdateMode === false) {\r\n      formData.append('piScan', this.piScanFile);\r\n      formData.append('litScan', this.litScanFile);\r\n      formData.append('testScan', this.testReportFile);\r\n      formData.append('otherScan', this.otherDocFile);\r\n      const proMst: IProformaInvoiceMst  = {\r\n        id: 0,\r\n        applicationNo: 0,\r\n        proformaInvoiceNo: this.proformaInvoiceForm.value.proformaInvoiceNo,\r\n        proformaDate: this.proformaInvoiceForm.value.proformaDate,\r\n        submissionDate: new Date(),\r\n        currency: this.proformaInvoiceForm.value.currency,\r\n        countryOfOrigin: this.proformaInvoiceForm.value.countryOfOrigin,\r\n        portOfLoading: this.proformaInvoiceForm.value.portOfLoading,\r\n        portOfEntry: this.proformaInvoiceForm.value.portOfEntry,\r\n        piScan: null,\r\n        litScan: null,\r\n        testReport: null,\r\n        otherDoc: null,\r\n        confirmation: false,\r\n        approvalDate: null,\r\n        approvalStatus: null,\r\n        importerId: impId\r\n      };\r\n      this.proformaService.saveProformaInvoiceMst(proMst).subscribe(resp => {\r\n        const proInveMst = resp as IProformaInvoiceMst;\r\n        // this.piMstId = proInveMst.id;\r\n        const proforInDtl: IProformaInvoiceDtl[] = [];\r\n        for (const d of this.proformaInvoiceDtls) {\r\n          const obj: IProformaInvoiceDtl = {\r\n            id: 0,\r\n            mstId: proInveMst.id,\r\n            prodName: d.prodName,\r\n            prodType: d.prodType,\r\n            hsCode: d.hsCode,\r\n            manufacturer: d.manufacturer,\r\n            exchangeRate: d.exchangeRate,\r\n            noOfUnits: d.noOfUnits,\r\n            unitPrice: d.unitPrice,\r\n            packSize: d.packSize,\r\n            totalAmount: d.totalAmount,\r\n            totalPrice: d.totalPrice,\r\n            totalPriceInBdt: d.totalPriceInBdt,\r\n            approvalStatus: null,\r\n            approvedBy: 0,\r\n            remarks: null\r\n          };\r\n          proforInDtl.push(obj);\r\n        }\r\n        this.proformaService.saveProformaInvoiceDtl(proforInDtl).subscribe(response => {\r\n          const proformaDtl = response as IProformaInvoiceDtl[];\r\n          if (proInveMst.id !== undefined && proInveMst.id > 0) {\r\n            this.proformaService.UploadProformaFiles(formData, proInveMst.id).subscribe(r => {\r\n                this.alertify.success('Proforma Invoice saved successfully');\r\n                this.loading = false;\r\n                this.resetPage();\r\n            }, e => {\r\n              this.alertify.success('Proforma Invoice save failed');\r\n            });\r\n          }\r\n        }, err => {\r\n          this.alertify.success('Proforma Invoice save failed');\r\n          console.log(err);\r\n        });\r\n      }, error => {\r\n        this.alertify.success('Proforma Invoice saved failed');\r\n        console.log(error);\r\n      });\r\n    }\r\n    if ( this.proformaUpdateMode === true) {\r\n      const proMstUpdtDto: IProformaInvoiceMstUpdateDto  = {\r\n        id: this.piMstId,\r\n        currency: this.proformaInvoiceForm.value.currency,\r\n        countryOfOrigin: this.proformaInvoiceForm.value.countryOfOrigin,\r\n        portOfLoading: this.proformaInvoiceForm.value.portOfLoading,\r\n        portOfEntry: this.proformaInvoiceForm.value.portOfEntry,\r\n        proformaInvoiceNo: this.proformaInvoiceForm.value.proformaInvoiceNo\r\n      };\r\n      this.proformaService.updateProformaInvoiceMst(proMstUpdtDto).subscribe(response => {\r\n        const proInveMst = response as IProformaInvoiceMst;\r\n        // this.piMstId = proInveMst.id;\r\n        const proforInDtlUpdtDto: IProformaInvoiceDtl[] = [];\r\n        for (const d of this.proformaInvoiceDtls) {\r\n          const obj: IProformaInvoiceDtl = {\r\n            id: 0,\r\n            mstId: proInveMst.id,\r\n            prodName: d.prodName,\r\n            prodType: d.prodType,\r\n            hsCode: d.hsCode,\r\n            manufacturer: d.manufacturer,\r\n            exchangeRate: d.exchangeRate,\r\n            noOfUnits: d.noOfUnits,\r\n            unitPrice: d.unitPrice,\r\n            packSize: d.packSize,\r\n            totalAmount: d.totalAmount,\r\n            totalPrice: d.totalPrice,\r\n            totalPriceInBdt: d.totalPriceInBdt,\r\n            approvalStatus: null,\r\n            approvedBy: 0,\r\n            remarks: null\r\n          };\r\n          proforInDtlUpdtDto.push(obj);\r\n        }\r\n        this.proformaService.updateProformaInvoiceDtl(proforInDtlUpdtDto, this.piMstId).subscribe(resp => {\r\n          const ProMstDtl = resp as IProformaInvoiceDtl[];\r\n          this.loading = false;\r\n          this.resetPage();\r\n          this.alertify.success('Proforma Invoice updated successfully');\r\n        }, err => {\r\n          console.log(err);\r\n          this.alertify.error('Proforma Invoice update failed');\r\n        });\r\n      }, error => {\r\n        console.log(error);\r\n        this.loading = false;\r\n        this.alertify.error(error.error);\r\n      });\r\n    }\r\n  }\r\n  getAllProformaInvoiceMstByUser() {\r\n    this.loading = true;\r\n    const importer: IAnnualReqByImporterDto = {\r\n      importerId: 0\r\n    };\r\n    importer.importerId = this.loginService.getEmpOrImpName();\r\n    this.proformaService.getAllProformaInvoiceMstByUser(importer).subscribe(resp => {\r\n      this.proformaInvoiceMsts = resp as IProformaInvoiceMst[];\r\n      if (this.proformaInvoiceMsts.length === 0) {\r\n        this.alertify.warning('No Data Found');\r\n        this.loading = false;\r\n      } else {\r\n        this.loading = false;\r\n        this.openProformaMstSearchModal(this.proformaInvMstSearchModal);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  selectProforma(p: IProformaInvoiceMst) {\r\n    this.proformaNoNotOk = false;\r\n    this.proformaNoSpinner = false;\r\n    this.proformaNoOk = true;\r\n    this.proformaNoValidity = true;\r\n    const pDate = new Date(p.proformaDate);\r\n    const sDate = new Date(p.submissionDate);\r\n    let formattedSubmissionDate: any;\r\n    const formattedProformaDate = pDate.getDate() + '/' + (pDate.getMonth() + 1) + '/' + pDate.getFullYear();\r\n    if (p.submissionDate === undefined || p.submissionDate === null) {\r\n      formattedSubmissionDate = p.submissionDate;\r\n    } else {\r\n      formattedSubmissionDate = sDate.getDate() + '/' + (sDate.getMonth() + 1) + '/' + sDate.getFullYear();\r\n    }\r\n    if (p.confirmation === false) {\r\n      this.isSubmitted = false;\r\n      this.updateBtnDisable = false;\r\n      this.submitButtonDisable = false;\r\n    } else if (p.confirmation === true) {\r\n      this.isSubmitted = true;\r\n      this.submitButtonDisable = true;\r\n      this.updateBtnDisable = true;\r\n    }\r\n    this.saveButtonTitle = 'Update';\r\n    this.proformaUpdateMode = true;\r\n    this.piMstId = p.id;\r\n    this.proformaInvoiceForm.get('applicationNo').setValue(p.applicationNo);\r\n    this.proformaInvoiceForm.get('proformaInvoiceNo').setValue(p.proformaInvoiceNo);\r\n    this.proformaInvoiceForm.get('proformaDate').setValue(formattedProformaDate);\r\n    this.proformaInvoiceForm.get('submissionDate').setValue(formattedSubmissionDate);\r\n    this.proformaInvoiceForm.get('countryOfOrigin').setValue(p.countryOfOrigin);\r\n    this.proformaInvoiceForm.get('currency').setValue(p.currency);\r\n    this.proformaInvoiceForm.get('portOfLoading').setValue(p.portOfLoading);\r\n    this.proformaInvoiceForm.get('portOfEntry').setValue(p.portOfEntry);\r\n    this.proformaInvoiceForm.get('piScan').clearValidators();\r\n    this.proformaInvoiceForm.get('piScan').updateValueAndValidity();\r\n    this.proformaInvoiceForm.get('litScan').clearValidators();\r\n    this.proformaInvoiceForm.get('litScan').updateValueAndValidity();\r\n    this.proformaInvoiceForm.get('testReport').clearValidators();\r\n    this.proformaInvoiceForm.get('testReport').updateValueAndValidity();\r\n    this.proformaInvoiceForm.get('otherDoc').clearValidators();\r\n    this.proformaInvoiceForm.get('otherDoc').updateValueAndValidity();\r\n    this.getProformaDtlsByProformaMst(p.id);\r\n    this.proformaInvMstSearchModalRef.hide();\r\n  }\r\n  getProformaDtlsByProformaMst(poMstId: number) {\r\n    const proforma: IProformaMstIdDto = {\r\n      proformaMstId: 0\r\n    };\r\n    proforma.proformaMstId = poMstId;\r\n    this.proformaService.getProformaDtlsByProformaMst(proforma).subscribe(resp => {\r\n      this.proformaInvoiceDtls = resp as IProformaInvoiceDtl[];\r\n      if (this.proformaInvoiceDtls.length === 0) {\r\n        this.alertify.warning('No Data Found');\r\n      }\r\n    });\r\n  }\r\n  DownloadPiFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n         // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'proforma_invoice_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DownloadLitFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'literature_review_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DownloadTestFile(fname: string) {\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'test_report_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          alert('File not found in!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  DownloadOtherFile(fname: string) {\r\n    if (fname === '' || fname === undefined || fname === null) {\r\n      this.alertify.warning('No File Found');\r\n    }\r\n    this.fileDownloadInitiated = true;\r\n    return this.http.get(this.baseUrl + 'DownloadPiFile/' + fname, { responseType: 'arraybuffer' })\r\n      .subscribe((result: any) => {\r\n        if (result.type !== 'text/plain') {\r\n          var file = new Blob([result], {type: 'application/pdf'});\r\n          var fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n          // const blob = new Blob([result]);\r\n          // const saveAs = require('file-saver');\r\n          // const file = 'other_doc_' + fname;\r\n          // saveAs(blob, file);\r\n          // this.fileDownloadInitiated = false;\r\n        } else {\r\n          this.fileDownloadInitiated = false;\r\n          this.alertify.warning('File not found in Blob!');\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  confirmSubmit() {\r\n    this.proformaSubmissionConfirmRef.hide();\r\n    this.submitProformaInvoice();\r\n  }\r\n  declineSubmit() {\r\n    this.proformaSubmissionConfirmRef.hide();\r\n  }\r\n  confirmProformaInvoiceSubmission() {\r\n    this.openProformaSubmissionConfirmModal(this.proformaSubmissionConfirmModal);\r\n  }\r\n  submitProformaInvoice() {\r\n    const proMstId: IProformaMstIdDto = {\r\n      proformaMstId: this.piMstId\r\n    };\r\n    this.proformaService.submitProformaInvoice(proMstId).subscribe( resp => {\r\n      const proM = resp as IProformaInvoiceMst[];\r\n      this.resetPage();\r\n      this.alertify.success('Proforma Invoice submitted successfully');\r\n    }, err => {\r\n      this.alertify.success('Proforma Invoice submission failed');\r\n    });\r\n  }\r\n  IsProformaSubmitted(mId: number) {\r\n    let res: ISubmissionResult = {\r\n      IsSubmitted: false\r\n    };\r\n    const proMst: IProformaMstIdDto = {\r\n      proformaMstId: this.piMstId\r\n    };\r\n    this.proformaService.IsProformaSubmitted(proMst).subscribe(resp => {\r\n      res = resp as ISubmissionResult;\r\n    });\r\n    if (res.IsSubmitted === false) {\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  resetPage() {\r\n    // this.proformaInvoiceForm.reset();\r\n    this.createProformaInvoiceForm();\r\n    this.proformaInvoiceForm.get('currency').setValue('');\r\n    this.proformaInvoiceForm.get('proformaDate').setValue('');\r\n    // this.proformaInvoiceDtlForm.reset();\r\n    this.createProformaInvoiceDtlForm();\r\n    this.proformaInvoiceDtls = [];\r\n    this.proformaInvoiceMsts = [];\r\n    this.totalAmountValidationErrorMsg = false;\r\n    this.noOfUnitValidationErrorMsg=false;\r\n    this.totalAmountValidation = {\r\n      annualTotalAmount: 0,\r\n      remainingAmount: 0,\r\n      validationStatus: false,\r\n      proformaTotalAmount: 0\r\n    };\r\n    this.saveButtonTitle = 'Save';\r\n    this.proformaUpdateMode = false;\r\n    this.addMode = false;\r\n    this.editMode = false;\r\n    this.loading = false;\r\n    this.exchngDisabled = true;\r\n    this.updateBtnDisable = false;\r\n    this.submitButtonDisable = true;\r\n    this.isSubmitted = false;\r\n    this.piMstId = null;\r\n    this.p = 1;\r\n    this.pa = 1;\r\n    this.pd = 1;\r\n    this.searchText = '';\r\n\r\n    this.proformaNoSpinner = false;\r\n    this.proformaNoOk = false;\r\n    this.proformaNoNotOk = false;\r\n    this.proformaNoValidity = false;\r\n  }\r\n  viewProformaReport(): void {\r\n      this.loading = true;\r\n      const mst: IProformaMstIdDto = {\r\n        proformaMstId: this.piMstId\r\n      };\r\n      let row: any[] = [];\r\n      const rowD: any[] = [];\r\n      const col = ['SL \\nNO.','Product Name', 'Type', 'H.S. Code', 'Manufacturer', 'Pack Size',\r\n      'No Of Units', 'Amount(Tons)', 'Unit Price', 'Price', 'Price in Bdt(Tk)'];\r\n      const title = 'Importer Report';\r\n      let slNO = 0;\r\n      this.proformaService.getProformaDtlsByProformaMst(mst).subscribe(result => {\r\n       const r = result as IProformaInvoiceDtl[];\r\n       for (const a of r) {\r\n         row.push(++slNO);\r\n         row.push(a.prodName);\r\n         row.push(a.prodType);\r\n         row.push(a.hsCode);\r\n         row.push(a.manufacturer);\r\n         row.push(a.packSize);\r\n         row.push(a.noOfUnits);\r\n         row.push(a.totalAmount);\r\n         row.push(a.unitPrice);\r\n         row.push(a.totalPrice);\r\n         row.push(a.totalPriceInBdt);\r\n         rowD.push(row);\r\n         row = [];\r\n       }\r\n       let proMstRpt: IProMstRpt;\r\n       this.proformaService.ProformaInvoiceMstReport(mst).subscribe( resp => {\r\n           proMstRpt = resp as IProMstRpt;\r\n           proMstRpt.submissionDate = this.formatReportDate(proMstRpt.submissionDate);\r\n           proMstRpt.proformaDate = this.formatReportDate(proMstRpt.proformaDate);\r\n           this.getReport(col, rowD, title, proMstRpt);\r\n       });\r\n     });\r\n   }\r\n   formatReportDate(d: any) {\r\n    if ((d === undefined) || (d === null)) {\r\n      return 'Not Submitted';\r\n    }\r\n    if ((d !== undefined) && (d !== null)) {\r\n      const convertedDate = new Date(d);\r\n      return convertedDate.getDate() + '/' + (convertedDate.getMonth() + 1) + '/' + convertedDate.getFullYear();\r\n    }\r\n   }\r\n  getReport(col: any[], rowD: any[], title: any, proMstRpt: any) {\r\n    const totalPagesExp = '{total_pages_count_string}';\r\n    const pdf = new jsPDF('l', 'pt', 'A4');\r\n    pdf.setTextColor(0, 0, 0);\r\n    pdf.setFontSize(10);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Report Name: ', 50, 90);\r\n    pdf.setFontType('normal');\r\n    pdf.text('Proforma Invoice Report', 150, 90);\r\n    pdf.setFontSize(10);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Organization Name: ', 50, 105);\r\n    pdf.setFontType('normal');\r\n    pdf.text(proMstRpt.orgName + ' , ' + proMstRpt.address, 150, 105);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Proforma Date: ', 650, 105);\r\n    pdf.setFontType('normal');\r\n    pdf.text(proMstRpt.proformaDate, 738, 105);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Submission Date: ', 650, 120);\r\n    pdf.setFontType('normal');\r\n    pdf.text(proMstRpt.submissionDate === undefined || null ?\r\n      'Not Submitted' : proMstRpt.submissionDate , 738, 120);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Application No: ', 50, 120);\r\n    pdf.setFontType('normal');\r\n    pdf.text(proMstRpt.applicationNo, 150, 120);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Proforma Invoice No: ', 230, 120);\r\n    pdf.setFontType('normal');\r\n    pdf.text( proMstRpt.proformaInvoiceNo, 340, 120);\r\n    pdf.setFontSize(10);\r\n    // tslint:disable-next-line: max-line-length\r\n    pdf.setFontType('bold');\r\n    pdf.text('Country: ', 50, 135);\r\n    pdf.setFontType('normal');\r\n    pdf.text(proMstRpt.countryOfOrigin , 150, 135);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Currency: ', 230, 135);\r\n    pdf.setFontType('normal');\r\n    pdf.text(proMstRpt.currency, 340, 135);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Port of Loading: ', 50, 150);\r\n    pdf.setFontType('normal');\r\n    pdf.text( proMstRpt.portOfLoading , 150, 150);\r\n    pdf.setFontType('bold');\r\n    pdf.text('Port of Entry: ' , 230, 150);\r\n    pdf.setFontType('normal');\r\n    pdf.text( proMstRpt.portOfEntry, 340, 150);\r\n    pdf.setLineWidth(1);\r\n    pdf.line(5, 165, 835, 165);\r\n    const pageContent = function (data) {\r\n      // HEADER\r\n\r\n      // FOOTER\r\n      let str = 'Page ' + data.pageCount;\r\n      // Total page number plugin only available in jspdf v1.0+\r\n      if (typeof pdf.putTotalPages === 'function') {\r\n        str = str + ' of ' + totalPagesExp;\r\n      }\r\n      pdf.setFontSize(11);\r\n      const pageHeight = pdf.internal.pageSize.height || pdf.internal.pageSize.getHeight();\r\n      pdf.text(str, data.settings.margin.left, pageHeight - 10); // showing current page number\r\n    };\r\n    pdf.autoTable(col, rowD,\r\n      {\r\n        theme: 'grid',\r\n        headStyles: {fillColor: [192, 192, 192]},\r\n        didDrawPage: pageContent,\r\n        margin: { top: 175 },\r\n        bodyStyles: {valign: 'middle', lineColor: [153, 153, 153]},\r\n        styles: {overflow: 'linebreak', cellWidth: 'wrap' , fontSize: 9, textColor: 0},\r\n      });\r\n\r\n    // for adding total number of pages // i.e 10 etc\r\n    if (typeof pdf.putTotalPages === 'function') {\r\n      pdf.putTotalPages(totalPagesExp);\r\n    }\r\n\r\n    // pdf.save(title + '.pdf');\r\n    pdf.setProperties({\r\n      title: title + \".pdf\"\r\n  });\r\n \r\n var blob = pdf.output(\"blob\");\r\n  window.open(URL.createObjectURL(blob));\r\n    this.loading = false;\r\n  }\r\n  isUsernameAvailable() {\r\n    if (this.proformaUpdateMode === false) {\r\n      this.proformaNoValidity = false;\r\n      this.proformaNoOk = false;\r\n      this.proformaNoNotOk = false;\r\n      this.proformaNoSpinner = true;\r\n      const proformaNoDto: ProformaInvoiceNoDto = {\r\n        proformaInvoiceNo: this.proformaInvoiceForm.value.proformaInvoiceNo\r\n      };\r\n      this.proformaService.proformaInvoiceNoAvailable(proformaNoDto).subscribe(resp => {\r\n        const res = resp ;\r\n        if (res) {\r\n          this.proformaNoNotOk = false;\r\n          this.proformaNoSpinner = false;\r\n          this.proformaNoOk = true;\r\n          this.proformaNoValidity = true;\r\n    } else {\r\n          this.proformaNoOk = false;\r\n          this.proformaNoSpinner = false;\r\n          this.proformaNoNotOk = true;\r\n          this.proformaNoValidity = false;\r\n        }\r\n      }, error => {\r\n        this.proformaNoValidity = false;\r\n        console.log(error);\r\n      });\r\n    } else {\r\n      this.proformaNoNotOk = false;\r\n      this.proformaNoSpinner = false;\r\n      this.proformaNoOk = true;\r\n      this.proformaNoValidity = true;\r\n    }\r\n  }\r\n}\r\ninterface IProformaInvoiceMst {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: Date;\r\n  submissionDate: Date;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  piScan: string;\r\n  litScan: string;\r\n  testReport: string;\r\n  otherDoc: string;\r\n  confirmation: boolean;\r\n  approvalDate: Date;\r\n  approvalStatus: boolean;\r\n  importerId: number;\r\n}\r\ninterface IProformaInvoiceDtl {\r\n  id: number;\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n  approvalStatus: boolean;\r\n  approvedBy: number;\r\n  remarks: string;\r\n}\r\ninterface ICurrency {\r\n  id: number;\r\n  currency: string;\r\n  exchangeRate: number;\r\n}\r\ninterface IAnnualReqByImporterDto {\r\n  importerId: number;\r\n}\r\ninterface RemainingAmountforPIProductDto {\r\n  importerId: number;\r\n  prodName: string;\r\n  packSize: string;\r\n  hsCode: string;\r\n}\r\ninterface IProformaMstIdDto {\r\n  proformaMstId: number;\r\n}\r\ninterface IAnnualRequirementDtl {\r\n  id: number;\r\n  annReqMstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  countryOfOrigin: string;\r\n  packSize: string;\r\n  tentativeUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  currency: string;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n}\r\ninterface IAnnualRequirementMst {\r\n  id: number;\r\n  importerId: number;\r\n  submissionDate: string;\r\n  AnnualRequirementDtls: IAnnualRequirementDtl;\r\n}\r\ninterface IAnnReqProdDtlsForProforDto {\r\n  productId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  country: string;\r\n  tentativeUnits: number;\r\n  totalAmount: number;\r\n  remainingAmount: number;\r\n}\r\ninterface ProfInvTotalAmtDtoByProdDto {\r\n  importerId: number;\r\n  prodName: string;\r\n  packSize: string;\r\n  totalAmount: number;\r\n}\r\ninterface IProformaInvoiceMstUpdateDto {\r\n  id: number;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  proformaInvoiceNo: string;\r\n}\r\ninterface IProfInvDtlUpdtDto {\r\n  mstId: number;\r\n  prodName: string;\r\n  prodType: string;\r\n  hsCode: string;\r\n  manufacturer: string;\r\n  packSize: string;\r\n  noOfUnits: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n  totalPriceInBdt: number;\r\n  exchangeRate: number;\r\n  totalAmount: number;\r\n}\r\ninterface IPiTotalAmountValidationDto {\r\n    annualTotalAmount: number;\r\n    proformaTotalAmount: number;\r\n    remainingAmount: number;\r\n    validationStatus: boolean;\r\n}\r\ninterface ISubmissionResult{\r\n  IsSubmitted: boolean;\r\n}\r\n\r\ninterface IProMstRpt {\r\n  id: number;\r\n  applicationNo: number;\r\n  proformaInvoiceNo: string;\r\n  proformaDate: string;\r\n  submissionDate: string;\r\n  currency: string;\r\n  countryOfOrigin: number;\r\n  portOfLoading: string;\r\n  portOfEntry: string;\r\n  confirmation: boolean;\r\n  importerId: number;\r\n  orgName: string;\r\n  address: string;\r\n}\r\ninterface ProformaInvoiceNoDto{\r\n  proformaInvoiceNo: string;\r\n}","export default \"*{\\r\\n    font-family: 'nikosh','calibri';\\r\\n}\\r\\nform{\\r\\n    width: 100%;\\r\\n    padding: 2% 5% 1% 5%;\\r\\n}\\r\\n.form-control{\\r\\n    background-image: none;\\r\\n    /* border: 1px solid green; */\\r\\n}\\r\\n.form-control:focus{\\r\\n    border: 1px solid #45A845 !important;\\r\\n}\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n.btn-registration-disabled{\\r\\n    cursor: no-drop;\\r\\n    color: #000 !important;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.btn-register{\\r\\n    font-size: 15px !important;\\r\\n    font-weight: 700;\\r\\n}\\r\\nlabel{\\r\\n    font-weight: 600px !important;\\r\\n    font-size: 14px !important;\\r\\n}\\r\\nfieldset.scheduler-border {\\r\\n    border: 1px solid #45A845 !important;\\r\\n    padding: 0 1.4em 1.4em 1.4em !important;\\r\\n    margin: 15px 0 1.5em 0 !important;\\r\\n    box-shadow:  0px 0px 0px 0px #000;\\r\\n}\\r\\nlegend.scheduler-border {\\r\\n        font-size: 1.2em !important;\\r\\n        font-weight: bold !important;\\r\\n        text-align: left !important;\\r\\n        width:auto;\\r\\n        padding:0 10px;\\r\\n        border-bottom:none;\\r\\n        margin-bottom: 0;\\r\\n    }\\r\\n.navbar{\\r\\n    border: none;\\r\\n}\\r\\n.input-group-text {\\r\\n    align-items: center;\\r\\n    padding: .375rem .75rem;\\r\\n    margin-bottom: 0;\\r\\n    margin-left: 2px !important;\\r\\n    font-size: 15px;\\r\\n    font-weight: 400;\\r\\n    line-height: 1.5;\\r\\n    color: #495057;\\r\\n    text-align: center;\\r\\n    white-space: nowrap;\\r\\n    background-color: #e9ecef !important;\\r\\n    border: 1px solid #ced4da !important;\\r\\n    border-radius: .25rem;\\r\\n}\\r\\n.lvl-bangla-font{\\r\\n    font-weight: 400 !important;\\r\\n    font-size: 19px !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLCtCQUErQjtBQUNuQztBQUNBO0lBQ0ksV0FBVztJQUNYLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxnQ0FBZ0M7QUFDcEM7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLDBCQUEwQjtJQUMxQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLDZCQUE2QjtJQUM3QiwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLG9DQUFvQztJQUNwQyx1Q0FBdUM7SUFDdkMsaUNBQWlDO0lBRXpCLGlDQUFpQztBQUM3QztBQUVJO1FBQ0ksMkJBQTJCO1FBQzNCLDRCQUE0QjtRQUM1QiwyQkFBMkI7UUFDM0IsVUFBVTtRQUNWLGNBQWM7UUFDZCxrQkFBa0I7UUFDbEIsZ0JBQWdCO0lBQ3BCO0FBQ0o7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQiwyQkFBMkI7SUFDM0IsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsb0NBQW9DO0lBQ3BDLG9DQUFvQztJQUNwQyxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLDJCQUEyQjtJQUMzQiwwQkFBMEI7QUFDOUIiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKntcclxuICAgIGZvbnQtZmFtaWx5OiAnbmlrb3NoJywnY2FsaWJyaSc7XHJcbn1cclxuZm9ybXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMiUgNSUgMSUgNSU7XHJcbn1cclxuLmZvcm0tY29udHJvbHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCBncmVlbjsgKi9cclxufVxyXG4uZm9ybS1jb250cm9sOmZvY3Vze1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ1QTg0NSAhaW1wb3J0YW50O1xyXG59XHJcbi5pcy1pbnZhbGlkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG59XHJcbi5pbnZhbGlkLWZlZWRiYWNre1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uYnRuLXJlZ2lzdHJhdGlvbi1kaXNhYmxlZHtcclxuICAgIGN1cnNvcjogbm8tZHJvcDtcclxuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4uYnRuLXJlZ2lzdGVye1xyXG4gICAgZm9udC1zaXplOiAxNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcbmxhYmVse1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcclxufVxyXG5maWVsZHNldC5zY2hlZHVsZXItYm9yZGVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0NUE4NDUgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgMS40ZW0gMS40ZW0gMS40ZW0gIWltcG9ydGFudDtcclxuICAgIG1hcmdpbjogMTVweCAwIDEuNWVtIDAgIWltcG9ydGFudDtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogIDBweCAwcHggMHB4IDBweCAjMDAwO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAgMHB4IDBweCAwcHggMHB4ICMwMDA7XHJcbn1cclxuXHJcbiAgICBsZWdlbmQuc2NoZWR1bGVyLWJvcmRlciB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjJlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xyXG4gICAgICAgIHdpZHRoOmF1dG87XHJcbiAgICAgICAgcGFkZGluZzowIDEwcHg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTpub25lO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbi5uYXZiYXJ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbn1cclxuLmlucHV0LWdyb3VwLXRleHQge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IC4zNzVyZW0gLjc1cmVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIG1hcmdpbi1sZWZ0OiAycHggIWltcG9ydGFudDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgY29sb3I6ICM0OTUwNTc7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWNlZiAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NlZDRkYSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG59XHJcbi5sdmwtYmFuZ2xhLWZvbnR7XHJcbiAgICBmb250LXdlaWdodDogNDAwICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXNpemU6IDE5cHggIWltcG9ydGFudDtcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { RegisterService } from '../_services/register.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy  {\r\n  bodyClasses = 'skin-blue sidebar-mini';\r\n  body: HTMLBodyElement = document.getElementsByTagName('body')[0];\r\n  registrationForm: FormGroup;\r\n  public divisions = [];\r\n  public ds: IDistrict[];\r\n  public districts = [];\r\n  upazilas = [];\r\n  public up: IUpazila[];\r\n  dlsFile: any;\r\n  nidFile: any;\r\n  ircFile: any;\r\n  progress: number;\r\n  importerInfo: IImporterInfo;\r\n  public loading = false;\r\n  regOk = false;\r\n  regNotOk = false;\r\n  regSpinner = false;\r\n  usernameValidity = false;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private registerService: RegisterService,\r\n    private alertify: AlertifyService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.http.get('../../assets/area_data/division.json').subscribe(\r\n      data => {\r\n        this.divisions = data as IDivsion[];\r\n      }, (err: HttpErrorResponse) => {\r\n        console.log (err.message);\r\n      }\r\n    );\r\n    this.http.get('../../assets/area_data/district.json').subscribe(\r\n      data => {\r\n        this.districts = data as IDistrict[];\r\n      }, (err: HttpErrorResponse) => {\r\n        console.log (err.message);\r\n      }\r\n    );\r\n    this.http.get('../../assets/area_data/upazila.json').subscribe(\r\n      data => {\r\n        this.upazilas = data as IUpazila[];\r\n      }, (err: HttpErrorResponse) => {\r\n        console.log (err.message);\r\n      }\r\n    );\r\n    this.createRegistrationForm();\r\n    this.body.classList.add('registerBGImage');\r\n  }\r\n  ngOnDestroy() {\r\n    // remove the the body classes\r\n    this.body.classList.remove('registerBGImage');\r\n   // this.body.classList.remove('sidebar-mini');\r\n  }\r\n  createRegistrationForm() {\r\n    this.registrationForm = new FormGroup({\r\n      orgName: new FormControl('' , [Validators.required, Validators.maxLength(200)]),\r\n      contactName: new FormControl('', [Validators.required, Validators.maxLength(50)]),\r\n      position: new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      contactNo : new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      email : new FormControl('', [Validators.required, Validators.maxLength(50), Validators.email]),\r\n      division: new FormControl('', Validators.required),\r\n      district: new FormControl('', Validators.required),\r\n      upazila: new FormControl('', Validators.required),\r\n      address: new FormControl('', [Validators.required, Validators.maxLength(500)]),\r\n      dlsLicenseType: new FormControl('', Validators.required),\r\n      dlsLicenseNo: new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      dlsLicenseScan: new FormControl('', Validators.required),\r\n      nidNo: new FormControl('', [Validators.required, Validators.maxLength(20)]),\r\n      nidScan: new FormControl('', Validators.required),\r\n      ircScan: new FormControl('', Validators.required),\r\n      username: new FormControl('', [Validators.required, Validators.maxLength(20), Validators.pattern(/.*[a-zA-Z]+.*/)]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(10)]),\r\n      confirmPassword: new FormControl('', Validators.required),\r\n    }, this.passwordMatchValidator);\r\n  }\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true };\r\n  }\r\n  onDivisionChange() {\r\n    const dists = [];\r\n    const divName = this.registrationForm.value.division;\r\n    this.districts.forEach(function(item, index) {\r\n      if (item.division ===  divName) {\r\n         const obj = {\r\n            district: item.district,\r\n            division: item.division\r\n          };\r\n         dists.push(obj);\r\n      }\r\n    });\r\n    this.ds = dists as IDistrict[];\r\n  }\r\n  onDistrictChange() {\r\n    const upazs = [];\r\n    const upazName = this.registrationForm.value.district;\r\n    // tslint:disable-next-line: only-arrow-functions\r\n    this.upazilas.forEach(function(item, index) {\r\n        if ( item.district === upazName ) {\r\n          const obj = {\r\n            upazila: item.upazila,\r\n            district: item.district\r\n          };\r\n          upazs.push(obj);\r\n        }\r\n    });\r\n    this.up = upazs as IUpazila[];\r\n  }\r\n  validateImporterInfoFileUpload(file: File) {\r\n    if (file) {\r\n      const fileName = file.name;\r\n      const fileSize = file.size;\r\n      const allowedFile = '.pdf';\r\n      if (fileName.substr(fileName.length - allowedFile.length,\r\n        allowedFile.length).toLowerCase() !== allowedFile.toLowerCase()) {\r\n        return 'invalidFileFormat';\r\n      }\r\n      if (fileSize > 1024000) {\r\n        return 'invalidFileSize';\r\n      }\r\n    }\r\n    return 'fileOk';\r\n  }\r\n  onSelectedDlsFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateImporterInfoFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.registrationForm.controls.dlsLicenseScan.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.registrationForm.controls.dlsLicenseScan.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.dlsFile = f;\r\n    }\r\n  }\r\n  onSelectedNidFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateImporterInfoFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.registrationForm.controls.nidScan.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.registrationForm.controls.nidScan.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.nidFile = f;\r\n    }\r\n  }\r\n  onSelectedIrcFile(event) {\r\n    const f = event.target.files[0];\r\n    const result = this.validateImporterInfoFileUpload(f);\r\n    if (result === 'invalidFileFormat') {\r\n      this.registrationForm.controls.ircScan.reset();\r\n      this.alertify.error('Invalid File Format');\r\n      return;\r\n    }\r\n    if (result === 'invalidFileSize') {\r\n      this.registrationForm.controls.ircScan.reset();\r\n      this.alertify.error('Invalid File Size');\r\n      return;\r\n    }\r\n    if (result === 'fileOk') {\r\n      this.ircFile = f;\r\n    }\r\n  }\r\n  register() {\r\n    this.loading = true;\r\n    const formData = new FormData();\r\n    formData.append('dlsLicenseScan', this.dlsFile);\r\n    formData.append('nidScan', this.nidFile);\r\n    formData.append('ircScan', this.ircFile);\r\n    this.registerService.register(this.registrationForm.value).subscribe(resp => {\r\n    this.importerInfo = resp as IImporterInfo;\r\n    if (this.importerInfo.id !== undefined && this.importerInfo.id > 0 ) {\r\n      this.registerService.UploadImporterFile(formData, this.importerInfo.id)\r\n      .subscribe(response => {\r\n        this.loading = false;\r\n        this.alertify.success('Registration Successfull. Login with your credentials.');\r\n        this.router.navigate(['/login']);\r\n      }, error => {\r\n        this.alertify.error('Registration failed');\r\n      });\r\n    }\r\n     }, error => {\r\n      this.alertify.error('Registration failed');\r\n     });\r\n  }\r\n  isUsernameAvailable() {\r\n    this.usernameValidity = false;\r\n    this.regOk = false;\r\n    this.regNotOk = false;\r\n    this.regSpinner = true;\r\n    const usernameDto: IUsernameDto = {\r\n      username: this.registrationForm.value.username\r\n    };\r\n    this.registerService.isUsernameAvailable(usernameDto).subscribe(resp => {\r\n      const res = resp ;\r\n      if (res) {\r\n        this.regNotOk = false;\r\n        this.regSpinner = false;\r\n        this.regOk = true;\r\n        this.usernameValidity = true;\r\n  } else {\r\n        this.regOk = false;\r\n        this.regSpinner = false;\r\n        this.regNotOk = true;\r\n        this.usernameValidity = false;\r\n      }\r\n    }, error => {\r\n      this.usernameValidity = false;\r\n      console.log(error);\r\n    });\r\n  }\r\n  backToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\ninterface IUsernameDto {\r\n  username: string;\r\n}\r\ninterface IDivsion {\r\n  division: string;\r\n}\r\ninterface IDistrict {\r\n  district: string;\r\n  division: string;\r\n}\r\ninterface IUpazila {\r\n  upazila: string;\r\n  district: string;\r\n}\r\n\r\ninterface IImporterInfo {\r\n  id: number;\r\n  orgName: string;\r\n  contactName: string;\r\n  position: string;\r\n  contactNo: string;\r\n  email: string;\r\n  division: string;\r\n  district: string;\r\n  upazila: string;\r\n  address: string;\r\n  dlsLicenseType: string;\r\n  dlsLicenseNo: string;\r\n  dlsLicenseScan: string;\r\n  nidNo: string;\r\n  nidScan: string;\r\n  ircScan: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGUtbWFuYWdlbWVudC9yb2xlLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.css']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n.is-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n.invalid-feedback{\\r\\n    font-weight: 600;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS1tYW5hZ2VtZW50L3JvbGUvY3JlYXRlLWVkaXQtcm9sZS1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvcm9sZS1tYW5hZ2VtZW50L3JvbGUvY3JlYXRlLWVkaXQtcm9sZS1tb2RhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5pcy1pbnZhbGlkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50O1xyXG59XHJcbi5pbnZhbGlkLWZlZWRiYWNre1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { RoleService } from 'src/app/_services/role.service';\r\n\r\n@Component({\r\n  selector: 'createOrEditRoleModal',\r\n  templateUrl: './create-edit-role-modal.component.html',\r\n  styleUrls: ['./create-edit-role-modal.component.css']\r\n})\r\nexport class CreateEditRoleModalComponent implements OnInit {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  active = false;\r\n  saving = false;\r\n  role:CreateRoleDto = new CreateRoleDto();\r\n\r\n  constructor(\r\n    private _roleService: RoleService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  save(): void {\r\n    this.saving = true;\r\n    this._roleService.createRoleInfo(this.role)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      }, error => {\r\n        console.log(error);\r\n        this._alertifyService.error(error.error);\r\n      });\r\n  }\r\n  update(role: CreateRoleDto): void {\r\n    this.saving = true;\r\n    this._roleService.editRoleInfo(role, role.id)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      }, error => {\r\n        console.log(error);\r\n        this._alertifyService.error(error.error);\r\n      });\r\n  }\r\n\r\n  show(roleId?: number): void {\r\n    if (!roleId) {\r\n      this.role = new CreateRoleDto();\r\n      this.role.id = roleId;\r\n\r\n        this.active = true;\r\n        this.modal.show();\r\n      } \r\n      else {\r\n        this._roleService.getRoleInfoById(roleId).subscribe(result => {\r\n          const e = result as ICreateRoleDto\r\n          e.id = roleId;\r\n          this.role = e;\r\n        });\r\n        this.active = true;\r\n        this.modal.show();\r\n      }\r\n  }\r\n  close(): void {\r\n\r\n    this.active = false;\r\n    this.modal.hide();\r\n  }\r\n}\r\n\r\nexport interface ICreateRoleDto {\r\n  name: string | undefined;\r\n  fullName: string | undefined;\r\n  id: number | undefined;\r\n}\r\n\r\nexport class CreateRoleDto implements ICreateRoleDto {\r\n  name: string | undefined;\r\n  fullName: string | undefined;\r\n  id: number | undefined;\r\n\r\n  constructor(data?: ICreateRoleDto) {\r\n      if (data) {\r\n          for (var property in data) {\r\n              if (data.hasOwnProperty(property))\r\n                  (<any>this)[property] = (<any>data)[property];\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGUtbWFuYWdlbWVudC9yb2xlL3JvbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PrimengTableHelper } from 'src/app/helpers/PrimengTableHelper';\r\nimport { RoleService } from 'src/app/_services/role.service';\r\nimport { CreateEditRoleModalComponent, ICreateRoleDto } from './create-edit-role-modal.component';\r\nimport { Table } from 'primeng/table';\r\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from 'src/app/common/app-pagedResult';\r\n\r\n@Component({\r\n  selector: 'Roles',\r\n  templateUrl: './role.component.html',\r\n  styleUrls: ['./role.component.css']\r\n})\r\nexport class RoleComponent {\r\n\r\n  @ViewChild('createOrEditRoleModal', { static: true }) createOrEditRoleModal: CreateEditRoleModalComponent;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static:true}) paginator: Paginator;\r\n  filterText = '';\r\n\r\n  primengTableHelper: PrimengTableHelper;\r\n\r\n  constructor(\r\n    private _roleService: RoleService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n\r\n  getRoles(event?: LazyLoadEvent) {\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n     const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting:this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator,event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n     this._roleService.getAllRoleInfos(fltr).subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n       this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n       this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n\r\n  createRole(): void {\r\n    this.createOrEditRoleModal.show();\r\n  }\r\n\r\n  deleteRole(role: ICreateRoleDto): void {\r\n    const result = confirm('are you sure want to remove?');\r\n    if (result) {\r\n      this._roleService.deleteRoleInfo(role.id)\r\n        .subscribe(() => {\r\n          this.reloadPage();\r\n          this._alertifyService.error('Successfully Deleted');\r\n        });\r\n    }\r\n  }\r\n}\r\n","export default \".role-text{\\r\\n    padding-right: 0 !important;\\r\\n}\\r\\n.role-pick{\\r\\n    padding-left: 0 !important;\\r\\n}\\r\\n.role-clear{\\r\\n    margin-left: 0 !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS1tYW5hZ2VtZW50L3VzZXItcm9sZS1hc3NpZ24vY3JlYXRlLWVkaXQtdXNlci1yb2xlLWFzc2lnbi1tb2RhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0FBQy9CO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL3JvbGUtbWFuYWdlbWVudC91c2VyLXJvbGUtYXNzaWduL2NyZWF0ZS1lZGl0LXVzZXItcm9sZS1hc3NpZ24tbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb2xlLXRleHR7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuLnJvbGUtcGlja3tcclxuICAgIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xyXG59XHJcbi5yb2xlLWNsZWFye1xyXG4gICAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { UserRoleAssignService } from 'src/app/_services/user-role-assign.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { RoleLookupTableModalComponent } from 'src/app/lookUpTabelModals/role-lookup-table-modal.component';\r\nimport { UserLookupTableModalComponent } from 'src/app/lookUpTabelModals/user-lookup-table-modal.component';\r\n\r\n@Component({\r\n  selector: 'createEditUserRoleAssignModal',\r\n  templateUrl: './create-edit-user-role-assign-modal.component.html',\r\n  styleUrls: ['./create-edit-user-role-assign-modal.component.css']\r\n})\r\nexport class CreateEditUserRoleAssignModalComponent implements OnInit {\r\n\r\n  @ViewChild('createOrEditModal', { static: true }) modal: ModalDirective;\r\n  @ViewChild('userLookupTableModal', { static: true }) userLookupTableModal: UserLookupTableModalComponent;\r\n  @ViewChild('roleLookupTableModal', { static: true }) roleLookupTableModal: RoleLookupTableModalComponent;\r\n  @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  active = false;\r\n  saving = false;\r\n  userRoleAssign: CreateUserRoleAssignDto = new CreateUserRoleAssignDto();\r\n  userName = '';\r\n  roleName='';\r\n\r\n  constructor(\r\n    private _userRoleAssignService: UserRoleAssignService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(): void {\r\n    this.saving = true;\r\n    this._userRoleAssignService.createUserRoleConf(this.userRoleAssign)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      },\r\n      error => {\r\n          console.log(error.error);\r\n          this._alertifyService.warning(error.error);\r\n      });\r\n  }\r\n  update(userRoleAssign: CreateUserRoleAssignDto): void {\r\n    this.saving = true;\r\n    this._userRoleAssignService.editUserRoleConf(userRoleAssign, userRoleAssign.id)\r\n      .pipe(finalize(() => { this.saving = false; }))\r\n      .subscribe(() => {\r\n        this._alertifyService.success('Saved Successfully');\r\n        this.close();\r\n        this.modalSave.emit(null);\r\n      });\r\n  }\r\n\r\n  show(userRoleAssignId?: number): void {\r\n    if (!userRoleAssignId) {\r\n      this.userRoleAssign = new CreateUserRoleAssignDto();\r\n      this.userRoleAssign.id = userRoleAssignId;\r\n\r\n      this.active = true;\r\n      this.modal.show();\r\n    }\r\n    else {\r\n      this._userRoleAssignService.getUserRoleConfById(userRoleAssignId).subscribe(result => {\r\n        const e = result as ICreateUserRoleAssignDto\r\n        e.id = userRoleAssignId;\r\n        this.userRoleAssign = e;\r\n        console.log(\"Test\");\r\n        console.log(this.userRoleAssign);\r\n      });\r\n      this.active = true;\r\n      this.modal.show();\r\n    }\r\n  }\r\n\r\n  openSelectUserModal() {\r\n    this.userLookupTableModal.id = this.userRoleAssign.userId;\r\n    this.userLookupTableModal.displayName = this.userName;\r\n    this.userLookupTableModal.show();\r\n  }\r\n  setUserIdNull() {\r\n    this.userRoleAssign.userId = null;\r\n    this.userName = '';\r\n  }\r\n  getNewUserId() {\r\n    this.userRoleAssign.userId = this.userLookupTableModal.id;\r\n    this.userName = this.userLookupTableModal.displayName;\r\n  }\r\n\r\n  openSelectRoleModal() {\r\n    this.roleLookupTableModal.id = this.userRoleAssign.roleId;\r\n    this.roleLookupTableModal.displayName = this.roleName;\r\n    this.roleLookupTableModal.show();\r\n  }\r\n  setRoleIdNull() {\r\n    this.userRoleAssign.roleId = null;\r\n    this.roleName = '';\r\n  }\r\n  getNewRoleId() {\r\n    this.userRoleAssign.roleId = this.roleLookupTableModal.id;\r\n    this.roleName = this.roleLookupTableModal.displayName;\r\n  }\r\n\r\n  close(): void {\r\n\r\n    this.active = false;\r\n    this.modal.hide();\r\n  }\r\n}\r\n\r\nexport interface ICreateUserRoleAssignDto {\r\n  userName: string | undefined;\r\n  roleName: string | undefined;\r\n  userId: number | undefined;\r\n  roleId: number | undefined;\r\n  id: number | undefined;\r\n}\r\n\r\nexport class CreateUserRoleAssignDto implements ICreateUserRoleAssignDto {\r\n  userName: string | undefined;\r\n  roleName: string | undefined;\r\n  userId: number | undefined;\r\n  roleId: number | undefined;\r\n  id: number | undefined;\r\n\r\n  constructor(data?: ICreateUserRoleAssignDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGUtbWFuYWdlbWVudC91c2VyLXJvbGUtYXNzaWduL3VzZXItcm9sZS1hc3NpZ24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CreateEditUserRoleAssignModalComponent, ICreateUserRoleAssignDto } from './create-edit-user-role-assign-modal.component';\r\nimport { Table } from 'primeng/table';\r\nimport { Paginator, LazyLoadEvent } from 'primeng/primeng';\r\nimport { PrimengTableHelper } from 'src/app/helpers/PrimengTableHelper';\r\nimport { UserRoleAssignService } from 'src/app/_services/user-role-assign.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { IGetAllInputFilterDto, IPagedResultDto } from 'src/app/common/app-pagedResult';\r\n\r\n@Component({\r\n  selector: 'UserRoleAssign',\r\n  templateUrl: './user-role-assign.component.html',\r\n  styleUrls: ['./user-role-assign.component.css']\r\n})\r\nexport class UserRoleAssignComponent{\r\n \r\n  @ViewChild('createEditUserRoleAssignModal', { static: true }) createEditUserRoleAssignModal: CreateEditUserRoleAssignModalComponent;\r\n  @ViewChild('dataTable', { static: true }) dataTable: Table;\r\n  @ViewChild('paginator', { static:true}) paginator: Paginator;\r\n  filterText = '';\r\n\r\n  primengTableHelper: PrimengTableHelper;\r\n\r\n  constructor(\r\n    private _userRoleAssignService: UserRoleAssignService,\r\n    private _alertifyService: AlertifyService\r\n  ) {\r\n    this.primengTableHelper = new PrimengTableHelper();\r\n  }\r\n\r\n\r\n  getUserRoles(event?: LazyLoadEvent) {\r\n    if (this.primengTableHelper.shouldResetPaging(event)) {\r\n      this.paginator.changePage(0);\r\n      return;\r\n    }\r\n\r\n    this.primengTableHelper.showLoadingIndicator();\r\n     const fltr: IGetAllInputFilterDto = {\r\n      filter: this.filterText,\r\n      sorting:this.primengTableHelper.getSorting(this.dataTable),\r\n      skipCount: this.primengTableHelper.getSkipCount(this.paginator,event),\r\n      maxResultCount: this.primengTableHelper.getMaxResultCount(this.paginator, event)\r\n    }\r\n     this._userRoleAssignService.getAllUserRoleConfs(fltr).subscribe(result => {\r\n      const r = result as IPagedResultDto;\r\n       this.primengTableHelper.totalRecordsCount = r.totalCount;\r\n       this.primengTableHelper.records = r.items;\r\n      this.primengTableHelper.hideLoadingIndicator();\r\n    });\r\n  }\r\n  reloadPage(): void {\r\n    this.paginator.changePage(this.paginator.getPage());\r\n  }\r\n\r\n  createUserRole(): void {\r\n    this.createEditUserRoleAssignModal.show();\r\n  }\r\n\r\n  deleteUserRole(role: ICreateUserRoleAssignDto): void {\r\n    const result = confirm('are you sure want to remove?');\r\n    if (result) {\r\n      this._userRoleAssignService.deleteUserRoleConf(role.id)\r\n        .subscribe(() => {\r\n          this.reloadPage();\r\n          this._alertifyService.error('Successfully Deleted');\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ServiceProxyModule { }\r\n","export const environment = {\r\n  production: true,\r\n  apiUrl: 'api/'\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n // apiUrl: 'http://localhost:41682/api/'\r\n // apiUrl: 'http://localhost:20396/api/'\r\n  apiUrl: 'http://localhost:49815/api/'\r\n // apiUrl: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}