// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMS_API.Data;

namespace NMS_API.Migrations
{
    [DbContext(typeof(NmsDataContext))]
    [Migration("20191106103743_Currency Class added-Ashiq")]
    partial class CurrencyClassaddedAshiq
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NMS_API.Models.AnnualRequirementDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnReqMstId");

                    b.Property<string>("CountryOfOrigin");

                    b.Property<string>("Currency");

                    b.Property<double>("ExchangeRate");

                    b.Property<string>("HsCode");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("PackSize");

                    b.Property<string>("ProdName");

                    b.Property<string>("ProdType");

                    b.Property<int>("TentativeUnits");

                    b.Property<double>("TotalAmount");

                    b.Property<double>("TotalPrice");

                    b.Property<double>("TotalPriceInBdt");

                    b.Property<double>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("AnnReqMstId");

                    b.ToTable("AnnualRequirementDtls");
                });

            modelBuilder.Entity("NMS_API.Models.AnnualRequirementMst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnnualReqNo");

                    b.Property<int>("ImporterId");

                    b.Property<DateTime>("SubmissionDate");

                    b.HasKey("Id");

                    b.ToTable("AnnualRequirementMsts");
                });

            modelBuilder.Entity("NMS_API.Models.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationTime");

                    b.Property<int?>("CreatorUserId");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<double>("ExchangeRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<int?>("LastModifierUserId");

                    b.Property<string>("TickerIcon");

                    b.HasKey("Id");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("NMS_API.Models.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNo");

                    b.Property<string>("Designation");

                    b.Property<string>("Email");

                    b.Property<string>("EmpCode");

                    b.Property<string>("EmpName");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("EmployeeInfos");
                });

            modelBuilder.Entity("NMS_API.Models.ImporterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactName");

                    b.Property<string>("ContactNo");

                    b.Property<string>("District");

                    b.Property<string>("Division");

                    b.Property<string>("DlsLicenseNo");

                    b.Property<string>("DlsLicenseScan");

                    b.Property<string>("DlsLicenseType");

                    b.Property<string>("Email");

                    b.Property<string>("ImpCode");

                    b.Property<string>("IrcScan");

                    b.Property<string>("NidNo");

                    b.Property<string>("NidScan");

                    b.Property<string>("OrgName");

                    b.Property<string>("Position");

                    b.Property<string>("Upazila");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ImporterInfos");
                });

            modelBuilder.Entity("NMS_API.Models.ProformaInvoiceDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ApprovalStatus");

                    b.Property<double?>("ApprovedAmount");

                    b.Property<int>("ApprovedBy");

                    b.Property<double>("ExchangeRate");

                    b.Property<string>("HsCode");

                    b.Property<string>("Manufacturer");

                    b.Property<int>("MstId");

                    b.Property<int>("NoOfUnits");

                    b.Property<string>("PackSize");

                    b.Property<string>("ProdName");

                    b.Property<string>("ProdType");

                    b.Property<string>("Remarks");

                    b.Property<double>("TotalAmount");

                    b.Property<double>("TotalPrice");

                    b.Property<double>("TotalPriceInBdt");

                    b.Property<double>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("MstId");

                    b.ToTable("ProformaInvoiceDtls");
                });

            modelBuilder.Entity("NMS_API.Models.ProformaInvoiceMst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNo");

                    b.Property<DateTime?>("ApprovalDate");

                    b.Property<bool?>("ApprovalStatus");

                    b.Property<bool>("Confirmation");

                    b.Property<string>("CountryOfOrigin");

                    b.Property<string>("Currency");

                    b.Property<int>("ImporterId");

                    b.Property<string>("LitScan");

                    b.Property<string>("OtherDoc");

                    b.Property<string>("PiScan");

                    b.Property<string>("PortOfEntry");

                    b.Property<string>("PortOfLoading");

                    b.Property<DateTime>("ProformaDate");

                    b.Property<string>("ProformaInvoiceNo");

                    b.Property<DateTime?>("SubmissionDate");

                    b.Property<string>("TestReport");

                    b.HasKey("Id");

                    b.HasIndex("ImporterId");

                    b.ToTable("ProformaInvoiceMsts");
                });

            modelBuilder.Entity("NMS_API.Models.RoleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RoleInfos");
                });

            modelBuilder.Entity("NMS_API.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("NMS_API.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatedTerminal");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("UpdatedTerminal");

                    b.Property<string>("UserType");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("NMS_API.Models.UserRoleConf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoleConfs");
                });

            modelBuilder.Entity("NMS_API.Models.AnnualRequirementDtl", b =>
                {
                    b.HasOne("NMS_API.Models.AnnualRequirementMst")
                        .WithMany("AnnualRequirementDtls")
                        .HasForeignKey("AnnReqMstId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NMS_API.Models.ProformaInvoiceDtl", b =>
                {
                    b.HasOne("NMS_API.Models.ProformaInvoiceMst")
                        .WithMany("ProformaInvoiceDtls")
                        .HasForeignKey("MstId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NMS_API.Models.ProformaInvoiceMst", b =>
                {
                    b.HasOne("NMS_API.Models.ImporterInfo", "ImporterInfo")
                        .WithMany()
                        .HasForeignKey("ImporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
